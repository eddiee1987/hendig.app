{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Select = React.forwardRef<HTMLSelectElement, SelectProps>(\r\n  ({ className, children, ...props }, ref) => {\r\n    return (\r\n      <select\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </select>\r\n    )\r\n  }\r\n)\r\nSelect.displayName = \"Select\"\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, children, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </div>\r\n))\r\nSelectTrigger.displayName = \"SelectTrigger\"\r\n\r\nconst SelectValue = React.forwardRef<\r\n  HTMLSpanElement,\r\n  React.HTMLAttributes<HTMLSpanElement>\r\n>(({ className, ...props }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    className={cn(\"block truncate\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectValue.displayName = \"SelectValue\"\r\n\r\nconst SelectContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, children, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative mt-1 max-h-60 w-full overflow-auto rounded-md bg-background py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </div>\r\n))\r\nSelectContent.displayName = \"SelectContent\"\r\n\r\nconst SelectItem = React.forwardRef<\r\n  HTMLOptionElement,\r\n  React.OptionHTMLAttributes<HTMLOptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <option\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative cursor-default select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-accent hover:text-accent-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nSelectItem.displayName = \"SelectItem\"\r\n\r\nexport {\r\n  Select,\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectItem,\r\n} "],"names":[],"mappings":";;;;;;;;AAEA;AACA;AAHA;;;;AASA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAClC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,OAAO,WAAW,GAAG;AAErB,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6RACA;QAED,GAAG,KAAK;kBAER;;;;;;;AAGL,cAAc,WAAW,GAAG;AAE5B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kBAAkB;QAC/B,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gKACA;QAED,GAAG,KAAK;kBAER;;;;;;;AAGL,cAAc,WAAW,GAAG;AAE5B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iHACA;QAED,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/planlegging/NewTaskDialog.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { MaintenanceTask, RepeatInterval } from '@/types/maintenance'\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onOpenChange: (open: boolean) => void\r\n  onAddTask: (task: MaintenanceTask) => void\r\n}\r\n\r\nexport function NewTaskDialog({ open, onOpenChange, onAddTask }: Props) {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    customerId: '',\r\n    customerName: '',\r\n    address: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    type: 'vedlikehold' as MaintenanceTask['type'],\r\n    repeatInterval: 'never' as RepeatInterval,\r\n    repeatUntil: '',\r\n    notifications: {\r\n      customer: true,\r\n      worker: true,\r\n      reminderDays: 7\r\n    }\r\n  })\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    const task: MaintenanceTask = {\r\n      id: crypto.randomUUID(),\r\n      ...formData,\r\n      startDate: new Date(formData.startDate),\r\n      endDate: new Date(formData.endDate),\r\n      repeatUntil: formData.repeatUntil ? new Date(formData.repeatUntil) : undefined,\r\n      status: 'planlagt'\r\n    }\r\n    \r\n    onAddTask(task)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      <DialogContent className=\"max-w-2xl\">\r\n        <DialogHeader>\r\n          <DialogTitle>Ny vedlikeholdsoppgave</DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Skjemafelter for alle egenskaper */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <Input\r\n              placeholder=\"Tittel\"\r\n              value={formData.title}\r\n              onChange={e => setFormData(prev => ({ ...prev, title: e.target.value }))}\r\n            />\r\n            \r\n            <Select\r\n              value={formData.type}\r\n              onValueChange={value => setFormData(prev => ({ \r\n                ...prev, \r\n                type: value as MaintenanceTask['type'] \r\n              }))}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Velg type\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"vedlikehold\">Vedlikehold</SelectItem>\r\n                <SelectItem value=\"inspeksjon\">Inspeksjon</SelectItem>\r\n                <SelectItem value=\"annet\">Annet</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            \r\n            {/* ... flere felter ... */}\r\n          </div>\r\n          \r\n          <Button type=\"submit\">Lagre</Button>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n} "],"names":[],"mappings":";;;;AAEA;;;;;;AAEA;AACA;AACA;;;AANA;;;;;;AAeO,SAAS,cAAc,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAS;;IACpE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,OAAO;QACP,aAAa;QACb,YAAY;QACZ,cAAc;QACd,SAAS;QACT,WAAW;QACX,SAAS;QACT,MAAM;QACN,gBAAgB;QAChB,aAAa;QACb,eAAe;YACb,UAAU;YACV,QAAQ;YACR,cAAc;QAChB;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,MAAM,OAAwB;YAC5B,IAAI,OAAO,UAAU;YACrB,GAAG,QAAQ;YACX,WAAW,IAAI,KAAK,SAAS,SAAS;YACtC,SAAS,IAAI,KAAK,SAAS,OAAO;YAClC,aAAa,SAAS,WAAW,GAAG,IAAI,KAAK,SAAS,WAAW,IAAI;YACrE,QAAQ;QACV;QAEA,UAAU;IACZ;IAEA,qBACE,6LAAC;QAAO,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC;YAAc,WAAU;;8BACvB,6LAAC;8BACC,cAAA,6LAAC;kCAAY;;;;;;;;;;;8BAGf,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCAEtC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,oIAAA,CAAA,QAAK;oCACJ,aAAY;oCACZ,OAAO,SAAS,KAAK;oCACrB,UAAU,CAAA,IAAK,YAAY,CAAA,OAAQ,CAAC;gDAAE,GAAG,IAAI;gDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4CAAC,CAAC;;;;;;8CAGxE,6LAAC,qIAAA,CAAA,SAAM;oCACL,OAAO,SAAS,IAAI;oCACpB,eAAe,CAAA,QAAS,YAAY,CAAA,OAAQ,CAAC;gDAC3C,GAAG,IAAI;gDACP,MAAM;4CACR,CAAC;;sDAED,6LAAC,qIAAA,CAAA,gBAAa;sDACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;gDAAC,aAAY;;;;;;;;;;;sDAE3B,6LAAC,qIAAA,CAAA,gBAAa;;8DACZ,6LAAC,qIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAc;;;;;;8DAChC,6LAAC,qIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAa;;;;;;8DAC/B,6LAAC,qIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAQ;;;;;;;;;;;;;;;;;;;;;;;;sCAOhC,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;sCAAS;;;;;;;;;;;;;;;;;;;;;;;AAKhC;GA3EgB;KAAA","debugId":null}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/planlegging/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { format, addDays, addWeeks, addMonths, addYears } from 'date-fns'\r\nimport { nb } from 'date-fns/locale'\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Calendar } from \"@/components/ui/calendar\"\r\nimport { MaintenanceTask, RepeatInterval } from '@/types/maintenance'\r\nimport { NewTaskDialog } from '@/components/planlegging/NewTaskDialog'\r\nimport { TaskList } from '@/components/planlegging/TaskList'\r\nimport { TaskDetails } from '@/components/planlegging/TaskDetails'\r\n\r\nconst mockTasks: MaintenanceTask[] = [\r\n  {\r\n    id: '1',\r\n    title: 'Årlig takkontroll',\r\n    description: 'Grundig inspeksjon av tak og takrenner',\r\n    customerId: 'cust1',\r\n    customerName: 'Ola Nordmann',\r\n    address: 'Bassengvegen 18',\r\n    startDate: new Date(2024, 3, 15, 10, 0),\r\n    endDate: new Date(2024, 3, 15, 12, 0),\r\n    type: 'vedlikehold',\r\n    status: 'planlagt',\r\n    repeatInterval: 'yearly',\r\n    notifications: {\r\n      customer: true,\r\n      worker: true,\r\n      reminderDays: 7\r\n    }\r\n  },\r\n  // ... flere eksempeloppgaver\r\n]\r\n\r\nexport default function Planlegging() {\r\n  const [tasks, setTasks] = useState<MaintenanceTask[]>(mockTasks)\r\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date())\r\n  const [selectedTask, setSelectedTask] = useState<MaintenanceTask | null>(null)\r\n  const [isNewTaskDialogOpen, setIsNewTaskDialogOpen] = useState(false)\r\n\r\n  const handleAddTask = (task: MaintenanceTask) => {\r\n    const newTasks = [task]\r\n    \r\n    // Opprett repeterende oppgaver\r\n    if (task.repeatInterval !== 'never' && task.repeatUntil) {\r\n      let currentDate = task.startDate\r\n      let currentEndDate = task.endDate\r\n      \r\n      while (currentDate < task.repeatUntil) {\r\n        let nextDate: Date\r\n        let nextEndDate: Date\r\n        \r\n        switch (task.repeatInterval) {\r\n          case 'daily':\r\n            nextDate = addDays(currentDate, 1)\r\n            nextEndDate = addDays(currentEndDate, 1)\r\n            break\r\n          case 'weekly':\r\n            nextDate = addWeeks(currentDate, 1)\r\n            nextEndDate = addWeeks(currentEndDate, 1)\r\n            break\r\n          case 'monthly':\r\n            nextDate = addMonths(currentDate, 1)\r\n            nextEndDate = addMonths(currentEndDate, 1)\r\n            break\r\n          case 'yearly':\r\n            nextDate = addYears(currentDate, 1)\r\n            nextEndDate = addYears(currentEndDate, 1)\r\n            break\r\n        }\r\n        \r\n        if (nextDate > task.repeatUntil) break\r\n        \r\n        newTasks.push({\r\n          ...task,\r\n          id: `${task.id}-${format(nextDate, 'yyyy-MM-dd')}`,\r\n          startDate: nextDate,\r\n          endDate: nextEndDate\r\n        })\r\n        \r\n        currentDate = nextDate\r\n        currentEndDate = nextEndDate\r\n      }\r\n    }\r\n    \r\n    setTasks(prev => [...prev, ...newTasks])\r\n    setIsNewTaskDialogOpen(false)\r\n  }\r\n\r\n  const handleUpdateTaskStatus = (taskId: string, status: MaintenanceTask['status']) => {\r\n    setTasks(prev => prev.map(task => \r\n      task.id === taskId ? { ...task, status } : task\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h1 className=\"text-2xl font-bold\">Planlegging</h1>\r\n        <Button \r\n          className=\"bg-green-600 hover:bg-green-700\"\r\n          onClick={() => setIsNewTaskDialogOpen(true)}\r\n        >\r\n          + Ny oppgave\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\r\n        <div className=\"lg:col-span-8\">\r\n          <Card className=\"p-4\">\r\n            <Calendar\r\n              mode=\"single\"\r\n              selected={selectedDate}\r\n              onSelect={setSelectedDate}\r\n              locale={nb}\r\n              modifiers={{\r\n                hasTask: (date) => tasks.some(task => \r\n                  task.startDate.toDateString() === date.toDateString()\r\n                )\r\n              }}\r\n              modifiersStyles={{\r\n                hasTask: {\r\n                  fontWeight: 'bold',\r\n                  backgroundColor: '#f3f4f6'\r\n                }\r\n              }}\r\n            />\r\n          </Card>\r\n        </div>\r\n\r\n        <div className=\"lg:col-span-4 space-y-4\">\r\n          <TaskList\r\n            tasks={tasks}\r\n            selectedDate={selectedDate}\r\n            onSelectTask={setSelectedTask}\r\n          />\r\n          \r\n          {selectedTask && (\r\n            <TaskDetails\r\n              task={selectedTask}\r\n              onUpdateStatus={handleUpdateTaskStatus}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <NewTaskDialog\r\n        open={isNewTaskDialogOpen}\r\n        onOpenChange={setIsNewTaskDialogOpen}\r\n        onAddTask={handleAddTask}\r\n      />\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}