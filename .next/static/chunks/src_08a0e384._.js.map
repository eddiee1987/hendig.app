{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        (window as any).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/lager/page.tsx"],"sourcesContent":["// Lager modul for å holde oversikt over varer\r\n// Viser beholdning av impregnert staur, granstaur, skier, ståltråd\r\n'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { fetchLager, updateLager, fetchLagerHistorikk, registerLagerTransaksjon } from '@/lib/supabase'\r\nimport { Card } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\n\r\n// Typer for lager og historikk\r\ninterface LagerHistorikk {\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}\r\n\r\ninterface LagerForm {\r\n  [key: string]: number;\r\n}\r\n\r\nconst initialItems = [\r\n  { name: 'Impregnert staur', key: 'impregnert_staur' },\r\n  { name: 'Granstaur', key: 'granstaur' },\r\n  { name: 'Skier', key: 'skier' },\r\n  { name: 'Ståltråd', key: 'staltrad' }\r\n]\r\n\r\nexport default function LagerPage() {\r\n  const [lager, setLager] = useState<LagerForm>({})\r\n  const [loading, setLoading] = useState(true)\r\n  const [edit, setEdit] = useState(false)\r\n  const [form, setForm] = useState<LagerForm>({})\r\n  const [historikk, setHistorikk] = useState<LagerHistorikk[]>([])\r\n  // Nytt for transaksjonsskjema\r\n  const [transaksjon, setTransaksjon] = useState({\r\n    key: initialItems[0].key,\r\n    type: 'inntak',\r\n    antall: 1,\r\n    kommentar: ''\r\n  })\r\n  const [transLoading, setTransLoading] = useState(false)\r\n  const [transError, setTransError] = useState('')\r\n\r\n  useEffect(() => {\r\n    const getLager = async () => {\r\n      setLoading(true)\r\n      const data = await fetchLager()\r\n      setLager(data || {})\r\n      setForm(data || {})\r\n      setLoading(false)\r\n    }\r\n    const getHistorikk = async () => {\r\n      const data = await fetchLagerHistorikk()\r\n      setHistorikk(data || [])\r\n    }\r\n    getLager()\r\n    getHistorikk()\r\n  }, [])\r\n\r\n  const handleChange = (key: string, value: string) => {\r\n    setForm(f => ({ ...f, [key]: Number(value) }))\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    // Finn hvilke varer som er endret\r\n    const changedKeys = Object.keys(form).filter(key => form[key] !== lager[key]);\r\n\r\n    await updateLager(form);\r\n    setLager(form);\r\n    setEdit(false);\r\n\r\n    // Registrer manuell transaksjon for hver endret vare\r\n    for (const key of changedKeys) {\r\n      const gammeltAntall = lager[key] ?? 0;\r\n      const nyttAntall = form[key] ?? 0;\r\n      const diff = nyttAntall - gammeltAntall;\r\n      if (diff !== 0) {\r\n        // Finn riktig navn og lager_id fra initialItems\r\n        const item = initialItems.find(i => i.key === key);\r\n        if (!item) continue;\r\n        // Hent lager_id fra Supabase\r\n        const { data: lagerRows, error } = await fetchLager();\r\n        // Vi antar at fetchLager returnerer et objekt med key: antall, men vi trenger id. Hvis du har en bedre mapping, bruk den.\r\n        // Alternativt kan du hente lager_id fra en egen mapping eller fra Supabase direkte.\r\n        // Her antar vi at registerLagerTransaksjon kan ta imot key/navn.\r\n        await registerLagerTransaksjon({\r\n          key,\r\n          type: 'manuell',\r\n          antall: diff,\r\n          kommentar: `Manuell endring fra ${gammeltAntall} til ${nyttAntall} via rediger-knapp`\r\n        });\r\n      }\r\n    }\r\n\r\n    // Oppdater historikk etter lagring\r\n    const hist = await fetchLagerHistorikk();\r\n    setHistorikk(hist || []);\r\n  }\r\n\r\n  // Funksjon for å registrere transaksjon\r\n  const handleTransaksjon = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setTransLoading(true)\r\n    setTransError('')\r\n    try {\r\n      // Sikre riktig type for Supabase-funksjonen\r\n      const res = await registerLagerTransaksjon({\r\n        ...transaksjon,\r\n        type: transaksjon.type as 'inntak' | 'uttak'\r\n      })\r\n      if (res?.error) setTransError(res.error)\r\n      // Oppdater lager og historikk\r\n      const data = await fetchLager()\r\n      setLager(data || {})\r\n      setForm(data || {})\r\n      const hist = await fetchLagerHistorikk()\r\n      setHistorikk(hist || [])\r\n      setTransaksjon({ ...transaksjon, antall: 1, kommentar: '' })\r\n    } catch (err) {\r\n      setTransError('Uventet feil ved registrering')\r\n    } finally {\r\n      setTransLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8\">\r\n      <div className=\"max-w-4xl mx-auto space-y-10\">\r\n        <h1 className=\"text-4xl font-bold text-white mb-2\">Lagerbeholdning</h1>\r\n        <p className=\"text-gray-400 mb-8\">Hold oversikt, rediger og registrer transaksjoner på lageret.</p>\r\n\r\n        {/* Lagerkort */}\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\">\r\n          {initialItems.map(item => (\r\n            <Card key={item.key} className=\"p-6 flex flex-col items-center bg-gray-800 border border-gray-700\">\r\n              <span className=\"text-lg text-gray-300 mb-2\">{item.name}</span>\r\n              {edit ? (\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"w-20 text-center rounded bg-gray-700 text-white border border-gray-600 focus:ring-blue-500 focus:border-blue-500\"\r\n                  value={form[item.key] ?? 0}\r\n                  onChange={e => handleChange(item.key, e.target.value)}\r\n                  min={0}\r\n                />\r\n              ) : (\r\n                <span className=\"text-3xl font-bold text-white\">{lager[item.key] ?? 0}</span>\r\n              )}\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex gap-4 mt-4\">\r\n          {edit ? (\r\n            <Button onClick={handleSave} className=\"bg-blue-600 hover:bg-blue-700\">Lagre</Button>\r\n          ) : (\r\n            <Button onClick={() => setEdit(true)} className=\"bg-gray-700 hover:bg-gray-600\">Rediger</Button>\r\n          )}\r\n          {edit && (\r\n            <Button onClick={() => { setEdit(false); setForm(lager) }} className=\"bg-gray-500 hover:bg-gray-400\">Avbryt</Button>\r\n          )}\r\n        </div>\r\n\r\n        \r\n\r\n        {/* Transaksjonsskjema */}\r\n        <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 mt-10\">\r\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">Registrer transaksjon</h2>\r\n          <form onSubmit={handleTransaksjon} className=\"flex flex-col md:flex-row gap-4 items-end\">\r\n            <div>\r\n              <label className=\"block text-gray-300 mb-1\">Vare</label>\r\n              <select\r\n                className=\"rounded bg-gray-700 text-white border border-gray-600\"\r\n                value={transaksjon.key}\r\n                onChange={e => setTransaksjon(t => ({ ...t, key: e.target.value }))}\r\n              >\r\n                {initialItems.map(item => (\r\n                  <option key={item.key} value={item.key}>{item.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-gray-300 mb-1\">Type</label>\r\n              <select\r\n                className=\"rounded bg-gray-700 text-white border border-gray-600\"\r\n                value={transaksjon.type}\r\n                onChange={e => setTransaksjon(t => ({ ...t, type: e.target.value }))}\r\n              >\r\n                <option value=\"inntak\">Inntak</option>\r\n                <option value=\"uttak\">Uttak</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-gray-300 mb-1\">Antall</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"w-24 rounded bg-gray-700 text-white border border-gray-600\"\r\n                value={transaksjon.antall}\r\n                min={1}\r\n                onChange={e => setTransaksjon(t => ({ ...t, antall: Number(e.target.value) }))}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <label className=\"block text-gray-300 mb-1\">Kommentar</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full rounded bg-gray-700 text-white border border-gray-600\"\r\n                value={transaksjon.kommentar}\r\n                onChange={e => setTransaksjon(t => ({ ...t, kommentar: e.target.value }))}\r\n                placeholder=\"Valgfritt\"\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 min-w-[120px]\" disabled={transLoading}>\r\n              {transLoading ? 'Lagrer...' : 'Registrer'}\r\n            </Button>\r\n          </form>\r\n          {transError && <p className=\"text-red-400 mt-2\">{transError}</p>}\r\n        </div>\r\n\r\n\r\n\r\n        {/* Historikk */}\r\n        <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 mt-10\">\r\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">Lagerhistorikk</h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full text-left text-gray-300\">\r\n              <thead>\r\n                <tr className=\"border-b border-gray-700\">\r\n                  <th className=\"py-2\">Dato</th>\r\n                  <th className=\"py-2\">Vare</th>\r\n                  <th className=\"py-2\">Type</th>\r\n                  <th className=\"py-2\">Antall</th>\r\n                  <th className=\"py-2\">Kommentar</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {historikk.map((h, i) => (\r\n                  <tr key={i} className=\"border-b border-gray-700\">\r\n                    <td className=\"py-2\">{new Date(h.created_at).toLocaleString('nb-NO')}</td>\r\n                    <td className=\"py-2\">{h.navn}</td>\r\n                    <td className=\"py-2\">{h.type === 'inntak' ? 'Inntak' : 'Uttak'}</td>\r\n                    <td className=\"py-2\">{h.antall}</td>\r\n                    <td className=\"py-2\">{h.kommentar}</td>\r\n                  </tr>\r\n                ))}\r\n                {historikk.length === 0 && (\r\n                  <tr><td colSpan={5} className=\"text-center py-4 text-gray-500\">Ingen historikk funnet</td></tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}