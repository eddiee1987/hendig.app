{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAErE,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,sBAAsB,uCAAkB;AAEpD,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/timeforing/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\n\r\ninterface TimeEntry {\r\n  id: string\r\n  date: string\r\n  startTime: string\r\n  endTime: string\r\n  project: string\r\n  comments: string\r\n  totalHours?: number\r\n}\r\n\r\nexport default function TimeforingPage() {\r\n  const [timeEntries, setTimeEntries] = useState<TimeEntry[]>([])\r\n  const [newEntry, setNewEntry] = useState<Partial<TimeEntry>>({\r\n    date: new Date().toISOString().split('T')[0],\r\n    startTime: '',\r\n    endTime: '',\r\n    project: '',\r\n    comments: ''\r\n  })\r\n  const [selectedProject, setSelectedProject] = useState<string>('all')\r\n  const [timeRange, setTimeRange] = useState<'week' | 'month' | 'all'>('all')\r\n\r\n  // Funksjon for å beregne timer mellom to tidspunkter\r\n  const calculateHours = (startTime: string, endTime: string): number => {\r\n    const [startHour, startMinute] = startTime.split(':').map(Number)\r\n    const [endHour, endMinute] = endTime.split(':').map(Number)\r\n    \r\n    let hours = endHour - startHour\r\n    let minutes = endMinute - startMinute\r\n    \r\n    if (minutes < 0) {\r\n      hours -= 1\r\n      minutes += 60\r\n    }\r\n    \r\n    return Number((hours + minutes / 60).toFixed(2))\r\n  }\r\n\r\n  // Beregn total arbeidstid for alle entries\r\n  const calculateTotalHours = (entries: TimeEntry[]): number => {\r\n    return entries.reduce((total, entry) => {\r\n      if (entry.startTime && entry.endTime) {\r\n        return total + calculateHours(entry.startTime, entry.endTime)\r\n      }\r\n      return total\r\n    }, 0)\r\n  }\r\n\r\n  // Last inn eksisterende timeføringer fra Supabase\r\n  useEffect(() => {\r\n    fetchTimeEntries()\r\n  }, [])\r\n\r\n  async function fetchTimeEntries() {\r\n    try {\r\n      console.log('Henter timeføringer...')\r\n      const { data, error } = await supabase\r\n        .from('time_entries')\r\n        .select('*')\r\n        .order('date', { ascending: false })\r\n      \r\n      if (error) {\r\n        console.error('Supabase error:', error)\r\n        throw error\r\n      }\r\n      \r\n      // Konverter data fra Supabase format til applikasjonens format\r\n      const formattedEntries = data.map((entry: any) => ({\r\n        id: entry.id,\r\n        date: entry.date,\r\n        startTime: entry.start_time.substring(0, 5), // Format HH:MM\r\n        endTime: entry.end_time.substring(0, 5), // Format HH:MM\r\n        project: entry.project,\r\n        comments: entry.comments || '',\r\n        totalHours: entry.total_hours\r\n      }))\r\n      \r\n      console.log('Mottatt timeføringer:', formattedEntries)\r\n      setTimeEntries(formattedEntries || [])\r\n    } catch (error) {\r\n      console.error('Fetch error:', error)\r\n      // Vis feilmelding til bruker\r\n      alert('Kunne ikke hente timeføringer. Prøv igjen senere.')\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target\r\n    setNewEntry(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    try {\r\n      const totalHours = calculateHours(newEntry.startTime || '', newEntry.endTime || '')\r\n      \r\n      // Forbered data for Supabase\r\n      const timeEntryData = {\r\n        date: newEntry.date,\r\n        start_time: newEntry.startTime,\r\n        end_time: newEntry.endTime,\r\n        project: newEntry.project,\r\n        comments: newEntry.comments,\r\n        total_hours: totalHours\r\n      }\r\n      \r\n      // Lagre til Supabase\r\n      const { data, error } = await supabase\r\n        .from('time_entries')\r\n        .insert([timeEntryData])\r\n        .select()\r\n      \r\n      if (error) {\r\n        console.error('Supabase insert error:', error)\r\n        throw error\r\n      }\r\n      \r\n      // Konverter den returnerte posten til applikasjonens format\r\n      const newTimeEntry: TimeEntry = {\r\n        id: data[0].id,\r\n        date: data[0].date,\r\n        startTime: data[0].start_time.substring(0, 5),\r\n        endTime: data[0].end_time.substring(0, 5),\r\n        project: data[0].project,\r\n        comments: data[0].comments || '',\r\n        totalHours: data[0].total_hours\r\n      }\r\n      \r\n      // Oppdater lokal state\r\n      setTimeEntries(prev => [newTimeEntry, ...prev])\r\n      \r\n      // Tilbakestill skjema\r\n      setNewEntry({\r\n        date: new Date().toISOString().split('T')[0],\r\n        startTime: '',\r\n        endTime: '',\r\n        project: '',\r\n        comments: ''\r\n      })\r\n      \r\n      console.log('Timeføring lagret:', newTimeEntry)\r\n    } catch (error) {\r\n      console.error('Submit error:', error)\r\n      alert('Kunne ikke lagre timeføring. Prøv igjen senere.')\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm('Er du sikker på at du vil slette denne timeføringen?')) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('time_entries')\r\n          .delete()\r\n          .eq('id', id)\r\n        \r\n        if (error) {\r\n          console.error('Supabase delete error:', error)\r\n          throw error\r\n        }\r\n        \r\n        // Oppdater lokal state\r\n        setTimeEntries(prev => prev.filter(entry => entry.id !== id))\r\n        console.log('Timeføring slettet:', id)\r\n      } catch (error) {\r\n        console.error('Delete error:', error)\r\n        alert('Kunne ikke slette timeføring. Prøv igjen senere.')\r\n      }\r\n    }\r\n  }\r\n\r\n  const filteredEntries = timeEntries.filter(entry => {\r\n    const projectMatch = selectedProject === 'all' || entry.project === selectedProject\r\n    const date = new Date(entry.date)\r\n    const now = new Date()\r\n    \r\n    let dateMatch = true\r\n    if (timeRange === 'week') {\r\n      const weekAgo = new Date(now.setDate(now.getDate() - 7))\r\n      dateMatch = date >= weekAgo\r\n    } else if (timeRange === 'month') {\r\n      const monthAgo = new Date(now.setMonth(now.getMonth() - 1))\r\n      dateMatch = date >= monthAgo\r\n    }\r\n    \r\n    return projectMatch && dateMatch\r\n  })\r\n\r\n  const projects = Array.from(new Set(timeEntries.map(entry => entry.project)))\r\n\r\n  const exportToCSV = () => {\r\n    const headers = ['Dato', 'Prosjekt', 'Starttid', 'Sluttid', 'Timer', 'Kommentarer']\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...filteredEntries.map(entry => [\r\n        entry.date,\r\n        entry.project,\r\n        entry.startTime,\r\n        entry.endTime,\r\n        entry.totalHours,\r\n        `\"${entry.comments}\"`\r\n      ].join(','))\r\n    ].join('\\n')\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\r\n    const link = document.createElement('a')\r\n    link.href = URL.createObjectURL(blob)\r\n    link.download = 'timeforing.csv'\r\n    link.click()\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-12\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">\r\n              Timeføring\r\n            </h1>\r\n            <p className=\"text-gray-400 mt-2\">Hold oversikt over dine timer</p>\r\n          </div>\r\n          <button\r\n            onClick={exportToCSV}\r\n            className=\"bg-gray-800 hover:bg-gray-700 text-gray-300 px-6 py-3 rounded-full flex items-center gap-2 shadow-sm border border-gray-700 transition-all duration-200 hover:shadow-md\"\r\n          >\r\n            <span>Eksporter CSV</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Statistikk-kort */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Total arbeidstid</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-blue-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">\r\n              {calculateTotalHours(filteredEntries).toFixed(2)} timer\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Registreringer</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-indigo-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">\r\n              {filteredEntries.length}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Gjennomsnitt per dag</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-purple-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">\r\n              {(calculateTotalHours(filteredEntries) / (filteredEntries.length || 1)).toFixed(2)} timer\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtreringsvalg */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-6 mb-12 shadow-sm border border-gray-700\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <select\r\n              value={selectedProject}\r\n              onChange={(e) => setSelectedProject(e.target.value)}\r\n              className=\"rounded-full border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n            >\r\n              <option value=\"all\">Alle prosjekter</option>\r\n              {projects.map(project => (\r\n                <option key={project} value={project}>{project}</option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value as 'week' | 'month' | 'all')}\r\n              className=\"rounded-full border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n            >\r\n              <option value=\"all\">All tid</option>\r\n              <option value=\"week\">Siste uke</option>\r\n              <option value=\"month\">Siste måned</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Registreringsskjema */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-8 mb-12 shadow-sm border border-gray-700\">\r\n          <h2 className=\"text-2xl font-semibold mb-6 text-white\">Registrer timer</h2>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Dato</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  value={newEntry.date}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Prosjekt</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"project\"\r\n                  value={newEntry.project}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Starttid</label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"startTime\"\r\n                  value={newEntry.startTime}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Sluttid</label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"endTime\"\r\n                  value={newEntry.endTime}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-400\">Kommentarer</label>\r\n              <textarea\r\n                name=\"comments\"\r\n                value={newEntry.comments}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow-sm transition-colors\"\r\n              >\r\n                Lagre timer\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Liste over timeføringer */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700\">\r\n          <h2 className=\"text-2xl font-semibold mb-6 text-white\">Registrerte timer</h2>\r\n          <div className=\"space-y-4\">\r\n            {filteredEntries.map(entry => (\r\n              <div key={entry.id} className=\"border-b border-gray-700 pb-4 last:border-b-0\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div>\r\n                    <p className=\"font-medium text-white\">{entry.project}</p>\r\n                    <p className=\"text-sm text-gray-400\">\r\n                      {new Date(entry.date).toLocaleDateString('nb-NO')} ({entry.startTime} - {entry.endTime})\r\n                    </p>\r\n                    <p className=\"text-sm text-blue-400 font-medium\">\r\n                      Timer: {entry.totalHours?.toFixed(2)}\r\n                    </p>\r\n                    {entry.comments && (\r\n                      <p className=\"text-sm text-gray-500 mt-1\">{entry.comments}</p>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    onClick={() => handleDelete(entry.id)}\r\n                    className=\"text-red-500 hover:text-red-600\"\r\n                  >\r\n                    Slett\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {filteredEntries.length === 0 && (\r\n              <p className=\"text-gray-500 text-center\">Ingen timeføringer registrert</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}