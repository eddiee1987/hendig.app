{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        (window as any).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/timeforing/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\n\r\ninterface TimeEntry {\r\n  id: string\r\n  date: string\r\n  startTime: string\r\n  endTime: string\r\n  project: string\r\n  comments: string\r\n  totalHours?: number\r\n}\r\n\r\nexport default function TimeforingPage() {\r\n  const [timeEntries, setTimeEntries] = useState<TimeEntry[]>([])\r\n  const [newEntry, setNewEntry] = useState<Partial<TimeEntry>>({\r\n    date: new Date().toISOString().split('T')[0],\r\n    startTime: '',\r\n    endTime: '',\r\n    project: '',\r\n    comments: ''\r\n  })\r\n  const [selectedProject, setSelectedProject] = useState<string>('all')\r\n  const [timeRange, setTimeRange] = useState<'week' | 'month' | 'all'>('all')\r\n\r\n  // Ikoner for prosjekttyper\r\n  const projectOptions = [\r\n    { value: 'Skigard', label: 'Skigard', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"4\" y=\"10\" width=\"16\" height=\"4\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M8 10V6m8 4V6\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n    { value: 'Torvtak', label: 'Torvtak', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"3\" y=\"12\" width=\"18\" height=\"7\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M3 12l9-7 9 7\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n    { value: 'Administrasjon', label: 'Administrasjon', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M8 4v16M16 4v16\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n    { value: 'Transport', label: 'Transport', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"3\" y=\"13\" width=\"18\" height=\"6\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M5 13V7a2 2 0 012-2h10a2 2 0 012 2v6\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n    { value: 'Kløyving', label: 'Kløyving', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M12 3v18M6 8l6 6 6-6\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n    { value: 'Trefelling', label: 'Trefelling', icon: (\r\n      <svg className=\"w-5 h-5 inline mr-2 text-emerald-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M12 2v20M6 18l6-6 6 6\" strokeWidth=\"2\" /></svg>\r\n    ) },\r\n  ]\r\n\r\n  // Funksjon for å beregne timer mellom to tidspunkter\r\n  const calculateHours = (startTime: string, endTime: string): number => {\r\n    const [startHour, startMinute] = startTime.split(':').map(Number)\r\n    const [endHour, endMinute] = endTime.split(':').map(Number)\r\n    \r\n    let hours = endHour - startHour\r\n    let minutes = endMinute - startMinute\r\n    \r\n    if (minutes < 0) {\r\n      hours -= 1\r\n      minutes += 60\r\n    }\r\n    \r\n    return Number((hours + minutes / 60).toFixed(2))\r\n  }\r\n\r\n  // Beregn total arbeidstid for alle entries\r\n  const calculateTotalHours = (entries: TimeEntry[]): number => {\r\n    return entries.reduce((total, entry) => {\r\n      if (entry.startTime && entry.endTime) {\r\n        return total + calculateHours(entry.startTime, entry.endTime)\r\n      }\r\n      return total\r\n    }, 0)\r\n  }\r\n\r\n  // Summering for dag, uke, måned\r\n  const today = new Date().toISOString().split('T')[0]\r\n  const now = new Date()\r\n  const startOfWeek = new Date(now)\r\n  startOfWeek.setDate(now.getDate() - now.getDay())\r\n  const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1)\r\n\r\n  const dailyHours = useMemo(() => calculateTotalHours(timeEntries.filter(e => e.date === today)), [timeEntries, today])\r\n  const weeklyHours = useMemo(() => calculateTotalHours(timeEntries.filter(e => new Date(e.date) >= startOfWeek)), [timeEntries])\r\n  const monthlyHours = useMemo(() => calculateTotalHours(timeEntries.filter(e => new Date(e.date) >= startOfMonth)), [timeEntries])\r\n\r\n  // Last inn eksisterende timeføringer fra Supabase\r\n  useEffect(() => {\r\n    fetchTimeEntries()\r\n  }, [])\r\n\r\n  async function fetchTimeEntries() {\r\n    try {\r\n      console.log('Henter timeføringer...')\r\n      const { data, error } = await supabase\r\n        .from('time_entries')\r\n        .select('*')\r\n        .order('date', { ascending: false })\r\n      \r\n      if (error) {\r\n        console.error('Supabase error:', error)\r\n        throw error\r\n      }\r\n      \r\n      // Konverter data fra Supabase format til applikasjonens format\r\n      const formattedEntries = data.map((entry: any) => ({\r\n        id: entry.id,\r\n        date: entry.date,\r\n        startTime: entry.start_time.substring(0, 5), // Format HH:MM\r\n        endTime: entry.end_time.substring(0, 5), // Format HH:MM\r\n        project: entry.project,\r\n        comments: entry.comments || '',\r\n        totalHours: entry.total_hours\r\n      }))\r\n      \r\n      console.log('Mottatt timeføringer:', formattedEntries)\r\n      setTimeEntries(formattedEntries || [])\r\n    } catch (error) {\r\n      console.error('Fetch error:', error)\r\n      // Vis feilmelding til bruker\r\n      alert('Kunne ikke hente timeføringer. Prøv igjen senere.')\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target\r\n    setNewEntry(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n\r\n    // Get the date from the form input\r\n    const entryDate = new Date(newEntry.date || '');\r\n    const today = new Date();\r\n\r\n    // Set the time of today to midnight for accurate date comparison\r\n    today.setHours(0, 0, 0, 0);\r\n    entryDate.setHours(0, 0, 0, 0);\r\n\r\n    // Check if the entry date is in the future\r\n    if (entryDate > today) {\r\n      alert('Du kan ikke føre timer fram i tid.');\r\n      return; // Prevent submission\r\n    }\r\n    \r\n    try {\r\n      const totalHours = calculateHours(newEntry.startTime || '', newEntry.endTime || '')\r\n      \r\n      // Forbered data for Supabase\r\n      const timeEntryData = {\r\n        date: newEntry.date,\r\n        start_time: newEntry.startTime,\r\n        end_time: newEntry.endTime,\r\n        project: newEntry.project,\r\n        comments: newEntry.comments,\r\n        total_hours: totalHours\r\n      }\r\n      \r\n      // Lagre til Supabase\r\n      const { data, error } = await supabase\r\n        .from('time_entries')\r\n        .insert([timeEntryData])\r\n        .select()\r\n      \r\n      if (error) {\r\n        console.error('Supabase insert error:', error)\r\n        throw error\r\n      }\r\n      \r\n      // Konverter den returnerte posten til applikasjonens format\r\n      const newTimeEntry: TimeEntry = {\r\n        id: data[0].id,\r\n        date: data[0].date,\r\n        startTime: data[0].start_time.substring(0, 5),\r\n        endTime: data[0].end_time.substring(0, 5),\r\n        project: data[0].project,\r\n        comments: data[0].comments || '',\r\n        totalHours: data[0].total_hours\r\n      }\r\n      \r\n      // Oppdater lokal state\r\n      setTimeEntries(prev => [newTimeEntry, ...prev])\r\n      \r\n      // Tilbakestill skjema\r\n      setNewEntry({\r\n        date: new Date().toISOString().split('T')[0],\r\n        startTime: '',\r\n        endTime: '',\r\n        project: '',\r\n        comments: ''\r\n      })\r\n      \r\n      console.log('Timeføring lagret:', newTimeEntry)\r\n    } catch (error) {\r\n      console.error('Submit error:', error)\r\n      alert('Kunne ikke lagre timeføring. Prøv igjen senere.')\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm('Er du sikker på at du vil slette denne timeføringen?')) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('time_entries')\r\n          .delete()\r\n          .eq('id', id)\r\n        \r\n        if (error) {\r\n          console.error('Supabase delete error:', error)\r\n          throw error\r\n        }\r\n        \r\n        // Oppdater lokal state\r\n        setTimeEntries(prev => prev.filter(entry => entry.id !== id))\r\n        console.log('Timeføring slettet:', id)\r\n      } catch (error) {\r\n        console.error('Delete error:', error)\r\n        alert('Kunne ikke slette timeføring. Prøv igjen senere.')\r\n      }\r\n    }\r\n  }\r\n\r\n  const filteredEntries = timeEntries.filter(entry => {\r\n    const projectMatch = selectedProject === 'all' || entry.project === selectedProject\r\n    const date = new Date(entry.date)\r\n    const now = new Date()\r\n    \r\n    let dateMatch = true\r\n    if (timeRange === 'week') {\r\n      const weekAgo = new Date(now.setDate(now.getDate() - 7))\r\n      dateMatch = date >= weekAgo\r\n    } else if (timeRange === 'month') {\r\n      const monthAgo = new Date(now.setMonth(now.getMonth() - 1))\r\n      dateMatch = date >= monthAgo\r\n    }\r\n    \r\n    return projectMatch && dateMatch\r\n  })\r\n\r\n  const projects = Array.from(new Set(timeEntries.map(entry => entry.project)))\r\n\r\n  const exportToCSV = () => {\r\n    const headers = ['Dato', 'Prosjekt', 'Starttid', 'Sluttid', 'Timer', 'Kommentarer']\r\n    const csvContent = [\r\n      headers.join(','),\r\n      ...filteredEntries.map(entry => [\r\n        entry.date,\r\n        entry.project,\r\n        entry.startTime,\r\n        entry.endTime,\r\n        entry.totalHours,\r\n        `\"${entry.comments}\"`\r\n      ].join(','))\r\n    ].join('\\n')\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\r\n    const link = document.createElement('a')\r\n    link.href = URL.createObjectURL(blob)\r\n    link.download = 'timeforing.csv'\r\n    link.click()\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-12\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">\r\n              Timeføring\r\n            </h1>\r\n            <p className=\"text-gray-400 mt-2\">Hold oversikt over dine timer</p>\r\n          </div>\r\n          <div className=\"flex gap-4\">\r\n            <button\r\n              onClick={exportToCSV}\r\n              className=\"bg-gray-800 hover:bg-gray-700 text-gray-300 px-6 py-3 rounded-full flex items-center gap-2 shadow-sm border border-gray-700 transition-all duration-200 hover:shadow-md\"\r\n            >\r\n              <span>Eksporter CSV</span>\r\n            </button>\r\n            <button\r\n              onClick={() => alert('Send til Fiken-funksjon kommer snart!')}\r\n              className=\"bg-blue-700 hover:bg-blue-800 text-white px-6 py-3 rounded-full flex items-center gap-2 shadow-sm border border-blue-800 transition-all duration-200 hover:shadow-md\"\r\n            >\r\n              <span>Send timeliste til Fiken</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Statistikk-kort */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Timer i dag</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-green-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"10\" strokeWidth=\"2\" /><path d=\"M12 6v6l4 2\" strokeWidth=\"2\" /></svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">{dailyHours.toFixed(2)} t</p>\r\n          </div>\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Timer denne uken</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-blue-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M8 4v16M16 4v16\" strokeWidth=\"2\" /></svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">{weeklyHours.toFixed(2)} t</p>\r\n          </div>\r\n          <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700 hover:shadow-md transition-all duration-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400 font-medium\">Timer denne måneden</h3>\r\n              <div className=\"w-12 h-12 rounded-full bg-purple-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><rect x=\"3\" y=\"12\" width=\"18\" height=\"7\" rx=\"2\" strokeWidth=\"2\" /><path d=\"M3 12l9-7 9 7\" strokeWidth=\"2\" /></svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-3xl font-bold text-white mt-4\">{monthlyHours.toFixed(2)} t</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtreringsvalg */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-6 mb-12 shadow-sm border border-gray-700\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <select\r\n              value={selectedProject}\r\n              onChange={(e) => setSelectedProject(e.target.value)}\r\n              className=\"rounded-full border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n            >\r\n              <option value=\"all\">Alle prosjekter</option>\r\n              {projects.map(project => (\r\n                <option key={project} value={project}>{project}</option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value as 'week' | 'month' | 'all')}\r\n              className=\"rounded-full border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n            >\r\n              <option value=\"all\">All tid</option>\r\n              <option value=\"week\">Siste uke</option>\r\n              <option value=\"month\">Siste måned</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Registreringsskjema */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-8 mb-12 shadow-sm border border-gray-700\">\r\n          <h2 className=\"text-2xl font-semibold mb-6 text-white\">Registrer timer</h2>\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Dato</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  value={newEntry.date}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Prosjekt</label>\r\n                <select\r\n                  name=\"project\"\r\n                  value={newEntry.project}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Velg prosjekt...</option>\r\n                  {projectOptions.map(opt => (\r\n                    <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Starttid</label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"startTime\"\r\n                  value={newEntry.startTime}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">Sluttid</label>\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"endTime\"\r\n                  value={newEntry.endTime}\r\n                  onChange={handleInputChange}\r\n                  className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-400\">Kommentarer</label>\r\n              <textarea\r\n                name=\"comments\"\r\n                value={newEntry.comments}\r\n                onChange={handleInputChange}\r\n                rows={3}\r\n                className=\"w-full rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow-sm transition-colors\"\r\n              >\r\n                Lagre timer\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Liste over timeføringer */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-700\">\r\n          <h2 className=\"text-2xl font-semibold mb-6 text-white\">Registrerte timer</h2>\r\n          <div className=\"space-y-4\">\r\n            {filteredEntries.map(entry => (\r\n              <div key={entry.id} className=\"border-b border-gray-700 pb-4 last:border-b-0\">\r\n                <div className=\"flex justify-between items-start\">\r\n                  <div>\r\n                    <p className=\"font-medium text-white\">{entry.project}</p>\r\n                    <p className=\"text-sm text-gray-400\">\r\n                      {new Date(entry.date).toLocaleDateString('nb-NO')} ({entry.startTime} - {entry.endTime})\r\n                    </p>\r\n                    <p className=\"text-sm text-blue-400 font-medium\">\r\n                      Timer: {entry.totalHours?.toFixed(2)}\r\n                    </p>\r\n                    {entry.comments && (\r\n                      <p className=\"text-sm text-gray-500 mt-1\">{entry.comments}</p>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    onClick={() => handleDelete(entry.id)}\r\n                    className=\"text-red-500 hover:text-red-600\"\r\n                  >\r\n                    Slett\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {filteredEntries.length === 0 && (\r\n              <p className=\"text-gray-500 text-center\">Ingen timeføringer registrert</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}