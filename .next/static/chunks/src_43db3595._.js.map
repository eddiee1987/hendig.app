{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        (window as any).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input } "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea } "],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/inspeksjoner/ny/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\n\r\ninterface Customer {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n}\r\n\r\nexport default function NyInspeksjon() {\r\n  const router = useRouter()\r\n  const [customers, setCustomers] = useState<Customer[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [submitStatus, setSubmitStatus] = useState<string | null>(null)\r\n  \r\n  // Form state\r\n  const [selectedCustomerId, setSelectedCustomerId] = useState('')\r\n  const [selectedCustomerName, setSelectedCustomerName] = useState('')\r\n  const [selectedCustomerAddress, setSelectedCustomerAddress] = useState('')\r\n  const [inspectionType, setInspectionType] = useState<'vårvedlikehold' | 'høstvedlikehold' | 'rehabilitering' | ''>('')\r\n  const [inspectionStatus, setInspectionStatus] = useState<'planlagt' | 'utført'>('planlagt')\r\n  const [inspectionDate, setInspectionDate] = useState('')\r\n  const [roofCondition, setRoofCondition] = useState('')\r\n  const [notes, setNotes] = useState('')\r\n  const [inspector, setInspector] = useState('')\r\n  const [sendSms, setSendSms] = useState(false)\r\n  \r\n  // Image handling\r\n  const [beforeImages, setBeforeImages] = useState<File[]>([])\r\n  const [afterImages, setAfterImages] = useState<File[]>([])\r\n  const [beforeImageUrls, setBeforeImageUrls] = useState<string[]>([])\r\n  const [afterImageUrls, setAfterImageUrls] = useState<string[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchCustomers()\r\n  }, [])\r\n\r\n  async function fetchCustomers() {\r\n    try {\r\n      setLoading(true)\r\n      const { data, error } = await supabase\r\n        .from('abonnementer')\r\n        .select('id, etternavn, adresse, kommune')\r\n      \r\n      if (error) {\r\n        console.error('Error fetching customers:', error)\r\n        setError('Kunne ikke hente kunder')\r\n        return\r\n      }\r\n      \r\n      setCustomers(data || [])\r\n    } catch (err) {\r\n      console.error('Unexpected error:', err)\r\n      setError('En uventet feil oppstod')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCustomerChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const customerId = e.target.value\r\n    setSelectedCustomerId(customerId)\r\n    \r\n    if (customerId) {\r\n      const customer = customers.find(c => c.id === customerId)\r\n      if (customer) {\r\n        setSelectedCustomerName(customer.etternavn)\r\n        setSelectedCustomerAddress(customer.adresse)\r\n      }\r\n    } else {\r\n      setSelectedCustomerName('')\r\n      setSelectedCustomerAddress('')\r\n    }\r\n  }\r\n\r\n  const handleBeforeImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const newImages = Array.from(e.target.files)\r\n      setBeforeImages(prev => [...prev, ...newImages])\r\n      const newUrls = newImages.map(file => URL.createObjectURL(file))\r\n      setBeforeImageUrls(prev => [...prev, ...newUrls])\r\n    }\r\n  }\r\n\r\n  const handleAfterImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const newImages = Array.from(e.target.files)\r\n      setAfterImages(prev => [...prev, ...newImages])\r\n      const newUrls = newImages.map(file => URL.createObjectURL(file))\r\n      setAfterImageUrls(prev => [...prev, ...newUrls])\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!selectedCustomerId || !inspectionType || !inspectionDate) {\r\n      setSubmitStatus('Vennligst fyll ut alle påkrevde felt')\r\n      return\r\n    }\r\n    try {\r\n      setSubmitStatus('Lagrer inspeksjon...')\r\n      // 1. Ensure bucket exists\r\n      try {\r\n        await supabase.storage.createBucket('inspeksjonsbilder', { public: true })\r\n      } catch (err: unknown) {\r\n        if (err instanceof Error && !err.message.includes('Bucket already exists')) {\r\n          console.error('Error creating bucket:', err)\r\n          throw new Error('Kunne ikke opprette bilde-lager')\r\n        }\r\n      }\r\n\r\n      // 2. Upload images with unique filenames\r\n      const beforeImageUrlsUpload: string[] = []\r\n      const afterImageUrlsUpload: string[] = []\r\n      const folder = `inspeksjoner/${selectedCustomerId}_${Date.now()}`\r\n      \r\n      for (const file of beforeImages) {\r\n        const uniqueName = `${Date.now()}-${file.name}`\r\n        const { error } = await supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .upload(`${folder}/for/${uniqueName}`, file, {\r\n            cacheControl: '3600',\r\n            upsert: false\r\n          })\r\n        \r\n        if (error) {\r\n          console.error('Error uploading before image:', error)\r\n          throw new Error(`Kunne ikke laste opp før-bilde: ${error.message}`)\r\n        }\r\n        \r\n        const { data: { publicUrl } } = supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .getPublicUrl(`${folder}/for/${uniqueName}`)\r\n        beforeImageUrlsUpload.push(publicUrl)\r\n      }\r\n\r\n      for (const file of afterImages) {\r\n        const uniqueName = `${Date.now()}-${file.name}`\r\n        const { error } = await supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .upload(`${folder}/etter/${uniqueName}`, file, {\r\n            cacheControl: '3600',\r\n            upsert: false\r\n          })\r\n        \r\n        if (error) {\r\n          console.error('Error uploading after image:', error)\r\n          throw new Error(`Kunne ikke laste opp etter-bilde: ${error.message}`)\r\n        }\r\n        \r\n        const { data: { publicUrl } } = supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .getPublicUrl(`${folder}/etter/${uniqueName}`)\r\n        afterImageUrlsUpload.push(publicUrl)\r\n      }\r\n      // 2. Lagre inspeksjonen med bilde-URLer\r\n      const inspectionData = {\r\n        customer_id: selectedCustomerId,\r\n        customer_name: selectedCustomerName,\r\n        customer_address: selectedCustomerAddress,\r\n        inspection_date: inspectionDate,\r\n        inspection_type: inspectionType,\r\n        status: inspectionStatus,\r\n        roof_condition: roofCondition,\r\n        notes: notes,\r\n        inspector: inspector,\r\n        before_images: beforeImageUrlsUpload,\r\n        after_images: afterImageUrlsUpload\r\n      }\r\n      const { error } = await supabase\r\n        .from('inspections')\r\n        .insert([inspectionData])\r\n      if (error) {\r\n        console.error('Error saving inspection:', error)\r\n        if (error.message.includes('relation \"inspections\" does not exist') || \r\n            error.message.includes('does not exist') ||\r\n            error.code === '42P01') {\r\n          setSubmitStatus(`Inspeksjonstabellen eksisterer ikke ennå. Vennligst kjør migrasjonen først.`)\r\n        } else {\r\n          setSubmitStatus(`Kunne ikke lagre inspeksjon: ${error.message}`)\r\n        }\r\n        return\r\n      }\r\n      // Oppdater abonnement ved utført vedlikehold\r\n      if (inspectionStatus === 'utført') {\r\n        if (inspectionType === 'vårvedlikehold' || inspectionType === 'høstvedlikehold') {\r\n          const fieldToUpdate = inspectionType === 'vårvedlikehold' ? 'var' : 'host'\r\n          const { error: updateError } = await supabase\r\n            .from('abonnementer')\r\n            .update({ [fieldToUpdate]: 'Ja' })\r\n            .eq('id', selectedCustomerId)\r\n          if (updateError) {\r\n            console.error('Error updating customer maintenance status:', updateError)\r\n          }\r\n        }\r\n      }\r\n      if (sendSms) {\r\n        console.log('SMS would be sent:', {\r\n          to: 'customer phone',\r\n          message: `Vi kommer for å utføre ${inspectionType} på taket ditt den ${inspectionDate}`\r\n        })\r\n      }\r\n      setSubmitStatus('Inspeksjon lagret!')\r\n      setTimeout(() => {\r\n        router.push('/inspeksjoner')\r\n      }, 1500)\r\n    } catch (err) {\r\n      console.error('Unexpected error:', err)\r\n      setSubmitStatus('En uventet feil oppstod')\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n        <div className=\"max-w-3xl mx-auto text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-400\">Laster kunder...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n      <div className=\"max-w-3xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-white mb-6\">Ny inspeksjon</h1>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-900/20 border border-red-800 text-red-400 px-4 py-3 rounded-xl mb-6\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {submitStatus && !submitStatus.includes('Kunne ikke') && !submitStatus.includes('Vennligst') && (\r\n          <div className=\"bg-green-900/20 border border-green-800 text-green-400 px-4 py-3 rounded-xl mb-6\">\r\n            {submitStatus}\r\n          </div>\r\n        )}\r\n\r\n        {submitStatus && (submitStatus.includes('Kunne ikke') || submitStatus.includes('Vennligst')) && (\r\n          <div className=\"bg-red-900/20 border border-red-800 text-red-400 px-4 py-3 rounded-xl mb-6\">\r\n            {submitStatus}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <Card className=\"p-6 bg-gray-800 border border-gray-700\">\r\n            <h2 className=\"text-lg font-semibold text-white mb-4\">Kundeinformasjon</h2>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">Velg kunde</label>\r\n                <select\r\n                  className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-white\"\r\n                  value={selectedCustomerId}\r\n                  onChange={handleCustomerChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Velg kunde...</option>\r\n                  {customers.map((customer) => (\r\n                    <option key={customer.id} value={customer.id}>\r\n                      {customer.etternavn} - {customer.adresse}, {customer.kommune}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">Type inspeksjon</label>\r\n                <select\r\n                  className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-white\"\r\n                  value={inspectionType}\r\n                  onChange={(e) => setInspectionType(e.target.value as any)}\r\n                  required\r\n                >\r\n                  <option value=\"\">Velg type...</option>\r\n                  <option value=\"vårvedlikehold\">Vårvedlikehold</option>\r\n                  <option value=\"høstvedlikehold\">Høstvedlikehold</option>\r\n                  <option value=\"rehabilitering\">Rehabilitering</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">Status</label>\r\n                <select\r\n                  className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-white\"\r\n                  value={inspectionStatus}\r\n                  onChange={(e) => setInspectionStatus(e.target.value as 'planlagt' | 'utført')}\r\n                >\r\n                  <option value=\"planlagt\">Planlagt</option>\r\n                  <option value=\"utført\">Utført</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">Dato</label>\r\n                <Input\r\n                  type=\"date\"\r\n                  value={inspectionDate}\r\n                  onChange={(e) => setInspectionDate(e.target.value)}\r\n                  required\r\n                  className=\"bg-gray-700 border-gray-600 text-white\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {inspectionStatus === 'utført' && (\r\n            <Card className=\"p-6 bg-gray-800 border border-gray-700\">\r\n              <h2 className=\"text-lg font-semibold text-white mb-4\">Inspeksjonsdetaljer</h2>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Taktilstand</label>\r\n                  <select\r\n                    className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 text-white\"\r\n                    value={roofCondition}\r\n                    onChange={(e) => setRoofCondition(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Velg tilstand...</option>\r\n                    <option value=\"god\">God</option>\r\n                    <option value=\"normal\">Normal</option>\r\n                    <option value=\"dårlig\">Dårlig</option>\r\n                    <option value=\"kritisk\">Kritisk</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Inspektør</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={inspector}\r\n                    onChange={(e) => setInspector(e.target.value)}\r\n                    placeholder=\"Navn på inspektør\"\r\n                    className=\"bg-gray-700 border-gray-600 text-white\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Før-bilder</label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={handleBeforeImageUpload}\r\n                    className=\"bg-gray-700 border-gray-600 text-white\"\r\n                  />\r\n                  {beforeImageUrls.length > 0 && (\r\n                    <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n                      {beforeImageUrls.map((url, index) => (\r\n                        <img\r\n                          key={index}\r\n                          src={url}\r\n                          alt={`Før-bilde ${index + 1}`}\r\n                          className=\"w-full h-24 object-cover rounded\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Etter-bilder</label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={handleAfterImageUpload}\r\n                    className=\"bg-gray-700 border-gray-600 text-white\"\r\n                  />\r\n                  {afterImageUrls.length > 0 && (\r\n                    <div className=\"grid grid-cols-3 gap-2 mt-2\">\r\n                      {afterImageUrls.map((url, index) => (\r\n                        <img\r\n                          key={index}\r\n                          src={url}\r\n                          alt={`Etter-bilde ${index + 1}`}\r\n                          className=\"w-full h-24 object-cover rounded\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">Notater</label>\r\n                  <Textarea\r\n                    value={notes}\r\n                    onChange={(e) => setNotes(e.target.value)}\r\n                    placeholder=\"Beskriv takets tilstand og eventuelle problemer...\"\r\n                    rows={4}\r\n                    className=\"bg-gray-700 border-gray-600 text-white\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"sendSms\"\r\n                    checked={sendSms}\r\n                    onChange={(e) => setSendSms(e.target.checked)}\r\n                    className=\"rounded border-gray-600 bg-gray-700 text-blue-600\"\r\n                  />\r\n                  <label htmlFor=\"sendSms\" className=\"text-gray-300\">\r\n                    Send SMS til kunde om utført vedlikehold\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          )}\r\n\r\n          <div className=\"flex justify-end space-x-4\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={() => router.push('/inspeksjoner')}\r\n              className=\"border-gray-600 text-gray-300 hover:bg-gray-700\"\r\n            >\r\n              Avbryt\r\n            </Button>\r\n            <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700\">\r\n              {inspectionStatus === 'planlagt' ? 'Planlegg inspeksjon' : 'Registrer utført inspeksjon'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}