{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (lagerError || !lagerRows || lagerRows.length === 0) {\r\n      return { error: 'Fant ikke varen i lageret' }\r\n    }\r\n    const lagerId = lagerRows[0].id\r\n    let nyttAntall = lagerRows[0].antall\r\n    if (type === 'inntak') {\r\n      nyttAntall += antall\r\n    } else {\r\n      if (lagerRows[0].antall < antall) {\r\n        return { error: 'Ikke nok på lager for uttak' }\r\n      }\r\n      nyttAntall -= antall\r\n    }\r\n    // Oppdater lagerbeholdning\r\n    const { error: updateError } = await supabase\r\n      .from('lager')\r\n      .update({ antall: nyttAntall })\r\n      .eq('id', lagerId)\r\n    if (updateError) {\r\n      return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n    }\r\n    // Registrer transaksjon\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/projectService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { Project, ScheduledProject } from '@/types/supabase'\r\n\r\n// Project functions\r\nexport async function getProjects() {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .order('created_at', { ascending: false })\r\n\r\n  if (error) {\r\n    console.error('Error fetching projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getProject(id: string) {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error(`Error fetching project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function createProject(project: Record<string, any>) {\r\n  console.log('Creating project with data:', project)\r\n  \r\n  try {\r\n    // Check if the Supabase client is properly initialized\r\n    console.log('Supabase client:', supabase)\r\n    \r\n    // Check if the table exists by trying to select a single row\r\n    const { data: tableCheck, error: tableError } = await supabase\r\n      .from('projects')\r\n      .select('id')\r\n      .limit(1)\r\n    \r\n    if (tableError) {\r\n      console.error('Error checking projects table:', tableError)\r\n      throw new Error(`Table check failed: ${tableError.message}`)\r\n    }\r\n    \r\n    console.log('Table check result:', tableCheck)\r\n    \r\n    // Proceed with insert\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .insert([project])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error)\r\n      throw new Error(`Insert failed: ${error.message}`)\r\n    }\r\n\r\n    console.log('Project created successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error('Exception in createProject:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateProject(id: string, project: Record<string, any>) {\r\n  console.log('Updating project with id:', id, 'and data:', project)\r\n  \r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .update(project)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error)\r\n      throw error\r\n    }\r\n\r\n    console.log('Project updated successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error(`Exception in updateProject for id ${id}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error deleting project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Scheduled Project functions\r\nexport async function getScheduledProjects() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getScheduledProjectsForDate(date: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .eq('scheduled_date', date)\r\n\r\n  if (error) {\r\n    console.error(`Error fetching scheduled projects for date ${date}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function scheduleProject(projectId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .insert([\r\n      {\r\n        project_id: projectId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\nexport async function unscheduleProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport async function unscheduleProjectByProjectIdAndDate(projectId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('project_id', projectId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/prosjekter/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport Link from 'next/link'\r\nimport { CalendarIcon } from '@heroicons/react/24/outline'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { getProjects, createProject, updateProject, deleteProject } from '@/services/projectService'\r\nimport { toast, Toaster } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\n// Convert between our internal Project format and Supabase format\r\nconst toSupabaseProject = (project: Partial<Project>) => {\r\n  // Create a clean object with all required fields\r\n  const supabaseProject: Record<string, any> = {\r\n    name: project.name || '',\r\n    description: project.description || '',\r\n    client: project.client || '',\r\n    status: project.status || 'active',\r\n    start_date: project.startDate || new Date().toISOString().split('T')[0],\r\n    priority: project.priority || 'medium'\r\n  }\r\n  \r\n  // Only add optional fields if they have values\r\n  if (project.endDate && project.endDate !== '') {\r\n    supabaseProject.end_date = project.endDate\r\n  }\r\n  \r\n  if (project.budget !== undefined && project.budget !== null) {\r\n    supabaseProject.budget = project.budget\r\n  }\r\n  \r\n  console.log('Converted project for Supabase:', supabaseProject)\r\n  return supabaseProject\r\n}\r\n\r\nconst fromSupabaseProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  client: project.client,\r\n  status: project.status as 'active' | 'completed' | 'archived',\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority as 'low' | 'medium' | 'high'\r\n})\r\n\r\nexport default function ProsjekterPage() {\r\n  const [projects, setProjects] = useState<Project[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [showAddModal, setShowAddModal] = useState(false)\r\n  const [showEditModal, setShowEditModal] = useState(false)\r\n  const [editingProject, setEditingProject] = useState<Project | null>(null)\r\n  const [newProject, setNewProject] = useState<Partial<Project>>({\r\n    name: '',\r\n    description: '',\r\n    client: '',\r\n    status: 'active',\r\n    startDate: new Date().toISOString().split('T')[0],\r\n    endDate: '',\r\n    budget: undefined,\r\n    priority: 'medium'\r\n  })\r\n\r\n  // Fetch projects from Supabase\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        const data = await getProjects()\r\n        setProjects(data.map(fromSupabaseProject))\r\n      } catch (error) {\r\n        console.error('Error fetching projects:', error)\r\n        toast.error('Kunne ikke hente prosjekter')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    \r\n    fetchProjects()\r\n  }, [])\r\n\r\n  const handleAddProject = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!newProject.name || !newProject.client) return\r\n\r\n    try {\r\n      const supabaseProject = toSupabaseProject(newProject)\r\n      const createdProject = await createProject(supabaseProject)\r\n      \r\n      if (createdProject) {\r\n        setProjects([fromSupabaseProject(createdProject), ...projects])\r\n        toast.success('Prosjekt opprettet')\r\n      }\r\n      \r\n      setNewProject({\r\n        name: '',\r\n        description: '',\r\n        client: '',\r\n        status: 'active',\r\n        startDate: new Date().toISOString().split('T')[0],\r\n        endDate: '',\r\n        budget: undefined,\r\n        priority: 'medium'\r\n      })\r\n      setShowAddModal(false)\r\n    } catch (error) {\r\n      console.error('Error creating project:', error)\r\n      toast.error('Kunne ikke opprette prosjekt')\r\n    }\r\n  }\r\n\r\n  const handleDeleteProject = async (id: string) => {\r\n    if (window.confirm('Er du sikker på at du vil slette dette prosjektet?')) {\r\n      try {\r\n        await deleteProject(id)\r\n        setProjects(projects.filter(project => project.id !== id))\r\n        toast.success('Prosjekt slettet')\r\n      } catch (error) {\r\n        console.error('Error deleting project:', error)\r\n        toast.error('Kunne ikke slette prosjekt')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleStatusChange = async (id: string, newStatus: Project['status']) => {\r\n    try {\r\n      const project = projects.find(p => p.id === id)\r\n      if (!project) return\r\n      \r\n      // Use the Supabase field name 'status'\r\n      await updateProject(id, { status: newStatus })\r\n      \r\n      setProjects(projects.map(project => \r\n        project.id === id ? { ...project, status: newStatus } : project\r\n      ))\r\n      \r\n      toast.success('Status oppdatert')\r\n    } catch (error) {\r\n      console.error('Error updating project status:', error)\r\n      toast.error('Kunne ikke oppdatere status')\r\n    }\r\n  }\r\n\r\n  const handleEditProject = (project: Project) => {\r\n    setEditingProject(project)\r\n    setShowEditModal(true)\r\n  }\r\n\r\n  const handleUpdateProject = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!editingProject) return\r\n\r\n    try {\r\n      const supabaseProject = toSupabaseProject(editingProject)\r\n      await updateProject(editingProject.id, supabaseProject)\r\n      \r\n      setProjects(projects.map(project => \r\n        project.id === editingProject.id ? editingProject : project\r\n      ))\r\n      \r\n      toast.success('Prosjekt oppdatert')\r\n      setShowEditModal(false)\r\n      setEditingProject(null)\r\n    } catch (error) {\r\n      console.error('Error updating project:', error)\r\n      toast.error('Kunne ikke oppdatere prosjekt')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">Prosjekter</h1>\r\n            <p className=\"text-gray-400 mt-2\">Administrer dine prosjekter</p>\r\n          </div>\r\n          <button\r\n            onClick={() => setShowAddModal(true)}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full flex items-center gap-2 shadow-sm transition-all duration-200\"\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n            <span>Nytt prosjekt</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Prosjektliste */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {projects.map(project => (\r\n            <div key={project.id} className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n              <div className=\"flex justify-between items-start mb-4\">\r\n                <h3 className=\"text-xl font-semibold text-white\">{project.name}</h3>\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                  project.status === 'active'\r\n                    ? 'bg-blue-900/50 text-blue-400'\r\n                    : project.status === 'completed'\r\n                    ? 'bg-green-900/50 text-green-400'\r\n                    : 'bg-gray-900/50 text-gray-400'\r\n                }`}>\r\n                  {project.status}\r\n                </span>\r\n              </div>\r\n              <p className=\"text-gray-400 mb-4\">{project.description}</p>\r\n              <div className=\"space-y-2 mb-4\">\r\n                <p className=\"text-sm text-gray-400\">Klient: <span className=\"text-white\">{project.client}</span></p>\r\n                <p className=\"text-sm text-gray-400\">Startdato: <span className=\"text-white\">{new Date(project.startDate).toLocaleDateString('nb-NO')}</span></p>\r\n                {project.endDate && (\r\n                  <p className=\"text-sm text-gray-400\">Sluttdato: <span className=\"text-white\">{new Date(project.endDate).toLocaleDateString('nb-NO')}</span></p>\r\n                )}\r\n                {project.budget && (\r\n                  <p className=\"text-sm text-gray-400\">Budsjett: <span className=\"text-white\">{project.budget.toLocaleString('nb-NO')} kr</span></p>\r\n                )}\r\n                <p className=\"text-sm text-gray-400\">Prioritet: <span className={`${\r\n                  project.priority === 'high' ? 'text-red-400' :\r\n                  project.priority === 'medium' ? 'text-yellow-400' :\r\n                  'text-green-400'\r\n                }`}>{project.priority}</span></p>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                <button\r\n                  onClick={() => handleEditProject(project)}\r\n                  className=\"px-3 py-1 rounded-lg text-sm bg-blue-900/50 text-blue-400 hover:bg-blue-900/70\"\r\n                >\r\n                  Endre\r\n                </button>\r\n                <button\r\n                  onClick={() => handleStatusChange(project.id, 'active')}\r\n                  className={`px-3 py-1 rounded-lg text-sm ${\r\n                    project.status === 'active'\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'bg-gray-700 text-gray-400 hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  Aktiv\r\n                </button>\r\n                <button\r\n                  onClick={() => handleStatusChange(project.id, 'completed')}\r\n                  className={`px-3 py-1 rounded-lg text-sm ${\r\n                    project.status === 'completed'\r\n                      ? 'bg-green-600 text-white'\r\n                      : 'bg-gray-700 text-gray-400 hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  Fullført\r\n                </button>\r\n                <button\r\n                  onClick={() => handleStatusChange(project.id, 'archived')}\r\n                  className={`px-3 py-1 rounded-lg text-sm ${\r\n                    project.status === 'archived'\r\n                      ? 'bg-gray-600 text-white'\r\n                      : 'bg-gray-700 text-gray-400 hover:bg-gray-600'\r\n                  }`}\r\n                >\r\n                  Arkivert\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteProject(project.id)}\r\n                  className=\"px-3 py-1 rounded-lg text-sm bg-red-900/50 text-red-400 hover:bg-red-900/70\"\r\n                >\r\n                  Slett\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Edit Modal */}\r\n        {showEditModal && editingProject && (\r\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center\">\r\n            <div className=\"bg-gray-800 rounded-2xl p-8 max-w-md w-full\">\r\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Endre prosjekt</h2>\r\n              <form onSubmit={handleUpdateProject} className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Prosjektnavn</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editingProject.name}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, name: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Beskrivelse</label>\r\n                  <textarea\r\n                    value={editingProject.description}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, description: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Klient</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editingProject.client}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, client: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Status</label>\r\n                  <select\r\n                    value={editingProject.status}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, status: e.target.value as Project['status'] })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"active\">Aktiv</option>\r\n                    <option value=\"completed\">Fullført</option>\r\n                    <option value=\"archived\">Arkivert</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Prioritet</label>\r\n                  <select\r\n                    value={editingProject.priority}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, priority: e.target.value as Project['priority'] })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"low\">Lav</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"high\">Høy</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Startdato</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={editingProject.startDate}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, startDate: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Sluttdato</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={editingProject.endDate || ''}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, endDate: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Budsjett</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={editingProject.budget || ''}\r\n                    onChange={(e) => setEditingProject({ ...editingProject, budget: e.target.value ? Number(e.target.value) : undefined })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end gap-4 mt-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setShowEditModal(false)\r\n                      setEditingProject(null)\r\n                    }}\r\n                    className=\"px-4 py-2 text-gray-400 hover:text-white\"\r\n                  >\r\n                    Avbryt\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                  >\r\n                    Lagre endringer\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal for å legge til nytt prosjekt */}\r\n        {showAddModal && (\r\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center\">\r\n            <div className=\"bg-gray-800 rounded-2xl p-8 max-w-md w-full\">\r\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Nytt prosjekt</h2>\r\n              <form onSubmit={handleAddProject} className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Prosjektnavn</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newProject.name}\r\n                    onChange={(e) => setNewProject({ ...newProject, name: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Beskrivelse</label>\r\n                  <textarea\r\n                    value={newProject.description}\r\n                    onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Klient</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newProject.client}\r\n                    onChange={(e) => setNewProject({ ...newProject, client: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Startdato</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newProject.startDate}\r\n                    onChange={(e) => setNewProject({ ...newProject, startDate: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Sluttdato</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newProject.endDate || ''}\r\n                    onChange={(e) => setNewProject({ ...newProject, endDate: e.target.value })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Budsjett</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={newProject.budget || ''}\r\n                    onChange={(e) => setNewProject({ ...newProject, budget: e.target.value ? Number(e.target.value) : undefined })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-400 mb-1\">Prioritet</label>\r\n                  <select\r\n                    value={newProject.priority}\r\n                    onChange={(e) => setNewProject({ ...newProject, priority: e.target.value as Project['priority'] })}\r\n                    className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"low\">Lav</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"high\">Høy</option>\r\n                  </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg mt-6\">\r\n                  Lagre\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}