{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\ninterface TimeEntryUpdateFields {\r\n  date?: string;\r\n  hours?: number;\r\n  project_id?: string;\r\n  description?: string;\r\n  approved?: boolean;\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: TimeEntryUpdateFields) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      const key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      const navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        interface WindowWithError extends Window {\r\n          __supabaseLagerHistorikkError?: unknown;\r\n        }\r\n        (window as WindowWithError).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    interface LagerTransaction {\r\n      created_at: string\r\n      lager?: Array<{ navn: string }>\r\n      type: string\r\n      antall: number\r\n      kommentar: string | null\r\n    }\r\n\r\n    return (data || []).map((row: LagerTransaction) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.[0]?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    const navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n\r\n// Oppdater vedlikeholdsoppgave\r\nexport async function updateMaintenanceTask(taskId: string, startDate: Date, endDate: Date) {\r\n  const { error } = await supabase\r\n    .from('maintenance_tasks')\r\n    .update({ start_date: startDate.toISOString(), end_date: endDate.toISOString() })\r\n    .eq('id', taskId);\r\n\r\n  if (error) {\r\n    throw new Error(`Failed to update maintenance task: ${error.message}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/inspeksjoner/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { Button } from \"@/components/ui/button\"\r\nimport Link from \"next/link\"\r\n\r\ninterface Inspection {\r\n  id: string\r\n  customer_id: string\r\n  customer_name: string\r\n  customer_address: string\r\n  inspection_date: string\r\n  inspection_type: 'vårvedlikehold' | 'høstvedlikehold' | 'rehabilitering'\r\n  status: 'planlagt' | 'utført'\r\n  inspector: string\r\n  notes: string\r\n  roof_condition: string\r\n  before_images?: string[]\r\n  after_images?: string[]\r\n  abonnementer?: {\r\n    etternavn: string\r\n  }\r\n}\r\n\r\nexport default function InspeksjonerDashboard() {\r\n  const router = useRouter()\r\n  const [inspections, setInspections] = useState<Inspection[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  \r\n  // Statistics\r\n  const [stats, setStats] = useState({\r\n    planned: 0,\r\n    completed: 0,\r\n    cancelled: 0\r\n  })\r\n  \r\n  // Filters\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [typeFilter, setTypeFilter] = useState('all')\r\n  const [statusFilter, setStatusFilter] = useState('all')\r\n  \r\n  useEffect(() => {\r\n    fetchInspections()\r\n  }, [])\r\n  \r\n  async function fetchInspections() {\r\n    try {\r\n      setLoading(true)\r\n      \r\n      // Fetch inspections with customer name from abonnementer\r\n      const { data, error } = await supabase\r\n        .from('inspections')\r\n        .select(`\r\n          *,\r\n          abonnementer:customer_id (etternavn)\r\n        `)\r\n        .order('inspection_date', { ascending: false })\r\n      \r\n      if (error) {\r\n        console.error('Error fetching inspections:', error)\r\n        \r\n        // Check if the error is because the table doesn't exist\r\n        if (error.message.includes('relation \"inspections\" does not exist') || \r\n            error.message.includes('does not exist') ||\r\n            error.code === '42P01') {\r\n          console.log('Inspections table not found or not accessible yet')\r\n          setInspections([])\r\n          setStats({\r\n            planned: 0,\r\n            completed: 0,\r\n            cancelled: 0\r\n          })\r\n        } else {\r\n          setError('Kunne ikke hente inspeksjoner')\r\n        }\r\n        return\r\n      }\r\n      \r\n      setInspections(data || [])\r\n      \r\n      // Calculate statistics\r\n      if (data) {\r\n        const planned = data.filter(i => i.status === 'planlagt').length\r\n        const completed = data.filter(i => i.status === 'utført').length\r\n        \r\n        setStats({\r\n          planned,\r\n          completed,\r\n          cancelled: 0 // Not used in this implementation\r\n        })\r\n      }\r\n    } catch (err) {\r\n      console.error('Unexpected error:', err)\r\n      setError('En uventet feil oppstod')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  \r\n  // Filter inspections based on search term and filters\r\n  const filteredInspections = inspections.filter(inspection => {\r\n    // Search term filter\r\n    const searchMatch = \r\n      (inspection.abonnementer?.etternavn || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      inspection.customer_address.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      (inspection.inspector && inspection.inspector.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    \r\n    // Type filter\r\n    const typeMatch = \r\n      typeFilter === 'all' || \r\n      inspection.inspection_type === typeFilter\r\n    \r\n    // Status filter\r\n    const statusMatch = \r\n      statusFilter === 'all' || \r\n      inspection.status === statusFilter\r\n    \r\n    return searchMatch && typeMatch && statusMatch\r\n  })\r\n  \r\n  // Handle inspection deletion\r\n  const handleDeleteInspection = async (id: string) => {\r\n    if (confirm('Er du sikker på at du vil slette denne inspeksjonen?')) {\r\n      try {\r\n        const { error } = await supabase\r\n          .from('inspections')\r\n          .delete()\r\n          .eq('id', id)\r\n        \r\n        if (error) {\r\n          console.error('Error deleting inspection:', error)\r\n          return\r\n        }\r\n        \r\n        // Refresh inspections\r\n        fetchInspections()\r\n      } catch (err) {\r\n        console.error('Unexpected error:', err)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-12\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">Inspeksjoner</h1>\r\n            <p className=\"text-gray-400 mt-2\">Administrer inspeksjoner og rapporter</p>\r\n          </div>\r\n          <Link href=\"/inspeksjoner/ny\">\r\n            <button\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full flex items-center gap-2 shadow-sm transition-all duration-200\"\r\n            >\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n              </svg>\r\n              <span>Ny inspeksjon</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Statistikk-kort */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Planlagte inspeksjoner</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-blue-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.planned\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Utførte inspeksjoner</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-green-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.completed\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Totalt antall inspeksjoner</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-purple-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                inspections.length\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtrering og søk */}\r\n        <div className=\"bg-gray-800 rounded-2xl p-6 mb-8 border border-gray-700\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Søk etter kunde eller inspektør...\"\r\n              className=\"flex-1 min-w-[200px] rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <select \r\n              className=\"rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Alle typer</option>\r\n              <option value=\"vårvedlikehold\">Vårvedlikehold</option>\r\n              <option value=\"høstvedlikehold\">Høstvedlikehold</option>\r\n              <option value=\"rehabilitering\">Rehabilitering</option>\r\n            </select>\r\n            <select \r\n              className=\"rounded-xl border-gray-700 focus:ring-blue-500 focus:border-blue-500 bg-gray-700 text-gray-300\"\r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Alle status</option>\r\n              <option value=\"planlagt\">Planlagt</option>\r\n              <option value=\"utført\">Utført</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Inspeksjonsliste */}\r\n        {loading ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto\"></div>\r\n            <p className=\"mt-4 text-gray-400\">Laster inspeksjoner...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"bg-red-900/20 text-red-400 p-6 rounded-xl text-center\">\r\n            {error}\r\n          </div>\r\n        ) : filteredInspections.length === 0 ? (\r\n          <div className=\"bg-gray-800 rounded-2xl border border-gray-700 p-12 text-center\">\r\n            <p className=\"text-gray-400\">Ingen inspeksjoner funnet</p>\r\n            <Link href=\"/inspeksjoner/ny\">\r\n              <button className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\r\n                Opprett ny inspeksjon\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-gray-800 rounded-2xl border border-gray-700 overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead>\r\n                  <tr className=\"border-b border-gray-700\">\r\n                    <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-400\">Kunde</th>\r\n                    <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-400\">Dato</th>\r\n                    <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-400\">Type</th>\r\n                    <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-400\">Status</th>\r\n                    <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-400\">Inspektør</th>\r\n                    <th className=\"px-6 py-4 text-right text-sm font-medium text-gray-400\">Handling</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"divide-y divide-gray-700\">\r\n                  {filteredInspections.map(inspection => (\r\n                    <tr key={inspection.id} className=\"hover:bg-gray-700/50\">\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-white\">{inspection.abonnementer?.etternavn || inspection.customer_name || 'Ukjent kunde'}</div>\r\n                        <div className=\"text-sm text-gray-400\">{inspection.customer_address}</div>\r\n                        {/* Før/etter-bilder */}\r\n                        <div className=\"flex gap-2 mt-2\">\r\n                          {inspection.before_images && inspection.before_images.length > 0 && (\r\n                            <div>\r\n                              <div className=\"text-xs text-gray-400\">Før</div>\r\n                              <div className=\"flex gap-1\">\r\n                                {inspection.before_images.slice(0,2).map((url, idx) => (\r\n                                  <img key={idx} src={url} alt=\"Før-bilde\" className=\"w-10 h-10 object-cover rounded\" />\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          {inspection.after_images && inspection.after_images.length > 0 && (\r\n                            <div>\r\n                              <div className=\"text-xs text-gray-400\">Etter</div>\r\n                              <div className=\"flex gap-1\">\r\n                                {inspection.after_images.slice(0,2).map((url, idx) => (\r\n                                  <img key={idx} src={url} alt=\"Etter-bilde\" className=\"w-10 h-10 object-cover rounded\" />\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-white\">\r\n                          {new Date(inspection.inspection_date).toLocaleDateString('nb-NO')}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                          inspection.inspection_type === 'vårvedlikehold'\r\n                            ? 'bg-green-900/50 text-green-400'\r\n                            : inspection.inspection_type === 'høstvedlikehold'\r\n                            ? 'bg-yellow-900/50 text-yellow-400'\r\n                            : 'bg-blue-900/50 text-blue-400'\r\n                        }`}>\r\n                          {inspection.inspection_type}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                          inspection.status === 'planlagt'\r\n                            ? 'bg-yellow-900/50 text-yellow-400'\r\n                            : 'bg-green-900/50 text-green-400'\r\n                        }`}>\r\n                          {inspection.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-white\">{inspection.inspector || '-'}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 text-right\">\r\n                        <div className=\"text-white flex justify-end\">\r\n                          <Link href={`/inspeksjoner/${inspection.id}`} className=\"text-blue-400 hover:text-blue-500 mr-4\">\r\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.478 0-8.268-2.943-9.542-7z\" />\r\n                            </svg>\r\n                          </Link>\r\n                          <button \r\n                            className=\"text-red-400 hover:text-red-500\"\r\n                            onClick={() => handleDeleteInspection(inspection.id)}\r\n                          >\r\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}