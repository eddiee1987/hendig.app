{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAErE,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,sBAAsB,uCAAkB;AAEpD,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/services/projectService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { Project, ScheduledProject } from '@/types/supabase'\r\n\r\n// Project functions\r\nexport async function getProjects() {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .order('created_at', { ascending: false })\r\n\r\n  if (error) {\r\n    console.error('Error fetching projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getProject(id: string) {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error(`Error fetching project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function createProject(project: Record<string, any>) {\r\n  console.log('Creating project with data:', project)\r\n  \r\n  try {\r\n    // Check if the Supabase client is properly initialized\r\n    console.log('Supabase client:', supabase)\r\n    \r\n    // Check if the table exists by trying to select a single row\r\n    const { data: tableCheck, error: tableError } = await supabase\r\n      .from('projects')\r\n      .select('id')\r\n      .limit(1)\r\n    \r\n    if (tableError) {\r\n      console.error('Error checking projects table:', tableError)\r\n      throw new Error(`Table check failed: ${tableError.message}`)\r\n    }\r\n    \r\n    console.log('Table check result:', tableCheck)\r\n    \r\n    // Proceed with insert\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .insert([project])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error)\r\n      throw new Error(`Insert failed: ${error.message}`)\r\n    }\r\n\r\n    console.log('Project created successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error('Exception in createProject:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateProject(id: string, project: Record<string, any>) {\r\n  console.log('Updating project with id:', id, 'and data:', project)\r\n  \r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .update(project)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error)\r\n      throw error\r\n    }\r\n\r\n    console.log('Project updated successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error(`Exception in updateProject for id ${id}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error deleting project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Scheduled Project functions\r\nexport async function getScheduledProjects() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getScheduledProjectsForDate(date: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .eq('scheduled_date', date)\r\n\r\n  if (error) {\r\n    console.error(`Error fetching scheduled projects for date ${date}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function scheduleProject(projectId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .insert([\r\n      {\r\n        project_id: projectId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\nexport async function unscheduleProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport async function unscheduleProjectByProjectIdAndDate(projectId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('project_id', projectId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AAIO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;QAAE,WAAW;IAAM;IAE1C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB;AAEO,eAAe,WAAW,EAAU;IACzC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC,EAAE;QACvD,MAAM;IACR;IAEA,OAAO;AACT;AAEO,eAAe,cAAc,OAA4B;IAC9D,QAAQ,GAAG,CAAC,+BAA+B;IAE3C,IAAI;QACF,uDAAuD;QACvD,QAAQ,GAAG,CAAC,oBAAoB,yHAAA,CAAA,WAAQ;QAExC,6DAA6D;QAC7D,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC3D,IAAI,CAAC,YACL,MAAM,CAAC,MACP,KAAK,CAAC;QAET,IAAI,YAAY;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,WAAW,OAAO,EAAE;QAC7D;QAEA,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,sBAAsB;QACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC;YAAC;SAAQ,EAChB,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE;QACnD;QAEA,QAAQ,GAAG,CAAC,iCAAiC;QAC7C,OAAO,MAAM,CAAC,EAAE;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACR;AACF;AAEO,eAAe,cAAc,EAAU,EAAE,OAA4B;IAC1E,QAAQ,GAAG,CAAC,6BAA6B,IAAI,aAAa;IAE1D,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM,IACT,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC,EAAE;YACvD,MAAM;QACR;QAEA,QAAQ,GAAG,CAAC,iCAAiC;QAC7C,OAAO,MAAM,CAAC,EAAE;IAClB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC,EAAE;QAC1D,MAAM;IACR;AACF;AAEO,eAAe,cAAc,EAAU;IAC5C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,YACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC,EAAE;QACvD,MAAM;IACR;IAEA,OAAO;AACT;AAGO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,sBACL,MAAM,CAAC,CAAC;;;IAGT,CAAC,EACA,KAAK,CAAC,kBAAkB;QAAE,WAAW;IAAK;IAE7C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB;AAEO,eAAe,4BAA4B,IAAY;IAC5D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,sBACL,MAAM,CAAC,CAAC;;;IAGT,CAAC,EACA,EAAE,CAAC,kBAAkB;IAExB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC,EAAE;QACrE,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB;AAEO,eAAe,gBAAgB,SAAiB,EAAE,aAAqB;IAC5E,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,sBACL,MAAM,CAAC;QACN;YACE,YAAY;YACZ,gBAAgB;QAClB;KACD,EACA,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,yBAAyB,EAAE,UAAU,UAAU,EAAE,cAAc,CAAC,CAAC,EAAE;QAClF,MAAM;IACR;IAEA,OAAO,MAAM,CAAC,EAAE;AAClB;AAEO,eAAe,kBAAkB,EAAU;IAChD,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,sBACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC,EAAE;QAC3D,MAAM;IACR;IAEA,OAAO;AACT;AAEO,eAAe,oCAAoC,SAAiB,EAAE,aAAqB;IAChG,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,sBACL,MAAM,GACN,EAAE,CAAC,cAAc,WACjB,EAAE,CAAC,kBAAkB;IAExB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,2BAA2B,EAAE,UAAU,UAAU,EAAE,cAAc,CAAC,CAAC,EAAE;QACpF,MAAM;IACR;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ProjectPlanner.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { ChevronLeftIcon, ChevronRightIcon, CalendarIcon, ListBulletIcon, FunnelIcon } from '@heroicons/react/24/outline'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { getScheduledProjects, scheduleProject, unscheduleProjectByProjectIdAndDate } from '@/services/projectService'\r\nimport { toast } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\ninterface ScheduledProject extends Project {\r\n  scheduledDate: string\r\n  scheduledId: string\r\n}\r\n\r\ninterface CalendarDay {\r\n  date: Date\r\n  dayOfMonth: number\r\n  isCurrentMonth: boolean\r\n  isToday: boolean\r\n  projects: ScheduledProject[]\r\n}\r\n\r\n// Convert Supabase project format to our internal format\r\nconst convertProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  client: project.client,\r\n  status: project.status,\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority\r\n})\r\n\r\nexport default function ProjectPlanner({ projects }: { projects: Project[] }) {\r\n  const [view, setView] = useState<'month' | 'week' | 'day'>('month')\r\n  const [currentDate, setCurrentDate] = useState(new Date())\r\n  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([])\r\n  const [scheduledProjects, setScheduledProjects] = useState<ScheduledProject[]>([])\r\n  const [filter, setFilter] = useState<'all' | 'active' | 'completed' | 'archived'>('all')\r\n  const [showFilterMenu, setShowFilterMenu] = useState(false)\r\n  const [draggedProject, setDraggedProject] = useState<Project | null>(null)\r\n  const [showProjectInfo, setShowProjectInfo] = useState<string | null>(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const dragCounter = useRef(0)\r\n  const filterMenuRef = useRef<HTMLDivElement>(null)\r\n\r\n  // Load scheduled projects from Supabase\r\n  useEffect(() => {\r\n    const fetchScheduledProjects = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        const data = await getScheduledProjects()\r\n        \r\n        const formattedData = data.map(item => ({\r\n          ...convertProject(item.projects as unknown as SupabaseProject),\r\n          scheduledDate: item.scheduled_date,\r\n          scheduledId: item.id\r\n        }))\r\n        \r\n        setScheduledProjects(formattedData)\r\n      } catch (error) {\r\n        console.error('Error fetching scheduled projects:', error)\r\n        toast.error('Kunne ikke hente planlagte prosjekter')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    \r\n    fetchScheduledProjects()\r\n  }, [])\r\n\r\n  // Close filter menu when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (filterMenuRef.current && !filterMenuRef.current.contains(event.target as Node) && showFilterMenu) {\r\n        setShowFilterMenu(false)\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [showFilterMenu])\r\n\r\n  // Generate calendar days\r\n  useEffect(() => {\r\n    const days: CalendarDay[] = []\r\n    const today = new Date()\r\n    \r\n    // Get first day of month\r\n    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\r\n    \r\n    // Get last day of month\r\n    const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\r\n    \r\n    // Get day of week of first day (0 = Sunday, 1 = Monday, etc.)\r\n    let firstDayOfWeek = firstDayOfMonth.getDay()\r\n    // Adjust for Monday as first day of week\r\n    firstDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1\r\n    \r\n    // Add days from previous month\r\n    const daysFromPrevMonth = firstDayOfWeek\r\n    const prevMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0)\r\n    \r\n    for (let i = daysFromPrevMonth - 1; i >= 0; i--) {\r\n      const date = new Date(prevMonth.getFullYear(), prevMonth.getMonth(), prevMonth.getDate() - i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: date.getDate(),\r\n        isCurrentMonth: false,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date)\r\n      })\r\n    }\r\n    \r\n    // Add days from current month\r\n    for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\r\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: i,\r\n        isCurrentMonth: true,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date)\r\n      })\r\n    }\r\n    \r\n    // Add days from next month to complete the grid (6 rows x 7 days = 42 cells)\r\n    const daysToAdd = 42 - days.length\r\n    for (let i = 1; i <= daysToAdd; i++) {\r\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: i,\r\n        isCurrentMonth: false,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date)\r\n      })\r\n    }\r\n    \r\n    setCalendarDays(days)\r\n  }, [currentDate, scheduledProjects])\r\n\r\n  // Get projects scheduled for a specific date\r\n  function getProjectsForDate(date: Date): ScheduledProject[] {\r\n    const dateString = date.toISOString().split('T')[0]\r\n    return scheduledProjects.filter(project => project.scheduledDate === dateString)\r\n  }\r\n\r\n  // Navigation functions\r\n  const goToPrev = () => {\r\n    if (view === 'month') {\r\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1))\r\n    } else if (view === 'week') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() - 7)\r\n      setCurrentDate(newDate)\r\n    } else if (view === 'day') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() - 1)\r\n      setCurrentDate(newDate)\r\n    }\r\n  }\r\n\r\n  const goToNext = () => {\r\n    if (view === 'month') {\r\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1))\r\n    } else if (view === 'week') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() + 7)\r\n      setCurrentDate(newDate)\r\n    } else if (view === 'day') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() + 1)\r\n      setCurrentDate(newDate)\r\n    }\r\n  }\r\n\r\n  const goToToday = () => {\r\n    setCurrentDate(new Date())\r\n  }\r\n\r\n  // Format date for display based on view\r\n  const getHeaderText = () => {\r\n    if (view === 'month') {\r\n      return currentDate.toLocaleDateString('nb-NO', { month: 'long', year: 'numeric' })\r\n    } else if (view === 'week') {\r\n      const startOfWeek = new Date(currentDate)\r\n      const dayOfWeek = startOfWeek.getDay()\r\n      const diff = dayOfWeek === 0 ? -6 : 1 - dayOfWeek // Adjust to get Monday\r\n      startOfWeek.setDate(startOfWeek.getDate() + diff)\r\n      \r\n      const endOfWeek = new Date(startOfWeek)\r\n      endOfWeek.setDate(endOfWeek.getDate() + 6)\r\n      \r\n      const startMonth = startOfWeek.getMonth() === endOfWeek.getMonth() \r\n        ? '' \r\n        : startOfWeek.toLocaleDateString('nb-NO', { month: 'long' }) + ' '\r\n      \r\n      return `${startMonth}${startOfWeek.getDate()}. - ${endOfWeek.toLocaleDateString('nb-NO', { day: 'numeric', month: 'long', year: 'numeric' })}`\r\n    } else {\r\n      return currentDate.toLocaleDateString('nb-NO', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' })\r\n    }\r\n  }\r\n\r\n  // Get day name\r\n  const getDayName = (dayIndex: number) => {\r\n    const days = ['Man', 'Tirs', 'Ons', 'Tors', 'Fre', 'Lør', 'Søn']\r\n    return days[dayIndex]\r\n  }\r\n\r\n  // Handle drag start\r\n  const handleDragStart = (project: Project) => {\r\n    setDraggedProject(project)\r\n  }\r\n\r\n  // Handle drag over\r\n  const handleDragOver = (e: React.DragEvent, date: Date) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  // Handle drag enter\r\n  const handleDragEnter = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    dragCounter.current++\r\n  }\r\n\r\n  // Handle drag leave\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    dragCounter.current--\r\n  }\r\n\r\n  // Handle drop\r\n  const handleDrop = async (e: React.DragEvent, date: Date) => {\r\n    e.preventDefault()\r\n    dragCounter.current = 0\r\n    \r\n    if (!draggedProject) return\r\n    \r\n    const dateString = date.toISOString().split('T')[0]\r\n    \r\n    // Check if project is already scheduled for this date\r\n    const alreadyScheduled = scheduledProjects.some(\r\n      p => p.id === draggedProject.id && p.scheduledDate === dateString\r\n    )\r\n    \r\n    if (alreadyScheduled) {\r\n      setDraggedProject(null)\r\n      return\r\n    }\r\n    \r\n    try {\r\n      // Schedule project in Supabase\r\n      const result = await scheduleProject(draggedProject.id, dateString)\r\n      \r\n      if (result) {\r\n        // Add new scheduled project to state\r\n        const newScheduledProject: ScheduledProject = {\r\n          ...draggedProject,\r\n          scheduledDate: dateString,\r\n          scheduledId: result.id\r\n        }\r\n        \r\n        setScheduledProjects([...scheduledProjects, newScheduledProject])\r\n        toast.success('Prosjekt planlagt')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error scheduling project:', error)\r\n      toast.error('Kunne ikke planlegge prosjekt')\r\n    } finally {\r\n      setDraggedProject(null)\r\n    }\r\n  }\r\n\r\n  // Remove project from calendar\r\n  const removeFromCalendar = async (projectId: string, date: string) => {\r\n    try {\r\n      await unscheduleProjectByProjectIdAndDate(projectId, date)\r\n      \r\n      setScheduledProjects(scheduledProjects.filter(\r\n        p => !(p.id === projectId && p.scheduledDate === date)\r\n      ))\r\n      \r\n      toast.success('Prosjekt fjernet fra kalender')\r\n    } catch (error) {\r\n      console.error('Error removing project from calendar:', error)\r\n      toast.error('Kunne ikke fjerne prosjekt fra kalender')\r\n    }\r\n  }\r\n\r\n  // Filter projects based on status\r\n  const filteredProjects = filter === 'all' \r\n    ? projects \r\n    : projects.filter(project => project.status === filter)\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 rounded-xl border border-gray-800\">\r\n      <div className=\"flex flex-col h-full\">\r\n        {/* Tabs */}\r\n        <div className=\"flex border-b border-gray-800\">\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'month' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('month')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Måned\r\n          </button>\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'week' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('week')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Uke\r\n          </button>\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'day' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('day')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Dag\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex flex-1\">\r\n          {/* Project list */}\r\n          <div className=\"w-1/4 border-r border-gray-800 p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-medium text-white\">Prosjekter</h3>\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setShowFilterMenu(!showFilterMenu)}\r\n                  className=\"flex items-center text-sm text-gray-400 hover:text-white\"\r\n                >\r\n                  <FunnelIcon className=\"w-4 h-4 mr-1\" />\r\n                  Filter: {filter === 'all' ? 'Alle' : \r\n                          filter === 'active' ? 'Aktive' : \r\n                          filter === 'completed' ? 'Fullførte' : 'Arkiverte'}\r\n                </button>\r\n                <div \r\n                  ref={filterMenuRef}\r\n                  className={`absolute right-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-lg z-10 ${showFilterMenu ? 'block' : 'hidden'}`}\r\n                >\r\n                  <div className=\"py-1\">\r\n                    <button\r\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                      onClick={() => {\r\n                        setFilter('all')\r\n                        setShowFilterMenu(false)\r\n                      }}\r\n                    >\r\n                      Alle\r\n                    </button>\r\n                    <button\r\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                      onClick={() => {\r\n                        setFilter('active')\r\n                        setShowFilterMenu(false)\r\n                      }}\r\n                    >\r\n                      Aktive\r\n                    </button>\r\n                    <button\r\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                      onClick={() => {\r\n                        setFilter('completed')\r\n                        setShowFilterMenu(false)\r\n                      }}\r\n                    >\r\n                      Fullførte\r\n                    </button>\r\n                    <button\r\n                      className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                      onClick={() => {\r\n                        setFilter('archived')\r\n                        setShowFilterMenu(false)\r\n                      }}\r\n                    >\r\n                      Arkiverte\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-2 overflow-y-auto max-h-[calc(100vh-250px)]\">\r\n              {filteredProjects.map(project => (\r\n                <div\r\n                  key={project.id}\r\n                  className=\"bg-gray-800 rounded-lg p-3 cursor-move hover:bg-gray-750 border border-gray-700\"\r\n                  draggable\r\n                  onDragStart={() => handleDragStart(project)}\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <h4 className=\"text-sm font-medium text-white\">{project.name}</h4>\r\n                    <span className={`px-1.5 py-0.5 rounded-full text-xs font-medium ${\r\n                      project.priority === 'high'\r\n                        ? 'bg-red-900/50 text-red-400'\r\n                        : project.priority === 'medium'\r\n                        ? 'bg-yellow-900/50 text-yellow-400'\r\n                        : 'bg-green-900/50 text-green-400'\r\n                    }`}>\r\n                      {project.priority}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-400 mt-1 truncate\">{project.client}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Calendar */}\r\n          <div className=\"flex-1 flex flex-col\">\r\n            {/* Calendar header */}\r\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-800\">\r\n              <h2 className=\"text-xl font-semibold text-white\">\r\n                {getHeaderText()}\r\n              </h2>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={goToPrev}\r\n                  className=\"p-1.5 rounded-full text-gray-400 hover:text-white hover:bg-gray-800\"\r\n                >\r\n                  <ChevronLeftIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={goToToday}\r\n                  className=\"px-3 py-1.5 text-sm text-gray-400 hover:text-white\"\r\n                >\r\n                  I dag\r\n                </button>\r\n                <button\r\n                  onClick={goToNext}\r\n                  className=\"p-1.5 rounded-full text-gray-400 hover:text-white hover:bg-gray-800\"\r\n                >\r\n                  <ChevronRightIcon className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Calendar content based on view */}\r\n            <div className=\"flex-1 p-2\">\r\n              {view === 'month' && (\r\n                <>\r\n                  {/* Day headers */}\r\n                  <div className=\"grid grid-cols-7 gap-1 mb-1\">\r\n                    {[0, 1, 2, 3, 4, 5, 6].map(day => (\r\n                      <div key={day} className=\"text-center text-xs font-medium text-gray-400 py-1\">\r\n                        {getDayName(day)}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Calendar days */}\r\n                  <div className=\"grid grid-cols-7 gap-1 flex-1\">\r\n                    {calendarDays.map((day, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className={`min-h-[100px] rounded-lg border ${\r\n                          day.isCurrentMonth\r\n                            ? day.isToday\r\n                              ? 'bg-blue-900/20 border-blue-800'\r\n                              : 'bg-gray-800 border-gray-700'\r\n                            : 'bg-gray-850 border-gray-800'\r\n                        } p-1 relative`}\r\n                        onDragOver={(e) => handleDragOver(e, day.date)}\r\n                        onDragEnter={handleDragEnter}\r\n                        onDragLeave={handleDragLeave}\r\n                        onDrop={(e) => handleDrop(e, day.date)}\r\n                      >\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className={`text-xs font-medium ${\r\n                            day.isCurrentMonth\r\n                              ? day.isToday\r\n                                ? 'text-blue-400'\r\n                                : 'text-white'\r\n                              : 'text-gray-500'\r\n                          }`}>\r\n                            {day.dayOfMonth}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"space-y-1 overflow-y-auto max-h-[80px]\">\r\n                          {day.projects.map(project => (\r\n                            <div\r\n                              key={`${project.id}-${day.date.toISOString()}`}\r\n                              className={`text-xs p-1 rounded relative ${\r\n                                project.priority === 'high'\r\n                                  ? 'bg-red-900/30 text-red-400 border border-red-800/50'\r\n                                  : project.priority === 'medium'\r\n                                  ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50'\r\n                                  : 'bg-green-900/30 text-green-400 border border-green-800/50'\r\n                              }`}\r\n                              onMouseEnter={() => setShowProjectInfo(`${project.id}-${day.date.toISOString()}`)}\r\n                              onMouseLeave={() => setShowProjectInfo(null)}\r\n                            >\r\n                              <div className=\"truncate\">{project.name}</div>\r\n                              \r\n                              {showProjectInfo === `${project.id}-${day.date.toISOString()}` && (\r\n                                <div className=\"absolute z-10 left-0 top-full mt-1 w-48 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-2 text-xs\">\r\n                                  <h5 className=\"font-medium text-white mb-1\">{project.name}</h5>\r\n                                  <p className=\"text-gray-400 mb-1\">{project.client}</p>\r\n                                  <p className=\"text-gray-400 mb-1 line-clamp-2\">{project.description}</p>\r\n                                  <button\r\n                                    onClick={() => removeFromCalendar(project.id, day.date.toISOString().split('T')[0])}\r\n                                    className=\"text-red-400 hover:text-red-300 text-xs mt-1\"\r\n                                  >\r\n                                    Fjern fra kalender\r\n                                  </button>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {view === 'week' && (\r\n                <div className=\"flex flex-col h-full\">\r\n                  {/* Week header */}\r\n                  <div className=\"grid grid-cols-7 gap-1 mb-1\">\r\n                    {Array.from({ length: 7 }).map((_, index) => {\r\n                      const date = new Date(currentDate);\r\n                      const dayOfWeek = date.getDay();\r\n                      const diff = index - (dayOfWeek === 0 ? 6 : dayOfWeek - 1);\r\n                      date.setDate(date.getDate() + diff);\r\n                      \r\n                      return (\r\n                        <div key={index} className=\"text-center py-2\">\r\n                          <div className=\"text-xs font-medium text-gray-400\">{getDayName(index)}</div>\r\n                          <div className={`text-sm font-medium ${\r\n                            date.toDateString() === new Date().toDateString() \r\n                              ? 'text-blue-400' \r\n                              : 'text-white'\r\n                          }`}>\r\n                            {date.getDate()}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  {/* Week view */}\r\n                  <div className=\"grid grid-cols-7 gap-1 flex-1\">\r\n                    {Array.from({ length: 7 }).map((_, index) => {\r\n                      const date = new Date(currentDate);\r\n                      const dayOfWeek = date.getDay();\r\n                      const diff = index - (dayOfWeek === 0 ? 6 : dayOfWeek - 1);\r\n                      date.setDate(date.getDate() + diff);\r\n                      \r\n                      const dateString = date.toISOString().split('T')[0];\r\n                      const dayProjects = scheduledProjects.filter(p => p.scheduledDate === dateString);\r\n                      \r\n                      return (\r\n                        <div \r\n                          key={index}\r\n                          className={`min-h-[400px] rounded-lg border ${\r\n                            date.toDateString() === new Date().toDateString()\r\n                              ? 'bg-blue-900/20 border-blue-800'\r\n                              : 'bg-gray-800 border-gray-700'\r\n                          } p-2 relative`}\r\n                          onDragOver={(e) => handleDragOver(e, date)}\r\n                          onDragEnter={handleDragEnter}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, date)}\r\n                        >\r\n                          <div className=\"space-y-2 overflow-y-auto max-h-full\">\r\n                            {dayProjects.map(project => (\r\n                              <div\r\n                                key={`${project.id}-${date.toISOString()}`}\r\n                                className={`p-2 rounded relative ${\r\n                                  project.priority === 'high'\r\n                                    ? 'bg-red-900/30 text-red-400 border border-red-800/50'\r\n                                    : project.priority === 'medium'\r\n                                    ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50'\r\n                                    : 'bg-green-900/30 text-green-400 border border-green-800/50'\r\n                                }`}\r\n                                onMouseEnter={() => setShowProjectInfo(`${project.id}-${date.toISOString()}`)}\r\n                                onMouseLeave={() => setShowProjectInfo(null)}\r\n                              >\r\n                                <div className=\"font-medium\">{project.name}</div>\r\n                                <div className=\"text-xs mt-1\">{project.client}</div>\r\n                                \r\n                                {showProjectInfo === `${project.id}-${date.toISOString()}` && (\r\n                                  <div className=\"absolute z-10 left-0 top-full mt-1 w-64 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-3 text-sm\">\r\n                                    <h5 className=\"font-medium text-white mb-1\">{project.name}</h5>\r\n                                    <p className=\"text-gray-400 mb-1\">{project.client}</p>\r\n                                    <p className=\"text-gray-400 mb-2\">{project.description}</p>\r\n                                    <button\r\n                                      onClick={() => removeFromCalendar(project.id, dateString)}\r\n                                      className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                                    >\r\n                                      Fjern fra kalender\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {view === 'day' && (\r\n                <div className=\"flex flex-col h-full\">\r\n                  {/* Day view */}\r\n                  <div \r\n                    className=\"flex-1 p-4 bg-gray-800 rounded-lg border border-gray-700 mt-2 overflow-y-auto\"\r\n                    onDragOver={(e) => handleDragOver(e, currentDate)}\r\n                    onDragEnter={handleDragEnter}\r\n                    onDragLeave={handleDragLeave}\r\n                    onDrop={(e) => handleDrop(e, currentDate)}\r\n                  >\r\n                    <div className=\"space-y-3\">\r\n                      {scheduledProjects\r\n                        .filter(p => p.scheduledDate === currentDate.toISOString().split('T')[0])\r\n                        .map(project => (\r\n                          <div\r\n                            key={project.id}\r\n                            className={`p-4 rounded-lg relative ${\r\n                              project.priority === 'high'\r\n                                ? 'bg-red-900/30 text-red-400 border border-red-800/50'\r\n                                : project.priority === 'medium'\r\n                                ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50'\r\n                                : 'bg-green-900/30 text-green-400 border border-green-800/50'\r\n                            }`}\r\n                          >\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <h4 className=\"font-medium text-white\">{project.name}</h4>\r\n                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                                project.status === 'active'\r\n                                  ? 'bg-blue-900/50 text-blue-400'\r\n                                  : project.status === 'completed'\r\n                                  ? 'bg-green-900/50 text-green-400'\r\n                                  : 'bg-gray-900/50 text-gray-400'\r\n                              }`}>\r\n                                {project.status}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-400 mt-2\">{project.description}</p>\r\n                            <div className=\"mt-3 flex justify-between items-center\">\r\n                              <div className=\"text-sm text-gray-400\">Klient: <span className=\"text-white\">{project.client}</span></div>\r\n                              <button\r\n                                onClick={() => removeFromCalendar(project.id, currentDate.toISOString().split('T')[0])}\r\n                                className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                              >\r\n                                Fjern fra kalender\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      \r\n                      {scheduledProjects.filter(p => p.scheduledDate === currentDate.toISOString().split('T')[0]).length === 0 && (\r\n                        <div className=\"text-center py-8 text-gray-500\">\r\n                          <p>Ingen prosjekter planlagt for denne dagen</p>\r\n                          <p className=\"text-sm mt-2\">Dra et prosjekt hit for å planlegge det</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/planlegging/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport ProjectPlanner from '@/components/ProjectPlanner'\r\nimport { getProjects } from '@/services/projectService'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { toast, Toaster } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\n// Convert Supabase project format to our internal format\r\nconst fromSupabaseProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  client: project.client,\r\n  status: project.status as 'active' | 'completed' | 'archived',\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority as 'low' | 'medium' | 'high'\r\n})\r\n\r\nexport default function PlanleggingPage() {\r\n  const [projects, setProjects] = useState<Project[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // Load projects from Supabase\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        const data = await getProjects()\r\n        setProjects(data.map(fromSupabaseProject))\r\n      } catch (error) {\r\n        console.error('Error fetching projects:', error)\r\n        toast.error('Kunne ikke hente prosjekter')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    \r\n    fetchProjects()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">Planlegging</h1>\r\n            <p className=\"text-gray-400 mt-2\">Planlegg og organiser prosjekter i kalenderen</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Toast notifications */}\r\n        <Toaster\r\n          position=\"top-right\"\r\n          toastOptions={{\r\n            duration: 3000,\r\n            style: {\r\n              background: '#333',\r\n              color: '#fff',\r\n            },\r\n          }}\r\n        />\r\n\r\n        {/* Project Planner Component */}\r\n        <div className=\"h-[calc(100vh-200px)]\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n          ) : (\r\n            <ProjectPlanner projects={projects} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;;;AANA;;;;;AAoBA,yDAAyD;AACzD,MAAM,sBAAsB,CAAC,UAAsC,CAAC;QAClE,IAAI,QAAQ,EAAE;QACd,MAAM,QAAQ,IAAI;QAClB,aAAa,QAAQ,WAAW;QAChC,QAAQ,QAAQ,MAAM;QACtB,QAAQ,QAAQ,MAAM;QACtB,WAAW,QAAQ,UAAU;QAC7B,SAAS,QAAQ,QAAQ;QACzB,QAAQ,QAAQ,MAAM,GAAG,OAAO,QAAQ,MAAM,IAAI;QAClD,UAAU,QAAQ,QAAQ;IAC5B,CAAC;AAEc,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,8BAA8B;IAC9B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM;2DAAgB;oBACpB,IAAI;wBACF,aAAa;wBACb,MAAM,OAAO,MAAM,CAAA,GAAA,oIAAA,CAAA,cAAW,AAAD;wBAC7B,YAAY,KAAK,GAAG,CAAC;oBACvB,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,4BAA4B;wBAC1C,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;oBACd,SAAU;wBACR,aAAa;oBACf;gBACF;;YAEA;QACF;oCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;;;;;;8BAKtC,6LAAC,0JAAA,CAAA,UAAO;oBACN,UAAS;oBACT,cAAc;wBACZ,UAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,OAAO;wBACT;oBACF;;;;;;8BAIF,6LAAC;oBAAI,WAAU;8BACZ,0BACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;;;;;;;;;6CAGjB,6LAAC,uIAAA,CAAA,UAAc;wBAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;AAMtC;GAzDwB;KAAA","debugId":null}}]
}