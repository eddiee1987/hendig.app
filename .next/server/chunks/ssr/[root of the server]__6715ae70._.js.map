{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ProjectPlanner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ProjectPlanner.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProjectPlanner.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/components/ProjectPlanner.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ProjectPlanner.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProjectPlanner.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAErE,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,sBAAsB,uCAAkB;AAEpD,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/services/projectService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { Project, ScheduledProject } from '@/types/supabase'\r\n\r\n// Project functions\r\nexport async function getProjects() {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .order('created_at', { ascending: false })\r\n\r\n  if (error) {\r\n    console.error('Error fetching projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getProject(id: string) {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error(`Error fetching project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function createProject(project: Record<string, any>) {\r\n  console.log('Creating project with data:', project)\r\n  \r\n  try {\r\n    // Check if the Supabase client is properly initialized\r\n    console.log('Supabase client:', supabase)\r\n    \r\n    // Check if the table exists by trying to select a single row\r\n    const { data: tableCheck, error: tableError } = await supabase\r\n      .from('projects')\r\n      .select('id')\r\n      .limit(1)\r\n    \r\n    if (tableError) {\r\n      console.error('Error checking projects table:', tableError)\r\n      throw new Error(`Table check failed: ${tableError.message}`)\r\n    }\r\n    \r\n    console.log('Table check result:', tableCheck)\r\n    \r\n    // Proceed with insert\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .insert([project])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error)\r\n      throw new Error(`Insert failed: ${error.message}`)\r\n    }\r\n\r\n    console.log('Project created successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error('Exception in createProject:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateProject(id: string, project: Record<string, any>) {\r\n  console.log('Updating project with id:', id, 'and data:', project)\r\n  \r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .update(project)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error)\r\n      throw error\r\n    }\r\n\r\n    console.log('Project updated successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error(`Exception in updateProject for id ${id}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error deleting project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Scheduled Project functions\r\nexport async function getScheduledProjects() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getScheduledProjectsForDate(date: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .eq('scheduled_date', date)\r\n\r\n  if (error) {\r\n    console.error(`Error fetching scheduled projects for date ${date}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function scheduleProject(projectId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .insert([\r\n      {\r\n        project_id: projectId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\nexport async function unscheduleProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport async function unscheduleProjectByProjectIdAndDate(projectId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('project_id', projectId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/services/abonnementService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport interface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\nexport interface AbonnementInput {\r\n  fornavn: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: boolean\r\n  fornyelsesdato: string\r\n  sum: number\r\n  notat: string\r\n}\r\n\r\nexport interface ScheduledAbonnement {\r\n  id: string\r\n  abonnement_id: string\r\n  scheduled_date: string\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\n// Get all abonnements\r\nexport async function getAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .select('*')\r\n    .order('etternavn', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Get scheduled abonnements\r\nexport async function getScheduledAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .select(`\r\n      *,\r\n      abonnementer:abonnement_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Schedule an abonnement\r\nexport async function scheduleAbonnement(abonnementId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .insert([\r\n      {\r\n        abonnement_id: abonnementId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling abonnement ${abonnementId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\n// Unschedule an abonnement\r\nexport async function unscheduleAbonnement(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Unschedule an abonnement by abonnement ID and date\r\nexport async function unscheduleAbonnementByIdAndDate(abonnementId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('abonnement_id', abonnementId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement ${abonnementId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Create a new abonnement\r\nexport async function createAbonnement(abonnement: AbonnementInput) {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .insert([\r\n      {\r\n        fornavn: abonnement.fornavn,\r\n        etternavn: abonnement.etternavn,\r\n        adresse: abonnement.adresse,\r\n        kommune: abonnement.kommune,\r\n        var: abonnement.var,\r\n        host: abonnement.host,\r\n        epost: abonnement.epost,\r\n        fakturert: abonnement.fakturert,\r\n        fornyelsesdato: abonnement.fornyelsesdato,\r\n        sum: abonnement.sum,\r\n        notat: abonnement.notat\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error('Error creating abonnement:', error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAqCO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,gBACL,MAAM,CAAC,KACP,KAAK,CAAC,aAAa;QAAE,WAAW;IAAK;IAExC,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB;AAGO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,yBACL,MAAM,CAAC,CAAC;;;IAGT,CAAC,EACA,KAAK,CAAC,kBAAkB;QAAE,WAAW;IAAK;IAE7C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB;AAGO,eAAe,mBAAmB,YAAoB,EAAE,aAAqB;IAClF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,yBACL,MAAM,CAAC;QACN;YACE,eAAe;YACf,gBAAgB;QAClB;KACD,EACA,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,aAAa,UAAU,EAAE,cAAc,CAAC,CAAC,EAAE;QACxF,MAAM;IACR;IAEA,OAAO,MAAM,CAAC,EAAE;AAClB;AAGO,eAAe,qBAAqB,EAAU;IACnD,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,yBACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,sCAAsC,EAAE,GAAG,CAAC,CAAC,EAAE;QAC9D,MAAM;IACR;IAEA,OAAO;AACT;AAGO,eAAe,gCAAgC,YAAoB,EAAE,aAAqB;IAC/F,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,yBACL,MAAM,GACN,EAAE,CAAC,iBAAiB,cACpB,EAAE,CAAC,kBAAkB;IAExB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,aAAa,UAAU,EAAE,cAAc,CAAC,CAAC,EAAE;QAC1F,MAAM;IACR;IAEA,OAAO;AACT;AAGO,eAAe,iBAAiB,UAA2B;IAChE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,gBACL,MAAM,CAAC;QACN;YACE,SAAS,WAAW,OAAO;YAC3B,WAAW,WAAW,SAAS;YAC/B,SAAS,WAAW,OAAO;YAC3B,SAAS,WAAW,OAAO;YAC3B,KAAK,WAAW,GAAG;YACnB,MAAM,WAAW,IAAI;YACrB,OAAO,WAAW,KAAK;YACvB,WAAW,WAAW,SAAS;YAC/B,gBAAgB,WAAW,cAAc;YACzC,KAAK,WAAW,GAAG;YACnB,OAAO,WAAW,KAAK;QACzB;KACD,EACA,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;IAEA,OAAO,MAAM,CAAC,EAAE;AAClB","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/planlegging/page.tsx"],"sourcesContent":["interface Project {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  clientId: string; // Changed from client: string to clientId: string\r\n  clientName?: string; // Add clientName to store the fetched client name\r\n  status: 'active' | 'completed' | 'archived';\r\n  startDate: string;\r\n  endDate?: string;\r\n  budget?: number;\r\n  priority: 'low' | 'medium' | 'high';\r\n}\r\n'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport ProjectPlanner from '@/components/ProjectPlanner'\r\nimport { getProjects } from '@/services/projectService'\r\nimport { getAbonnements } from '@/services/abonnementService'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { toast, Toaster } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\ninterface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\n// Convert Supabase project format to our internal format\r\nconst fromSupabaseProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  clientId: project.client_id, // Assuming your column is named client_id\r\n  status: project.status as 'active' | 'completed' | 'archived',\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority as 'low' | 'medium' | 'high'\r\n})\r\n\r\nexport default function PlanleggingPage() {\r\n  const [projects, setProjects] = useState<Project[]>([])\r\n  const [abonnements, setAbonnements] = useState<Abonnement[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // Load projects and abonnements from Supabase\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        \r\n        // Fetch projects\r\n        const projectsData = await getProjects()\r\n        setProjects(projectsData.map(fromSupabaseProject))\r\n        \r\n        // Fetch abonnements\r\n        const abonnementsData = await getAbonnements()\r\n        setAbonnements(abonnementsData)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        toast.error('Kunne ikke hente data')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    \r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">Planlegging</h1>\r\n            <p className=\"text-gray-400 mt-2\">Planlegg og organiser prosjekter og vedlikeholdsavtaler i kalenderen</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Toast notifications */}\r\n        <Toaster\r\n          position=\"top-right\"\r\n          toastOptions={{\r\n            duration: 3000,\r\n            style: {\r\n              background: '#333',\r\n              color: '#fff',\r\n            },\r\n          }}\r\n        />\r\n\r\n        {/* Project Planner Component */}\r\n        <div className=\"h-[calc(100vh-200px)]\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n          ) : (\r\n            <ProjectPlanner projects={projects} abonnements={abonnements} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAcA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AAiCA,yDAAyD;AACzD,MAAM,sBAAsB,CAAC,UAAsC,CAAC;QAClE,IAAI,QAAQ,EAAE;QACd,MAAM,QAAQ,IAAI;QAClB,aAAa,QAAQ,WAAW;QAChC,UAAU,QAAQ,SAAS;QAC3B,QAAQ,QAAQ,MAAM;QACtB,WAAW,QAAQ,UAAU;QAC7B,SAAS,QAAQ,QAAQ;QACzB,QAAQ,QAAQ,MAAM,GAAG,OAAO,QAAQ,MAAM,IAAI;QAClD,UAAU,QAAQ,QAAQ;IAC5B,CAAC;AAEc,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,8CAA8C;IAC9C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,aAAa;gBAEb,iBAAiB;gBACjB,MAAM,eAAe,MAAM,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD;gBACrC,YAAY,aAAa,GAAG,CAAC;gBAE7B,oBAAoB;gBACpB,MAAM,kBAAkB,MAAM,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD;gBAC3C,eAAe;YACjB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;gBACtC,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACd,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,8OAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;;;;;;8BAKtC,8OAAC,uJAAA,CAAA,UAAO;oBACN,UAAS;oBACT,cAAc;wBACZ,UAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,OAAO;wBACT;oBACF;;;;;;8BAIF,8OAAC;oBAAI,WAAU;8BACZ,0BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;6CAGjB,8OAAC,oIAAA,CAAA,UAAc;wBAAC,UAAU;wBAAU,aAAa;;;;;;;;;;;;;;;;;;;;;;AAM7D","debugId":null}}]
}