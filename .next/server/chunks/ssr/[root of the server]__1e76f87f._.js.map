{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,gFAAwC;AAC5D,MAAM,kBAAkB,wPAA6C;AAErE,QAAQ,GAAG,CAAC,iBAAiB;AAC7B,QAAQ,GAAG,CAAC,sBAAsB,uCAAkB;AAEpD,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/abonnementService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport interface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\nexport interface AbonnementInput {\r\n  fornavn: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: boolean\r\n  fornyelsesdato: string\r\n  sum: number\r\n  notat: string\r\n}\r\n\r\nexport interface ScheduledAbonnement {\r\n  id: string\r\n  abonnement_id: number\r\n  scheduled_date: string\r\n  created_at: string\r\n  updated_at: string\r\n  abonnementer?: Abonnement\r\n}\r\n\r\n// Get all abonnements\r\nexport async function getAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .select('*')\r\n    .order('etternavn', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Get scheduled abonnements\r\nexport async function getScheduledAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .select(`\r\n      *,\r\n      abonnementer:abonnement_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Schedule an abonnement\r\nexport async function scheduleAbonnement(abonnementId: string, scheduledDate: string) {\r\n  try {\r\n    // Validate inputs\r\n    const abonnementIdNum = Number(abonnementId)\r\n    if (isNaN(abonnementIdNum)) {\r\n      throw new Error(`Invalid abonnement ID: ${abonnementId}`)\r\n    }\r\n    \r\n    if (!scheduledDate || !Date.parse(scheduledDate)) {\r\n      throw new Error(`Invalid date format: ${scheduledDate}`)\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('scheduled_abonnements')\r\n      .insert([\r\n        {\r\n          abonnement_id: abonnementIdNum,\r\n          scheduled_date: scheduledDate\r\n        }\r\n      ])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error scheduling abonnement ${abonnementId} for date ${scheduledDate}:`, {\r\n        message: error.message,\r\n        code: error.code,\r\n        details: error.details,\r\n        hint: error.hint\r\n      })\r\n      throw new Error(`Failed to schedule: ${error.message}`)\r\n    }\r\n\r\n    if (!data || data.length === 0) {\r\n      throw new Error('No data returned from scheduling operation')\r\n    }\r\n\r\n    return data[0]\r\n  } catch (error) {\r\n    console.error(`Failed to schedule abonnement ${abonnementId}:`, {\r\n      error: error instanceof Error ? error.message : error,\r\n      stack: error instanceof Error ? error.stack : undefined\r\n    })\r\n    throw new Error(`Failed to schedule abonnement: ${error instanceof Error ? error.message : 'Unknown error'}`)\r\n  }\r\n}\r\n\r\n// Unschedule an abonnement\r\nexport async function unscheduleAbonnement(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Unschedule an abonnement by abonnement ID and date\r\nexport async function unscheduleAbonnementByIdAndDate(abonnementId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('abonnement_id', abonnementId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement ${abonnementId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Create a new abonnement\r\nexport async function createAbonnement(abonnement: AbonnementInput) {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .insert([\r\n      {\r\n        fornavn: abonnement.fornavn,\r\n        etternavn: abonnement.etternavn,\r\n        adresse: abonnement.adresse,\r\n        kommune: abonnement.kommune,\r\n        var: abonnement.var,\r\n        host: abonnement.host,\r\n        epost: abonnement.epost,\r\n        fakturert: abonnement.fakturert,\r\n        fornyelsesdato: abonnement.fornyelsesdato,\r\n        sum: abonnement.sum,\r\n        notat: abonnement.notat\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error('Error creating abonnement:', error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/AbonnementImport.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { toast } from 'react-hot-toast'\r\nimport * as XLSX from 'xlsx'\r\nimport { createAbonnement } from '@/services/abonnementService'\r\n\r\ninterface AbonnementData {\r\n  fornavn: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var_utfort: boolean\r\n  host_utfort: boolean\r\n  epost: string\r\n  fakturert: boolean\r\n  fornyelsesdato: string\r\n  sum: number\r\n  notat: string\r\n}\r\n\r\ninterface AbonnementImportProps {\r\n  onImportSuccess?: () => void;\r\n}\r\n\r\nexport default function AbonnementImport({ onImportSuccess }: AbonnementImportProps) {\r\n  const [isUploading, setIsUploading] = useState(false)\r\n  const [progress, setProgress] = useState(0)\r\n  const [totalRows, setTotalRows] = useState(0)\r\n  const [processedRows, setProcessedRows] = useState(0)\r\n\r\n  const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0]\r\n    if (!file) return\r\n\r\n    setIsUploading(true)\r\n    setProgress(0)\r\n    setProcessedRows(0)\r\n    \r\n    try {\r\n      const data = await readExcelFile(file)\r\n      if (data.length === 0) {\r\n        toast.error('Ingen data funnet i filen')\r\n        setIsUploading(false)\r\n        return\r\n      }\r\n      \r\n      setTotalRows(data.length)\r\n      await processAbonnements(data)\r\n      \r\n      toast.success(`${data.length} abonnementer importert`)\r\n      e.target.value = ''\r\n    } catch (error) {\r\n      console.error('Error importing abonnements:', error)\r\n      toast.error('Kunne ikke importere abonnementer')\r\n    } finally {\r\n      setIsUploading(false)\r\n    }\r\n  }\r\n\r\n  const readExcelFile = (file: File): Promise<AbonnementData[]> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      \r\n      reader.onload = (e) => {\r\n        try {\r\n          const data = e.target?.result\r\n          const workbook = XLSX.read(data, { type: 'binary' })\r\n          const sheetName = workbook.SheetNames[0]\r\n          const worksheet = workbook.Sheets[sheetName]\r\n          \r\n          // Convert Excel data to JSON\r\n          const jsonData = XLSX.utils.sheet_to_json(worksheet)\r\n          \r\n          // Map Excel columns to our data structure\r\n          const mappedData = jsonData.map((row: any) => ({\r\n            fornavn: row['Fornavn'] || '',\r\n            etternavn: row['Etternavn'] || '',\r\n            adresse: row['Adresse'] || '',\r\n            kommune: row['Kommune'] || '',\r\n            var_utfort: Boolean(row['Vår']),\r\n            host_utfort: Boolean(row['Høst']),\r\n            epost: row['E-post'] || '',\r\n            fakturert: Boolean(row['Fakturert']),\r\n            fornyelsesdato: row['Fornyelsesdato'] ? formatDate(row['Fornyelsesdato']) : '',\r\n            sum: Number(row['Sum']) || 0,\r\n            notat: row['Notat'] || ''\r\n          }))\r\n          \r\n          resolve(mappedData)\r\n        } catch (error) {\r\n          reject(error)\r\n        }\r\n      }\r\n      \r\n      reader.onerror = (error) => reject(error)\r\n      reader.readAsBinaryString(file)\r\n    })\r\n  }\r\n\r\n  const formatDate = (date: any): string => {\r\n    // Handle Excel date format\r\n    if (typeof date === 'number') {\r\n      // Excel dates are number of days since 1900-01-01\r\n      const excelEpoch = new Date(1900, 0, 1)\r\n      const dateObj = new Date(excelEpoch.getTime() + (date - 1) * 24 * 60 * 60 * 1000)\r\n      return dateObj.toISOString().split('T')[0]\r\n    }\r\n    \r\n    // Handle string date format\r\n    if (typeof date === 'string') {\r\n      const parts = date.split('.')\r\n      if (parts.length === 3) {\r\n        // DD.MM.YYYY format\r\n        return `${parts[2]}-${parts[1].padStart(2, '0')}-${parts[0].padStart(2, '0')}`\r\n      }\r\n    }\r\n    \r\n    return ''\r\n  }\r\n\r\n  const processAbonnements = async (data: AbonnementData[]) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      const abonnement = data[i]\r\n      \r\n      try {\r\n        await createAbonnement({\r\n          fornavn: abonnement.fornavn,\r\n          etternavn: abonnement.etternavn,\r\n          adresse: abonnement.adresse,\r\n          kommune: abonnement.kommune,\r\n          var: abonnement.var_utfort ? 'utført' : 'ikke utført',\r\n          host: abonnement.host_utfort ? 'utført' : 'ikke utført',\r\n          epost: abonnement.epost,\r\n          fakturert: abonnement.fakturert,\r\n          fornyelsesdato: abonnement.fornyelsesdato,\r\n          sum: abonnement.sum,\r\n          notat: abonnement.notat\r\n        })\r\n        \r\n        setProcessedRows(i + 1)\r\n        setProgress(Math.round(((i + 1) / data.length) * 100))\r\n      } catch (error) {\r\n        console.error(`Error creating abonnement ${abonnement.etternavn}:`, error)\r\n        // Continue with next abonnement\r\n      }\r\n    }\r\n    \r\n    // Call the onImportSuccess callback if provided\r\n    if (onImportSuccess) {\r\n      onImportSuccess();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 rounded-xl border border-gray-800 p-6\">\r\n      <h2 className=\"text-xl font-semibold text-white mb-4\">Importer abonnementer</h2>\r\n      \r\n      <div className=\"mb-6\">\r\n        <p className=\"text-gray-400 mb-2\">\r\n          Last opp en Excel-fil med abonnementer. Filen må inneholde følgende kolonner:\r\n        </p>\r\n        <ul className=\"text-gray-400 text-sm list-disc pl-5 mb-4\">\r\n          <li>Fornavn</li>\r\n          <li>Etternavn</li>\r\n          <li>Adresse</li>\r\n          <li>Kommune</li>\r\n          <li>Vår (sjekkboks)</li>\r\n          <li>Høst (sjekkboks)</li>\r\n          <li>E-post</li>\r\n          <li>Fakturert (sjekkboks)</li>\r\n          <li>Fornyelsesdato</li>\r\n          <li>Sum</li>\r\n          <li>Notat</li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"mb-6\">\r\n        <label className=\"block mb-2 text-sm font-medium text-white\">\r\n          Velg Excel-fil\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xlsx, .xls\"\r\n          onChange={handleFileUpload}\r\n          disabled={isUploading}\r\n          className=\"block w-full text-sm text-gray-400 border border-gray-700 rounded-lg cursor-pointer bg-gray-800 focus:outline-none\"\r\n        />\r\n      </div>\r\n      \r\n      {isUploading && (\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex justify-between mb-1\">\r\n            <span className=\"text-sm font-medium text-white\">Importerer...</span>\r\n            <span className=\"text-sm font-medium text-white\">{progress}%</span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-700 rounded-full h-2.5\">\r\n            <div \r\n              className=\"bg-blue-600 h-2.5 rounded-full\" \r\n              style={{ width: `${progress}%` }}\r\n            ></div>\r\n          </div>\r\n          <p className=\"text-sm text-gray-400 mt-2\">\r\n            {processedRows} av {totalRows} abonnementer importert\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/abonnement/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { \r\n  ArrowUpTrayIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon\r\n} from '@heroicons/react/24/outline'\r\nimport * as XLSX from 'xlsx'\r\nimport AbonnementImport from '@/components/AbonnementImport'\r\n\r\ninterface AbonnementData {\r\n  id?: string\r\n  etternavn: string\r\n  adresse: string\r\n  sted: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: string\r\n  mail_var: string\r\n  mail_host: string\r\n  tidsbruk_slatt: string\r\n  fornyelsesdato: string\r\n  sum: string\r\n  notat: string\r\n  tak_storrelse?: string\r\n}\r\n\r\ninterface DuplicateWarning {\r\n  customer: AbonnementData\r\n  existingCustomer: AbonnementData\r\n  reason: string\r\n}\r\n\r\ninterface Betaling {\r\n  dato: string\r\n  belop: number\r\n  status: 'betalt' | 'ubetalt' | 'forsinket'\r\n}\r\n\r\ninterface Inspeksjon {\r\n  dato: string\r\n  utfort_av: string\r\n  kommentar: string\r\n  status: 'godkjent' | 'mangler'\r\n}\r\n\r\ninterface Besok {\r\n  dato: string\r\n  ansatt: string\r\n  varighet: string\r\n  kommentar: string\r\n}\r\n\r\ninterface NyKundeForm {\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  fornyelsesdato: string\r\n  tak_storrelse: string\r\n}\r\n\r\nexport default function Abonnement() {\r\n  const [abonnementer, setAbonnementer] = useState<AbonnementData[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [importStatus, setImportStatus] = useState<string>('')\r\n  const [visNyKundeSkjema, setVisNyKundeSkjema] = useState(false)\r\n  const [nyKunde, setNyKunde] = useState<NyKundeForm>({\r\n    etternavn: '',\r\n    adresse: '',\r\n    kommune: '',\r\n    fornyelsesdato: '',\r\n    tak_storrelse: ''\r\n  })\r\n  const [submitStatus, setSubmitStatus] = useState<string>('')\r\n  \r\n  // Customer detail view state\r\n  const [selectedCustomer, setSelectedCustomer] = useState<AbonnementData | null>(null)\r\n  const [activeTab, setActiveTab] = useState<'betalinger' | 'inspeksjoner' | 'besok' | 'kontakt'>('kontakt')\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [editedCustomer, setEditedCustomer] = useState<AbonnementData | null>(null)\r\n  \r\n  // Multi-select and delete state\r\n  const [selectedCustomers, setSelectedCustomers] = useState<string[]>([])\r\n  const [bulkDeleteMode, setBulkDeleteMode] = useState(false)\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false)\r\n  \r\n  // Duplicate verification state\r\n  const [duplicateWarnings, setDuplicateWarnings] = useState<DuplicateWarning[]>([])\r\n  const [showDuplicateWarnings, setShowDuplicateWarnings] = useState(false)\r\n  \r\n  // Mock data for customer details\r\n  const [mockBetalinger] = useState<Betaling[]>([\r\n    { dato: '2025-01-15', belop: 2500, status: 'betalt' },\r\n    { dato: '2024-07-20', belop: 2500, status: 'betalt' },\r\n    { dato: '2024-01-15', belop: 2300, status: 'betalt' },\r\n    { dato: '2023-07-20', belop: 2300, status: 'betalt' }\r\n  ])\r\n  \r\n  const [mockInspeksjoner] = useState<Inspeksjon[]>([\r\n    { dato: '2025-03-10', utfort_av: 'Ole Hansen', kommentar: 'Alt ser bra ut', status: 'godkjent' },\r\n    { dato: '2024-09-05', utfort_av: 'Kari Olsen', kommentar: 'Noen områder trenger ekstra vedlikehold', status: 'mangler' },\r\n    { dato: '2024-03-12', utfort_av: 'Ole Hansen', kommentar: 'Fikset mangler fra forrige inspeksjon', status: 'godkjent' },\r\n    { dato: '2023-09-08', utfort_av: 'Kari Olsen', kommentar: 'Alt ser bra ut', status: 'godkjent' }\r\n  ])\r\n  \r\n  const [mockBesok] = useState<Besok[]>([\r\n    { dato: '2025-03-10', ansatt: 'Ole Hansen', varighet: '2 timer', kommentar: 'Vanlig vedlikehold' },\r\n    { dato: '2024-09-05', ansatt: 'Kari Olsen', varighet: '3 timer', kommentar: 'Ekstra arbeid på nordside' },\r\n    { dato: '2024-03-12', ansatt: 'Ole Hansen', varighet: '2 timer', kommentar: 'Vanlig vedlikehold' },\r\n    { dato: '2023-09-08', ansatt: 'Kari Olsen', varighet: '2 timer', kommentar: 'Vanlig vedlikehold' }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    fetchAbonnementer()\r\n  }, [])\r\n\r\n  async function fetchAbonnementer(searchTerm?: string) {\r\n    try {\r\n      console.log('Henter abonnementer...')\r\n      let query = supabase\r\n        .from('abonnementer')\r\n        .select('*')\r\n\r\n      if (searchTerm) {\r\n        query = query.or(\r\n          `etternavn.ilike.%${searchTerm}%,adresse.ilike.%${searchTerm}%,kommune.ilike.%${searchTerm}%`\r\n        )\r\n      }\r\n\r\n      const { data, error } = await query\r\n      \r\n      if (error) {\r\n        console.error('Supabase error:', error)\r\n        throw error\r\n      }\r\n      \r\n      console.log('Mottatt data:', data)\r\n      setAbonnementer(data || [])\r\n    } catch (error) {\r\n      console.error('Fetch error:', error)\r\n      setError('Kunne ikke hente abonnementer')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setNyKunde(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    try {\r\n      setSubmitStatus('Lagrer ny kunde...')\r\n      \r\n      // Prepare data for insertion\r\n      const nyKundeData = {\r\n        etternavn: nyKunde.etternavn,\r\n        adresse: nyKunde.adresse,\r\n        kommune: nyKunde.kommune,\r\n        fornyelsesdato: nyKunde.fornyelsesdato,\r\n        tak_storrelse: nyKunde.tak_storrelse,\r\n        // Set default values for required fields\r\n        sted: '',\r\n        var: '',\r\n        host: '',\r\n        epost: '',\r\n        fakturert: '',\r\n        mail_var: '',\r\n        mail_host: '',\r\n        tidsbruk_slatt: '',\r\n        sum: '',\r\n        notat: ''\r\n      }\r\n      \r\n      const { error } = await supabase\r\n        .from('abonnementer')\r\n        .insert([nyKundeData])\r\n      \r\n      if (error) {\r\n        console.error('Supabase insert error:', error)\r\n        throw error\r\n      }\r\n      \r\n      // Reset form and refresh data\r\n      setNyKunde({\r\n        etternavn: '',\r\n        adresse: '',\r\n        kommune: '',\r\n        fornyelsesdato: '',\r\n        tak_storrelse: ''\r\n      })\r\n      setSubmitStatus('Kunde lagt til!')\r\n      setVisNyKundeSkjema(false)\r\n      fetchAbonnementer()\r\n      \r\n      // Clear status message after 3 seconds\r\n      setTimeout(() => {\r\n        setSubmitStatus('')\r\n      }, 3000)\r\n      \r\n    } catch (error) {\r\n      console.error('Submit error:', error)\r\n      setSubmitStatus('Kunne ikke lagre ny kunde')\r\n    }\r\n  }\r\n\r\n  async function handleFileImport(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const file = event.target.files?.[0]\r\n    if (!file) return\r\n\r\n    try {\r\n      setImportStatus('Importerer fil...')\r\n      const reader = new FileReader()\r\n      reader.onload = async (e) => {\r\n        const data = e.target?.result\r\n        const workbook = XLSX.read(data, { type: 'binary' })\r\n        const sheetName = workbook.SheetNames[0]\r\n        const worksheet = workbook.Sheets[sheetName]\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet)\r\n\r\n        // Log the first row to see the actual column names\r\n        if (jsonData.length > 0 && typeof jsonData[0] === 'object' && jsonData[0] !== null) {\r\n          console.log('First row column names:', Object.keys(jsonData[0]))\r\n        }\r\n\r\n        const transformedData = jsonData.map((row: any) => {\r\n          // Helper function to find a value regardless of case sensitivity\r\n          const getValueCaseInsensitive = (obj: any, keySearch: string) => {\r\n            const keys = Object.keys(obj)\r\n            const key = keys.find(k => k.toLowerCase() === keySearch.toLowerCase())\r\n            return key ? obj[key] : undefined\r\n          }\r\n          \r\n          // Get values with case-insensitive lookup\r\n          const fornavn = getValueCaseInsensitive(row, 'Fornavn')\r\n          const etternavn = getValueCaseInsensitive(row, 'Etternavn')\r\n          const adresse = getValueCaseInsensitive(row, 'Adresse')\r\n          const kommune = getValueCaseInsensitive(row, 'Kommune')\r\n          const varUtfortRaw = getValueCaseInsensitive(row, 'utført vår')\r\n          const hostUtfortRaw = getValueCaseInsensitive(row, 'utført høstvedlikehold')\r\n          const epost = getValueCaseInsensitive(row, 'E-post')\r\n          const fakturertRaw = getValueCaseInsensitive(row, 'utført fakturering')\r\n          const fornyelsesdatoRaw = getValueCaseInsensitive(row, 'fornyelsesdato')\r\n          const sum = getValueCaseInsensitive(row, 'Sum')\r\n          const notat = getValueCaseInsensitive(row, 'Notat')\r\n          \r\n          // Combine first and last name for the etternavn field if both exist\r\n          // Make sure to handle all possible combinations and trim any extra spaces\r\n          let fullName = '';\r\n          if (fornavn && etternavn) {\r\n            fullName = `${fornavn.trim()} ${etternavn.trim()}`.trim();\r\n          } else if (fornavn) {\r\n            fullName = fornavn.trim();\r\n          } else if (etternavn) {\r\n            fullName = etternavn.trim();\r\n          }\r\n          \r\n          // If no name was found, use a placeholder\r\n          if (!fullName) {\r\n            fullName = 'Ukjent navn';\r\n          }\r\n          \r\n          console.log(`Combining names: Fornavn=\"${fornavn}\", Etternavn=\"${etternavn}\" => \"${fullName}\"`);\r\n          \r\n          // Convert checkbox values to 'Ja'/'Nei' strings\r\n          const varUtfort = typeof varUtfortRaw === 'boolean' \r\n            ? (varUtfortRaw ? 'Ja' : 'Nei')\r\n            : (varUtfortRaw || '')\r\n          \r\n          const hostUtfort = typeof hostUtfortRaw === 'boolean'\r\n            ? (hostUtfortRaw ? 'Ja' : 'Nei')\r\n            : (hostUtfortRaw || '')\r\n          \r\n          const fakturertUtfort = typeof fakturertRaw === 'boolean'\r\n            ? (fakturertRaw ? 'Ja' : 'Nei')\r\n            : (fakturertRaw || '')\r\n          \r\n          // Format date if it's in Excel date format\r\n          let fornyelsesdato = fornyelsesdatoRaw || ''\r\n          if (fornyelsesdato && typeof fornyelsesdato === 'number') {\r\n            // Convert Excel date number to JS date\r\n            const excelDate = new Date(Math.round((fornyelsesdato - 25569) * 86400 * 1000))\r\n            fornyelsesdato = excelDate.toISOString().split('T')[0] // Format as YYYY-MM-DD\r\n          }\r\n          \r\n          return {\r\n            etternavn: fullName,\r\n            adresse: adresse || '',\r\n            sted: '', // Not in the import format, set empty\r\n            kommune: kommune || '',\r\n            var: varUtfort,\r\n            host: hostUtfort,\r\n            epost: epost || '',\r\n            fakturert: fakturertUtfort,\r\n            mail_var: '', // Not in the import format, set empty\r\n            mail_host: '', // Not in the import format, set empty\r\n            tidsbruk_slatt: '', // Not in the import format, set empty\r\n            fornyelsesdato: fornyelsesdato,\r\n            sum: sum ? sum.toString() : '',\r\n            notat: notat || ''\r\n          }\r\n        })\r\n\r\n        console.log('Checking for duplicates and preparing data for import:', transformedData)\r\n        \r\n        try {\r\n          // Check for potential duplicates\r\n          const potentialDuplicates: DuplicateWarning[] = []\r\n          \r\n          for (const newCustomer of transformedData) {\r\n            // Check for duplicates by name and address\r\n            const { data: existingCustomers } = await supabase\r\n              .from('abonnementer')\r\n              .select('*')\r\n              .or(`etternavn.ilike.${newCustomer.etternavn},adresse.ilike.${newCustomer.adresse}`)\r\n            \r\n            if (existingCustomers && existingCustomers.length > 0) {\r\n              for (const existingCustomer of existingCustomers) {\r\n                let reason = ''\r\n                \r\n                // Check for exact name match\r\n                if (existingCustomer.etternavn.toLowerCase() === newCustomer.etternavn.toLowerCase()) {\r\n                  reason += 'Samme navn. '\r\n                }\r\n                \r\n                // Check for exact address match\r\n                if (existingCustomer.adresse.toLowerCase() === newCustomer.adresse.toLowerCase()) {\r\n                  reason += 'Samme adresse. '\r\n                }\r\n                \r\n                if (reason) {\r\n                  potentialDuplicates.push({\r\n                    customer: newCustomer,\r\n                    existingCustomer,\r\n                    reason: reason.trim()\r\n                  })\r\n                  break // Only add the first duplicate found for this customer\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (potentialDuplicates.length > 0) {\r\n            // Store duplicates for display\r\n            setDuplicateWarnings(potentialDuplicates)\r\n            setShowDuplicateWarnings(true)\r\n            setImportStatus(`Advarsel: ${potentialDuplicates.length} potensielle duplikater funnet. Se advarsler for detaljer.`)\r\n          } else {\r\n            // No duplicates found, proceed with import\r\n            const { error } = await supabase\r\n              .from('abonnementer')\r\n              .insert(transformedData)\r\n\r\n            if (error) {\r\n              console.error('Supabase insert error:', error)\r\n              setImportStatus(`Import feilet: ${error.message || 'Ukjent feil'}`)\r\n              return\r\n            }\r\n            \r\n            setImportStatus(`Import fullført! ${transformedData.length} abonnementer lagt til.`)\r\n            // Refresh the subscription list\r\n            fetchAbonnementer()\r\n          }\r\n        } catch (insertError) {\r\n          console.error('Insert error:', insertError)\r\n          setImportStatus('Import feilet: Kunne ikke legge til abonnementer')\r\n          return\r\n        }\r\n      }\r\n      reader.readAsBinaryString(file)\r\n    } catch (error) {\r\n      console.error('Import error:', error)\r\n      setImportStatus('Import feilet')\r\n      setError('Kunne ikke importere filen')\r\n    }\r\n  }\r\n\r\n  if (loading) return (\r\n    <div className=\"text-center text-white\">\r\n      <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto\"></div>\r\n      <p className=\"mt-4\">Laster abonnementer...</p>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className=\"text-4xl font-bold text-white mb-4\">Vedlikeholdsabonnementer</h1>\r\n        <p className=\"text-gray-400\">Administrer torvtak vedlikeholdsabonnementer</p>\r\n      </div>\r\n\r\n      {/* Import seksjon */}\r\n      <div className=\"mb-8\">\r\n        <AbonnementImport onImportSuccess={fetchAbonnementer} />\r\n      </div>\r\n\r\n      {/* Abonnementsliste */}\r\n      <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-semibold text-white\">\r\n            {error ? 'Feil ved lasting av abonnementer' : 'Abonnementer'}\r\n          </h2>\r\n          <div className=\"relative w-64\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Søk i kunder...\"\r\n              className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              onChange={(e) => {\r\n                const searchTerm = e.target.value.toLowerCase()\r\n                fetchAbonnementer(searchTerm)\r\n              }}\r\n            />\r\n            <svg\r\n              className=\"absolute right-3 top-2.5 h-5 w-5 text-gray-400\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            {bulkDeleteMode ? (\r\n              <>\r\n                <button \r\n                  className={`px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center ${selectedCustomers.length === 0 ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                  onClick={() => {\r\n                    if (selectedCustomers.length > 0) {\r\n                      setDeleteConfirmOpen(true)\r\n                    }\r\n                  }}\r\n                  disabled={selectedCustomers.length === 0}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                  </svg>\r\n                  Slett ({selectedCustomers.length})\r\n                </button>\r\n                <button \r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                  onClick={() => {\r\n                    setBulkDeleteMode(false)\r\n                    setSelectedCustomers([])\r\n                  }}\r\n                >\r\n                  Avbryt\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button \r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors flex items-center\"\r\n                  onClick={() => setBulkDeleteMode(true)}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                  </svg>\r\n                  Slett kunder\r\n                </button>\r\n                <button \r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center\"\r\n                  onClick={() => setVisNyKundeSkjema(true)}\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                  </svg>\r\n                  Legg til ny kunde\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {error ? (\r\n          <p className=\"text-red-500\">{error}</p>\r\n        ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                  {bulkDeleteMode && (\r\n                    <th className=\"pb-3 w-10\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"w-4 h-4 rounded border-gray-600 bg-gray-700 text-blue-600 focus:ring-blue-500\"\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            // Select all\r\n                            setSelectedCustomers(abonnementer.filter(a => a.id).map(a => a.id as string))\r\n                          } else {\r\n                            // Deselect all\r\n                            setSelectedCustomers([])\r\n                          }\r\n                        }}\r\n                        checked={selectedCustomers.length === abonnementer.filter(a => a.id).length && abonnementer.length > 0}\r\n                      />\r\n                    </th>\r\n                  )}\r\n                  <th className=\"pb-3\">Navn</th>\r\n                  <th className=\"pb-3\">Adresse</th>\r\n                  <th className=\"pb-3\">Kommune</th>\r\n                  <th className=\"pb-3\">Vår</th>\r\n                  <th className=\"pb-3\">Høst</th>\r\n                  <th className=\"pb-3\">Fornyelsesdato</th>\r\n                  <th className=\"pb-3\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {abonnementer.map((abonnement, index) => (\r\n                  <tr \r\n                    key={index} \r\n                    className=\"border-b border-gray-700 text-gray-300 hover:bg-gray-700 cursor-pointer transition-colors\"\r\n                    onClick={(e) => {\r\n                      if (bulkDeleteMode) {\r\n                        // Don't open customer detail in bulk delete mode unless clicking checkbox\r\n                        const target = e.target as HTMLElement\r\n                        if (target.tagName !== 'INPUT') {\r\n                          e.preventDefault()\r\n                          // Toggle selection\r\n                          if (abonnement.id) {\r\n                            if (selectedCustomers.includes(abonnement.id)) {\r\n                              setSelectedCustomers(prev => prev.filter(id => id !== abonnement.id))\r\n                            } else {\r\n                              setSelectedCustomers(prev => [...prev, abonnement.id as string])\r\n                            }\r\n                          }\r\n                        }\r\n                      } else {\r\n                        setSelectedCustomer(abonnement)\r\n                      }\r\n                    }}\r\n                  >\r\n                    {bulkDeleteMode && (\r\n                      <td className=\"py-3 pl-3\">\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          className=\"w-4 h-4 rounded border-gray-600 bg-gray-700 text-blue-600 focus:ring-blue-500\"\r\n                          checked={abonnement.id ? selectedCustomers.includes(abonnement.id) : false}\r\n                          onChange={(e) => {\r\n                            if (abonnement.id) {\r\n                              if (e.target.checked) {\r\n                                setSelectedCustomers(prev => [...prev, abonnement.id as string])\r\n                              } else {\r\n                                setSelectedCustomers(prev => prev.filter(id => id !== abonnement.id))\r\n                              }\r\n                            }\r\n                          }}\r\n                          onClick={(e) => e.stopPropagation()}\r\n                        />\r\n                      </td>\r\n                    )}\r\n                    <td className=\"py-3\">{abonnement.etternavn}</td>\r\n                    <td className=\"py-3\">{abonnement.adresse}</td>\r\n                    <td className=\"py-3\">{abonnement.kommune || '-'}</td>\r\n                    <td className=\"py-3\">{abonnement.var}</td>\r\n                    <td className=\"py-3\">{abonnement.host}</td>\r\n                    <td className=\"py-3\">{abonnement.fornyelsesdato}</td>\r\n                    <td className=\"py-3\">\r\n                      <span className=\"px-2 py-1 text-xs rounded-full bg-green-900/20 text-green-400\">\r\n                        Aktiv\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Customer detail modal */}\r\n      {selectedCustomer && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-white\">{selectedCustomer.etternavn}</h3>\r\n              <button \r\n                onClick={() => setSelectedCustomer(null)}\r\n                className=\"text-gray-400 hover:text-white\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Tabs */}\r\n            <div className=\"flex border-b border-gray-700 mb-6\">\r\n              <button\r\n                className={`px-4 py-2 font-medium ${activeTab === 'betalinger' ? 'text-blue-400 border-b-2 border-blue-400' : 'text-gray-400 hover:text-gray-300'}`}\r\n                onClick={() => setActiveTab('betalinger')}\r\n              >\r\n                Betalinger\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 font-medium ${activeTab === 'inspeksjoner' ? 'text-blue-400 border-b-2 border-blue-400' : 'text-gray-400 hover:text-gray-300'}`}\r\n                onClick={() => setActiveTab('inspeksjoner')}\r\n              >\r\n                Inspeksjoner\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 font-medium ${activeTab === 'besok' ? 'text-blue-400 border-b-2 border-blue-400' : 'text-gray-400 hover:text-gray-300'}`}\r\n                onClick={() => setActiveTab('besok')}\r\n              >\r\n                Besøk\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 font-medium ${activeTab === 'kontakt' ? 'text-blue-400 border-b-2 border-blue-400' : 'text-gray-400 hover:text-gray-300'}`}\r\n                onClick={() => setActiveTab('kontakt')}\r\n              >\r\n                Kontaktinfo\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Tab content */}\r\n            <div>\r\n              {/* Betalinger tab */}\r\n              {activeTab === 'betalinger' && (\r\n                <div>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Betalingshistorikk</h4>\r\n                    <button className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\">\r\n                      Registrer ny betaling\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead>\r\n                        <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                          <th className=\"pb-2\">Dato</th>\r\n                          <th className=\"pb-2\">Beløp</th>\r\n                          <th className=\"pb-2\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {mockBetalinger.map((betaling, index) => (\r\n                          <tr key={index} className=\"border-b border-gray-700 text-gray-300\">\r\n                            <td className=\"py-3\">{betaling.dato}</td>\r\n                            <td className=\"py-3\">{betaling.belop} kr</td>\r\n                            <td className=\"py-3\">\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${\r\n                                betaling.status === 'betalt' \r\n                                  ? 'bg-green-900/20 text-green-400' \r\n                                  : betaling.status === 'ubetalt' \r\n                                    ? 'bg-yellow-900/20 text-yellow-400'\r\n                                    : 'bg-red-900/20 text-red-400'\r\n                              }`}>\r\n                                {betaling.status === 'betalt' ? 'Betalt' : betaling.status === 'ubetalt' ? 'Ubetalt' : 'Forsinket'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Inspeksjoner tab */}\r\n              {activeTab === 'inspeksjoner' && (\r\n                <div>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Inspeksjonshistorikk</h4>\r\n                    <button className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\">\r\n                      Registrer ny inspeksjon\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead>\r\n                        <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                          <th className=\"pb-2\">Dato</th>\r\n                          <th className=\"pb-2\">Utført av</th>\r\n                          <th className=\"pb-2\">Kommentar</th>\r\n                          <th className=\"pb-2\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {mockInspeksjoner.map((inspeksjon, index) => (\r\n                          <tr key={index} className=\"border-b border-gray-700 text-gray-300\">\r\n                            <td className=\"py-3\">{inspeksjon.dato}</td>\r\n                            <td className=\"py-3\">{inspeksjon.utfort_av}</td>\r\n                            <td className=\"py-3\">{inspeksjon.kommentar}</td>\r\n                            <td className=\"py-3\">\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${\r\n                                inspeksjon.status === 'godkjent' \r\n                                  ? 'bg-green-900/20 text-green-400' \r\n                                  : 'bg-yellow-900/20 text-yellow-400'\r\n                              }`}>\r\n                                {inspeksjon.status === 'godkjent' ? 'Godkjent' : 'Mangler'}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Besøk tab */}\r\n              {activeTab === 'besok' && (\r\n                <div>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Besøkshistorikk</h4>\r\n                    <button className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\">\r\n                      Registrer nytt besøk\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full\">\r\n                      <thead>\r\n                        <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                          <th className=\"pb-2\">Dato</th>\r\n                          <th className=\"pb-2\">Ansatt</th>\r\n                          <th className=\"pb-2\">Varighet</th>\r\n                          <th className=\"pb-2\">Kommentar</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {mockBesok.map((besok, index) => (\r\n                          <tr key={index} className=\"border-b border-gray-700 text-gray-300\">\r\n                            <td className=\"py-3\">{besok.dato}</td>\r\n                            <td className=\"py-3\">{besok.ansatt}</td>\r\n                            <td className=\"py-3\">{besok.varighet}</td>\r\n                            <td className=\"py-3\">{besok.kommentar}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Kontaktinfo tab */}\r\n              {activeTab === 'kontakt' && (\r\n                <div>\r\n                  <div className=\"flex justify-between items-center mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Kontaktinformasjon</h4>\r\n                    {!editMode ? (\r\n                      <button \r\n                        className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\r\n                        onClick={() => {\r\n                          setEditMode(true)\r\n                          setEditedCustomer(selectedCustomer)\r\n                        }}\r\n                      >\r\n                        Rediger\r\n                      </button>\r\n                    ) : (\r\n                      <div className=\"flex space-x-2\">\r\n                        <button \r\n                          className=\"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-sm\"\r\n                          onClick={() => {\r\n                            setEditMode(false)\r\n                            setEditedCustomer(null)\r\n                          }}\r\n                        >\r\n                          Avbryt\r\n                        </button>\r\n                        <button \r\n                          className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\r\n                          onClick={async () => {\r\n                            if (!editedCustomer) return;\r\n                            \r\n                            try {\r\n                              const { error } = await supabase\r\n                                .from('abonnementer')\r\n                                .update({\r\n                                  etternavn: editedCustomer.etternavn,\r\n                                  adresse: editedCustomer.adresse,\r\n                                  kommune: editedCustomer.kommune,\r\n                                  epost: editedCustomer.epost,\r\n                                  fornyelsesdato: editedCustomer.fornyelsesdato,\r\n                                  tak_storrelse: editedCustomer.tak_storrelse,\r\n                                  notat: editedCustomer.notat\r\n                                })\r\n                                .eq('id', editedCustomer.id)\r\n                              \r\n                              if (error) {\r\n                                console.error('Update error:', error)\r\n                                throw error\r\n                              }\r\n                              \r\n                              // Update the selected customer with the edited values\r\n                              setSelectedCustomer(editedCustomer)\r\n                              setEditMode(false)\r\n                              \r\n                              // Refresh the subscription list\r\n                              fetchAbonnementer()\r\n                            } catch (error) {\r\n                              console.error('Update error:', error)\r\n                              // Show error message\r\n                            }\r\n                          }}\r\n                        >\r\n                          Lagre\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {!editMode ? (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Navn</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.etternavn}</p>\r\n                      </div>\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Adresse</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.adresse}</p>\r\n                      </div>\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Kommune</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.kommune || '-'}</p>\r\n                      </div>\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">E-post</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.epost || '-'}</p>\r\n                      </div>\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Fornyelsesdato</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.fornyelsesdato || '-'}</p>\r\n                      </div>\r\n                      <div>\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Takstørrelse</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.tak_storrelse || '-'}</p>\r\n                      </div>\r\n                      <div className=\"md:col-span-2\">\r\n                        <h5 className=\"text-sm font-medium text-gray-400 mb-1\">Notat</h5>\r\n                        <p className=\"text-white\">{selectedCustomer.notat || '-'}</p>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <label htmlFor=\"edit-etternavn\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Navn\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"edit-etternavn\"\r\n                          value={editedCustomer?.etternavn || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                etternavn: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-adresse\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Adresse\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"edit-adresse\"\r\n                          value={editedCustomer?.adresse || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                adresse: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-kommune\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Kommune\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"edit-kommune\"\r\n                          value={editedCustomer?.kommune || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                kommune: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-epost\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          E-post\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          id=\"edit-epost\"\r\n                          value={editedCustomer?.epost || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                epost: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-fornyelsesdato\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Fornyelsesdato\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          id=\"edit-fornyelsesdato\"\r\n                          value={editedCustomer?.fornyelsesdato || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                fornyelsesdato: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-tak_storrelse\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Takstørrelse\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"edit-tak_storrelse\"\r\n                          value={editedCustomer?.tak_storrelse || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                tak_storrelse: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                          placeholder=\"f.eks. 120 m²\"\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label htmlFor=\"edit-notat\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                          Notat\r\n                        </label>\r\n                        <textarea\r\n                          id=\"edit-notat\"\r\n                          value={editedCustomer?.notat || ''}\r\n                          onChange={(e) => {\r\n                            if (editedCustomer) {\r\n                              setEditedCustomer({\r\n                                ...editedCustomer,\r\n                                notat: e.target.value\r\n                              })\r\n                            }\r\n                          }}\r\n                          rows={3}\r\n                          className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Delete confirmation modal */}\r\n      {deleteConfirmOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-white\">Bekreft sletting</h3>\r\n              <button \r\n                onClick={() => setDeleteConfirmOpen(false)}\r\n                className=\"text-gray-400 hover:text-white\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <p className=\"text-white mb-2\">Er du sikker på at du vil slette {selectedCustomers.length} kunde{selectedCustomers.length !== 1 ? 'r' : ''}?</p>\r\n              <p className=\"text-gray-400 text-sm\">Dette kan ikke angres.</p>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setDeleteConfirmOpen(false)}\r\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n              >\r\n                Avbryt\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={async () => {\r\n                  try {\r\n                    const { error } = await supabase\r\n                      .from('abonnementer')\r\n                      .delete()\r\n                      .in('id', selectedCustomers)\r\n                    \r\n                    if (error) {\r\n                      console.error('Delete error:', error)\r\n                      throw error\r\n                    }\r\n                    \r\n                    // Reset state and refresh data\r\n                    setDeleteConfirmOpen(false)\r\n                    setBulkDeleteMode(false)\r\n                    setSelectedCustomers([])\r\n                    fetchAbonnementer()\r\n                  } catch (error) {\r\n                    console.error('Delete error:', error)\r\n                    // Show error message\r\n                  }\r\n                }}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n              >\r\n                Slett\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Duplicate warnings modal */}\r\n      {showDuplicateWarnings && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-white\">Potensielle duplikater funnet</h3>\r\n              <button \r\n                onClick={() => setShowDuplicateWarnings(false)}\r\n                className=\"text-gray-400 hover:text-white\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mb-6\">\r\n              <p className=\"text-white mb-2\">\r\n                Følgende kunder i importfilen kan være duplikater av eksisterende kunder:\r\n              </p>\r\n              <p className=\"text-gray-400 text-sm mb-4\">\r\n                Vennligst gjennomgå listen og bekreft om du vil fortsette med importen.\r\n              </p>\r\n              \r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full\">\r\n                  <thead>\r\n                    <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                      <th className=\"pb-3\">Ny kunde</th>\r\n                      <th className=\"pb-3\">Eksisterende kunde</th>\r\n                      <th className=\"pb-3\">Årsak</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {duplicateWarnings.map((warning, index) => (\r\n                      <tr key={index} className=\"border-b border-gray-700 text-gray-300\">\r\n                        <td className=\"py-3\">\r\n                          <div className=\"font-medium\">{warning.customer.etternavn}</div>\r\n                          <div className=\"text-sm text-gray-400\">{warning.customer.adresse}</div>\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <div className=\"font-medium\">{warning.existingCustomer.etternavn}</div>\r\n                          <div className=\"text-sm text-gray-400\">{warning.existingCustomer.adresse}</div>\r\n                        </td>\r\n                        <td className=\"py-3\">\r\n                          <span className=\"px-2 py-1 text-xs rounded-full bg-yellow-900/20 text-yellow-400\">\r\n                            {warning.reason}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowDuplicateWarnings(false)\r\n                  setImportStatus('')\r\n                }}\r\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n              >\r\n                Avbryt import\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={async () => {\r\n                  try {\r\n                    // Extract just the customer data from the warnings\r\n                    const customersToImport = duplicateWarnings.map(warning => warning.customer)\r\n                    \r\n                    const { error } = await supabase\r\n                      .from('abonnementer')\r\n                      .insert(customersToImport)\r\n\r\n                    if (error) {\r\n                      console.error('Supabase insert error:', error)\r\n                      setImportStatus(`Import feilet: ${error.message || 'Ukjent feil'}`)\r\n                      return\r\n                    }\r\n                    \r\n                    setImportStatus(`Import fullført! ${customersToImport.length} abonnementer lagt til.`)\r\n                    setShowDuplicateWarnings(false)\r\n                    // Refresh the subscription list\r\n                    fetchAbonnementer()\r\n                  } catch (error) {\r\n                    console.error('Import error:', error)\r\n                    setImportStatus('Import feilet: Kunne ikke legge til abonnementer')\r\n                  }\r\n                }}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Fortsett import likevel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Modal for å legge til ny kunde */}\r\n      {visNyKundeSkjema && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 w-full max-w-md\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h3 className=\"text-xl font-semibold text-white\">Legg til ny kunde</h3>\r\n              <button \r\n                onClick={() => setVisNyKundeSkjema(false)}\r\n                className=\"text-gray-400 hover:text-white\"\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"etternavn\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                    Navn\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"etternavn\"\r\n                    name=\"etternavn\"\r\n                    value={nyKunde.etternavn}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"adresse\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                    Adresse\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"adresse\"\r\n                    name=\"adresse\"\r\n                    value={nyKunde.adresse}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"kommune\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                    Kommune\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"kommune\"\r\n                    name=\"kommune\"\r\n                    value={nyKunde.kommune}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"fornyelsesdato\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                    Fornyelsesdato\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"fornyelsesdato\"\r\n                    name=\"fornyelsesdato\"\r\n                    value={nyKunde.fornyelsesdato}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"tak_storrelse\" className=\"block text-sm font-medium text-gray-400 mb-1\">\r\n                    Størrelse på tak\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"tak_storrelse\"\r\n                    name=\"tak_storrelse\"\r\n                    value={nyKunde.tak_storrelse}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"f.eks. 120 m²\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {submitStatus && (\r\n                <p className={`mt-4 ${submitStatus.includes('ikke') ? 'text-red-500' : 'text-green-500'}`}>\r\n                  {submitStatus}\r\n                </p>\r\n              )}\r\n              \r\n              <div className=\"mt-6 flex justify-end space-x-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setVisNyKundeSkjema(false)}\r\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  Avbryt\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Lagre\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}