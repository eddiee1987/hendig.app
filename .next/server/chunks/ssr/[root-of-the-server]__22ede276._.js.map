{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        (window as any).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/inspeksjoner/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, useRouter } from 'next/navigation'\r\nimport { supabase } from '@/lib/supabase'\r\nimport Link from 'next/link'\r\nimport { Button } from '@/components/ui/button'\r\n\r\ninterface Inspection {\r\n  id: string\r\n  customer_id: string\r\n  customer_name: string\r\n  customer_address: string\r\n  inspection_date: string\r\n  inspection_type: 'vårvedlikehold' | 'høstvedlikehold' | 'rehabilitering'\r\n  status: 'planlagt' | 'utført'\r\n  inspector: string\r\n  notes: string\r\n  roof_condition: string\r\n  before_images?: string[]\r\n  after_images?: string[]\r\n  abonnementer?: {\r\n    etternavn: string\r\n  }\r\n}\r\n\r\nexport default function InspectionDetail() {\r\n  const params = useParams()\r\n  const router = useRouter()\r\n  const [inspection, setInspection] = useState<Inspection | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [newBeforeImages, setNewBeforeImages] = useState<File[]>([])\r\n  const [newAfterImages, setNewAfterImages] = useState<File[]>([])\r\n  const [tempBeforeImageUrls, setTempBeforeImageUrls] = useState<string[]>([])\r\n  const [tempAfterImageUrls, setTempAfterImageUrls] = useState<string[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchInspection()\r\n  }, [params.id])\r\n\r\n  async function fetchInspection() {\r\n    try {\r\n      setLoading(true)\r\n      \r\n      const { data, error } = await supabase\r\n        .from('inspections')\r\n        .select(`\r\n          *,\r\n          abonnementer:customer_id (etternavn),\r\n          before_images,\r\n          after_images\r\n        `)\r\n        .eq('id', params.id)\r\n        .single()\r\n\r\n      if (error) throw error\r\n      setInspection(data)\r\n    } catch (err) {\r\n      console.error('Error fetching inspection:', err)\r\n      setError('Kunne ikke hente inspeksjon')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n        <div className=\"max-w-7xl mx-auto text-center py-12\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-400\">Laster inspeksjon...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error || !inspection) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"bg-red-900/20 text-red-400 p-6 rounded-xl text-center\">\r\n            {error || 'Inspeksjon ikke funnet'}\r\n          </div>\r\n          <div className=\"mt-4 text-center\">\r\n            <Link href=\"/inspeksjoner\">\r\n              <Button variant=\"outline\">Tilbake til liste</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8 ml-64\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"flex justify-between items-center mb-8\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-white\">\r\n                Inspeksjon for {inspection.abonnementer?.etternavn || inspection.customer_name || 'Ukjent kunde'}\r\n              </h1>\r\n              <p className=\"text-gray-400 mt-2\">\r\n                {new Date(inspection.inspection_date).toLocaleDateString('nb-NO')} • \r\n                <span className={`ml-2 px-2 py-1 rounded-full text-xs font-medium ${\r\n                  inspection.status === 'planlagt' \r\n                    ? 'bg-yellow-900/50 text-yellow-400' \r\n                    : 'bg-green-900/50 text-green-400'\r\n                }`}>\r\n                  {inspection.status}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              {isEditing ? (\r\n                <>\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    onClick={() => setIsEditing(false)}\r\n                  >\r\n                    Avbryt\r\n                  </Button>\r\n                  <Button \r\n                    onClick={saveChanges}\r\n                    disabled={loading}\r\n                  >\r\n                    {loading ? 'Lagrer...' : 'Lagre endringer'}\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    onClick={() => setIsEditing(true)}\r\n                  >\r\n                    Rediger\r\n                  </Button>\r\n                  <Link href=\"/inspeksjoner\">\r\n                    <Button variant=\"outline\">Tilbake til liste</Button>\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          {/* Main inspection details */}\r\n          <div className=\"md:col-span-2 bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">Detaljer</h2>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <p className=\"text-gray-400\">Kunde</p>\r\n                <p className=\"text-white\">\r\n                  {inspection.abonnementer?.etternavn || inspection.customer_name || 'Ukjent'}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400\">Adresse</p>\r\n                <p className=\"text-white\">{inspection.customer_address}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400\">Dato</p>\r\n                <p className=\"text-white\">\r\n                  {new Date(inspection.inspection_date).toLocaleDateString('nb-NO')}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400\">Type</p>\r\n                <p className=\"text-white capitalize\">{inspection.inspection_type}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400\">Inspektør</p>\r\n                <p className=\"text-white\">{inspection.inspector || 'Ikke angitt'}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-400\">Takstatus</p>\r\n                <p className=\"text-white\">{inspection.roof_condition || 'Ikke angitt'}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              <p className=\"text-gray-400\">Notater</p>\r\n              <p className=\"text-white mt-2 whitespace-pre-line\">\r\n                {inspection.notes || 'Ingen notater'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Images section */}\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">Bilder</h2>\r\n            \r\n            <div className=\"mb-6\">\r\n              <h3 className=\"text-gray-400 mb-2\">Før-bilder</h3>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {inspection.before_images?.map((url, idx) => {\r\n                  const fullUrl = url.startsWith('http') ? url : \r\n                    `https://${process.env.NEXT_PUBLIC_SUPABASE_PROJECT_ID}.supabase.co/storage/v1/object/public/inspeksjonsbilder/${url}`\r\n                  return (\r\n                    <div key={`before-${idx}`} className=\"relative\">\r\n                      <img \r\n                        src={fullUrl}\r\n                        alt={`Før-bilde ${idx + 1}`}\r\n                        className=\"w-full h-32 object-cover rounded\"\r\n                        onError={(e) => {\r\n                          const target = e.target as HTMLImageElement\r\n                          target.src = '/image-placeholder.png'\r\n                        }}\r\n                      />\r\n                      {isEditing && (\r\n                        <button \r\n                          className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center\"\r\n                          onClick={() => handleRemoveImage('before', idx)}\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  )\r\n                })}\r\n                {tempBeforeImageUrls.map((url, idx) => (\r\n                  <img \r\n                    key={`temp-before-${idx}`}\r\n                    src={url}\r\n                    alt={`Midlertidig før-bilde ${idx + 1}`}\r\n                    className=\"w-full h-32 object-cover rounded\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {isEditing && (\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={(e) => handleImageUpload(e, 'before')}\r\n                    className=\"text-sm text-gray-400\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-gray-400 mb-2\">Etter-bilder</h3>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                {inspection.after_images?.map((url, idx) => {\r\n                  const fullUrl = url.startsWith('http') ? url : \r\n                    `https://${process.env.NEXT_PUBLIC_SUPABASE_PROJECT_ID}.supabase.co/storage/v1/object/public/inspeksjonsbilder/${url}`\r\n                  return (\r\n                    <div key={`after-${idx}`} className=\"relative\">\r\n                      <img \r\n                        src={fullUrl}\r\n                        alt={`Etter-bilde ${idx + 1}`}\r\n                        className=\"w-full h-32 object-cover rounded\"\r\n                        onError={(e) => {\r\n                          const target = e.target as HTMLImageElement\r\n                          target.src = '/image-placeholder.png'\r\n                        }}\r\n                      />\r\n                      {isEditing && (\r\n                        <button \r\n                          className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center\"\r\n                          onClick={() => handleRemoveImage('after', idx)}\r\n                        >\r\n                          ×\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  )\r\n                })}\r\n                {tempAfterImageUrls.map((url, idx) => (\r\n                  <img \r\n                    key={`temp-after-${idx}`}\r\n                    src={url}\r\n                    alt={`Midlertidig etter-bilde ${idx + 1}`}\r\n                    className=\"w-full h-32 object-cover rounded\"\r\n                  />\r\n                ))}\r\n              </div>\r\n              {isEditing && (\r\n                <div className=\"mt-2\">\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={(e) => handleImageUpload(e, 'after')}\r\n                    className=\"text-sm text-gray-400\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {!inspection.after_images?.length && !tempAfterImageUrls.length && (\r\n                <p className=\"text-gray-400\">Ingen bilder lagt til</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  async function handleImageUpload(e: React.ChangeEvent<HTMLInputElement>, type: 'before' | 'after') {\r\n    if (e.target.files) {\r\n      const files = Array.from(e.target.files)\r\n      if (type === 'before') {\r\n        setNewBeforeImages(prev => [...prev, ...files])\r\n        setTempBeforeImageUrls(prev => [...prev, ...files.map(file => URL.createObjectURL(file))])\r\n      } else {\r\n        setNewAfterImages(prev => [...prev, ...files])\r\n        setTempAfterImageUrls(prev => [...prev, ...files.map(file => URL.createObjectURL(file))])\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleRemoveImage(type: 'before' | 'after', index: number) {\r\n    if (type === 'before') {\r\n      const updatedImages = [...(inspection?.before_images || [])]\r\n      updatedImages.splice(index, 1)\r\n      setInspection(prev => prev ? {...prev, before_images: updatedImages} : null)\r\n    } else {\r\n      const updatedImages = [...(inspection?.after_images || [])]\r\n      updatedImages.splice(index, 1)\r\n      setInspection(prev => prev ? {...prev, after_images: updatedImages} : null)\r\n    }\r\n  }\r\n\r\n  async function saveChanges() {\r\n    try {\r\n      setLoading(true)\r\n      \r\n      // Ensure bucket exists\r\n      try {\r\n        await supabase.storage.createBucket('inspeksjonsbilder', { public: true })\r\n      } catch (err: unknown) {\r\n        if (err instanceof Error && !err.message.includes('Bucket already exists')) {\r\n          console.error('Error creating bucket:', err)\r\n          throw new Error('Kunne ikke opprette bilde-lager')\r\n        }\r\n      }\r\n\r\n      // Upload new images\r\n      const folder = `inspeksjoner/${inspection?.id}`\r\n      const beforeUrls = [...(inspection?.before_images || [])]\r\n      const afterUrls = [...(inspection?.after_images || [])]\r\n\r\n      for (const file of newBeforeImages) {\r\n        const uniqueName = `${Date.now()}-${file.name}`\r\n        const { error } = await supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .upload(`${folder}/for/${uniqueName}`, file, {\r\n            cacheControl: '3600',\r\n            upsert: false\r\n          })\r\n        \r\n        if (error) {\r\n          console.error('Error uploading before image:', error)\r\n          throw new Error(`Kunne ikke laste opp før-bilde: ${error.message}`)\r\n        }\r\n        \r\n        const { data: { publicUrl } } = supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .getPublicUrl(`${folder}/for/${uniqueName}`)\r\n        beforeUrls.push(publicUrl)\r\n      }\r\n\r\n      for (const file of newAfterImages) {\r\n        const uniqueName = `${Date.now()}-${file.name}`\r\n        const { error } = await supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .upload(`${folder}/etter/${uniqueName}`, file, {\r\n            cacheControl: '3600',\r\n            upsert: false\r\n          })\r\n        \r\n        if (error) {\r\n          console.error('Error uploading after image:', error)\r\n          throw new Error(`Kunne ikke laste opp etter-bilde: ${error.message}`)\r\n        }\r\n        \r\n        const { data: { publicUrl } } = supabase.storage\r\n          .from('inspeksjonsbilder')\r\n          .getPublicUrl(`${folder}/etter/${uniqueName}`)\r\n        afterUrls.push(publicUrl)\r\n      }\r\n\r\n      // Update inspection\r\n      const { data, error } = await supabase\r\n        .from('inspections')\r\n        .update({\r\n          before_images: beforeUrls,\r\n          after_images: afterUrls\r\n        })\r\n        .eq('id', params.id)\r\n        .select()\r\n\r\n      if (error) {\r\n        console.error('Supabase update error:', error)\r\n        throw new Error(`Databasefeil: ${error.message}`)\r\n      }\r\n\r\n      setIsEditing(false)\r\n      setNewBeforeImages([])\r\n      setNewAfterImages([])\r\n      setTempBeforeImageUrls([])\r\n      setTempAfterImageUrls([])\r\n      setInspection(data[0])\r\n    } catch (err) {\r\n      console.error('Error saving changes:', err)\r\n      setError(err instanceof Error ? err.message : 'Kunne ikke lagre endringer')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}