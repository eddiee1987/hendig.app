{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: Record<string, any>) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      let key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      let navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        (window as any).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    return (data || []).map((row: any) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    let navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows, error: lagerError } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch (error) {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/projectService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { Project, ScheduledProject } from '@/types/supabase'\r\n\r\n// Project functions\r\nexport async function getProjects() {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .order('created_at', { ascending: false })\r\n\r\n  if (error) {\r\n    console.error('Error fetching projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getProject(id: string) {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error(`Error fetching project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function createProject(project: Record<string, any>) {\r\n  console.log('Creating project with data:', project)\r\n  \r\n  try {\r\n    // Check if the Supabase client is properly initialized\r\n    console.log('Supabase client:', supabase)\r\n    \r\n    // Check if the table exists by trying to select a single row\r\n    const { data: tableCheck, error: tableError } = await supabase\r\n      .from('projects')\r\n      .select('id')\r\n      .limit(1)\r\n    \r\n    if (tableError) {\r\n      console.error('Error checking projects table:', tableError)\r\n      throw new Error(`Table check failed: ${tableError.message}`)\r\n    }\r\n    \r\n    console.log('Table check result:', tableCheck)\r\n    \r\n    // Proceed with insert\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .insert([project])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error)\r\n      throw new Error(`Insert failed: ${error.message}`)\r\n    }\r\n\r\n    console.log('Project created successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error('Exception in createProject:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateProject(id: string, project: Record<string, any>) {\r\n  console.log('Updating project with id:', id, 'and data:', project)\r\n  \r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .update(project)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error)\r\n      throw error\r\n    }\r\n\r\n    console.log('Project updated successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error(`Exception in updateProject for id ${id}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error deleting project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Scheduled Project functions\r\nexport async function getScheduledProjects() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getScheduledProjectsForDate(date: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .eq('scheduled_date', date)\r\n\r\n  if (error) {\r\n    console.error(`Error fetching scheduled projects for date ${date}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function scheduleProject(projectId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .insert([\r\n      {\r\n        project_id: projectId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\nexport async function unscheduleProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport async function unscheduleProjectByProjectIdAndDate(projectId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('project_id', projectId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/abonnementService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport interface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\nexport interface AbonnementInput {\r\n  fornavn: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: boolean\r\n  fornyelsesdato: string\r\n  sum: number\r\n  notat: string\r\n}\r\n\r\nexport interface ScheduledAbonnement {\r\n  id: string\r\n  abonnement_id: number\r\n  scheduled_date: string\r\n  created_at: string\r\n  updated_at: string\r\n  abonnementer?: Abonnement\r\n}\r\n\r\n// Get all abonnements\r\nexport async function getAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .select('*')\r\n    .order('etternavn', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Get scheduled abonnements\r\nexport async function getScheduledAbonnements() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .select(`\r\n      *,\r\n      abonnementer:abonnement_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled abonnements:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\n// Schedule an abonnement\r\nexport async function scheduleAbonnement(abonnementId: string, scheduledDate: string) {\r\n  try {\r\n    // Validate inputs\r\n    const abonnementIdNum = Number(abonnementId)\r\n    if (isNaN(abonnementIdNum)) {\r\n      throw new Error(`Invalid abonnement ID: ${abonnementId}`)\r\n    }\r\n    \r\n    if (!scheduledDate || !Date.parse(scheduledDate)) {\r\n      throw new Error(`Invalid date format: ${scheduledDate}`)\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('scheduled_abonnements')\r\n      .insert([\r\n        {\r\n          abonnement_id: abonnementIdNum,\r\n          scheduled_date: scheduledDate\r\n        }\r\n      ])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error scheduling abonnement ${abonnementId} for date ${scheduledDate}:`, {\r\n        message: error.message,\r\n        code: error.code,\r\n        details: error.details,\r\n        hint: error.hint\r\n      })\r\n      throw new Error(`Failed to schedule: ${error.message}`)\r\n    }\r\n\r\n    if (!data || data.length === 0) {\r\n      throw new Error('No data returned from scheduling operation')\r\n    }\r\n\r\n    return data[0]\r\n  } catch (error) {\r\n    console.error(`Failed to schedule abonnement ${abonnementId}:`, {\r\n      error: error instanceof Error ? error.message : error,\r\n      stack: error instanceof Error ? error.stack : undefined\r\n    })\r\n    throw new Error(`Failed to schedule abonnement: ${error instanceof Error ? error.message : 'Unknown error'}`)\r\n  }\r\n}\r\n\r\n// Unschedule an abonnement\r\nexport async function unscheduleAbonnement(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Unschedule an abonnement by abonnement ID and date\r\nexport async function unscheduleAbonnementByIdAndDate(abonnementId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_abonnements')\r\n    .delete()\r\n    .eq('abonnement_id', abonnementId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling abonnement ${abonnementId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Create a new abonnement\r\nexport async function createAbonnement(abonnement: AbonnementInput) {\r\n  const { data, error } = await supabase\r\n    .from('abonnementer')\r\n    .insert([\r\n      {\r\n        fornavn: abonnement.fornavn,\r\n        etternavn: abonnement.etternavn,\r\n        adresse: abonnement.adresse,\r\n        kommune: abonnement.kommune,\r\n        var: abonnement.var,\r\n        host: abonnement.host,\r\n        epost: abonnement.epost,\r\n        fakturert: abonnement.fakturert,\r\n        fornyelsesdato: abonnement.fornyelsesdato,\r\n        sum: abonnement.sum,\r\n        notat: abonnement.notat\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error('Error creating abonnement:', error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/ProjectPlanner.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport { ChevronLeftIcon, ChevronRightIcon, CalendarIcon, ListBulletIcon, FunnelIcon, HomeIcon } from '@heroicons/react/24/outline'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { getScheduledProjects, scheduleProject, unscheduleProjectByProjectIdAndDate } from '@/services/projectService'\r\nimport { getScheduledAbonnements, scheduleAbonnement, unscheduleAbonnementByIdAndDate } from '@/services/abonnementService'\r\nimport { toast } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\ninterface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\ninterface ScheduledProject extends Project {\r\n  scheduledDate: string\r\n  scheduledId: string\r\n}\r\n\r\ninterface ScheduledAbonnement extends Abonnement {\r\n  scheduledDate: string\r\n  scheduledId: string\r\n}\r\n\r\ninterface CalendarDay {\r\n  date: Date\r\n  dayOfMonth: number\r\n  isCurrentMonth: boolean\r\n  isToday: boolean\r\n  projects: ScheduledProject[]\r\n  abonnements: ScheduledAbonnement[]\r\n  inspections: Inspection[]\r\n}\r\n\r\n// Convert Supabase project format to our internal format\r\nconst convertProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  client: project.client,\r\n  status: project.status,\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority\r\n})\r\n\r\ninterface Inspection {\r\n  id: string\r\n  customer_name: string\r\n  customer_address: string\r\n  inspection_date: string\r\n  inspection_type: 'vårvedlikehold' | 'høstvedlikehold' | 'rehabilitering'\r\n  status: 'planlagt' | 'utført'\r\n  inspector: string\r\n  notes: string\r\n  roof_condition: string\r\n  before_images?: string[]\r\n  after_images?: string[]\r\n}\r\n\r\nexport default function ProjectPlanner({ projects, abonnements, inspections }: { projects: Project[], abonnements: Abonnement[], inspections: Inspection[] }) {\r\n  const [view, setView] = useState<'month' | 'week' | 'day'>('month')\r\n  const [currentDate, setCurrentDate] = useState(new Date())\r\n  const [calendarDays, setCalendarDays] = useState<CalendarDay[]>([])\r\n  const [scheduledProjects, setScheduledProjects] = useState<ScheduledProject[]>([])\r\n  const [scheduledAbonnements, setScheduledAbonnements] = useState<ScheduledAbonnement[]>([])\r\n  const [filter, setFilter] = useState<'all' | 'active' | 'completed' | 'archived'>('all')\r\n  const [showFilterMenu, setShowFilterMenu] = useState(false)\r\n  const [draggedProject, setDraggedProject] = useState<Project | null>(null)\r\n  const [draggedAbonnement, setDraggedAbonnement] = useState<Abonnement | null>(null)\r\n  const [showProjectInfo, setShowProjectInfo] = useState<string | null>(null)\r\n  const [showAbonnementInfo, setShowAbonnementInfo] = useState<string | null>(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [activeTab, setActiveTab] = useState<'projects' | 'abonnements'>('projects')\r\n  const dragCounter = useRef(0)\r\n  const filterMenuRef = useRef<HTMLDivElement>(null)\r\n\r\n  // Load scheduled projects and abonnements from Supabase\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        \r\n        // Fetch scheduled projects\r\n        const projectsData = await getScheduledProjects()\r\n        const formattedProjectsData = projectsData.map(item => ({\r\n          ...convertProject(item.projects as unknown as SupabaseProject),\r\n          scheduledDate: item.scheduled_date,\r\n          scheduledId: item.id\r\n        }))\r\n        setScheduledProjects(formattedProjectsData)\r\n        \r\n        // Fetch scheduled abonnements\r\n        const abonnementsData = await getScheduledAbonnements()\r\n        if (!abonnementsData) {\r\n          throw new Error('No data returned from getScheduledAbonnements')\r\n        }\r\n        \r\n        const formattedAbonnementsData = abonnementsData.map(item => {\r\n          if (!item.abonnementer) {\r\n            console.warn('Missing abonnementer data for scheduled item:', item)\r\n            return null\r\n          }\r\n          return {\r\n            ...item.abonnementer,\r\n            scheduledDate: item.scheduled_date,\r\n            scheduledId: item.id\r\n          }\r\n        }).filter(Boolean) as ScheduledAbonnement[]\r\n        \r\n        setScheduledAbonnements(formattedAbonnementsData)\r\n      } catch (error) {\r\n        console.error('Error fetching scheduled data:', error)\r\n        toast.error('Kunne ikke hente planlagte data')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    \r\n    fetchData()\r\n  }, [])\r\n\r\n  // Close filter menu when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (filterMenuRef.current && !filterMenuRef.current.contains(event.target as Node) && showFilterMenu) {\r\n        setShowFilterMenu(false)\r\n      }\r\n    }\r\n    \r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [showFilterMenu])\r\n\r\n  // Generate calendar days\r\n  useEffect(() => {\r\n    const days: CalendarDay[] = []\r\n    const today = new Date()\r\n    // Get first day of month\r\n    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1)\r\n    // Get last day of month\r\n    const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\r\n    // Calculate days from previous month to fill first week\r\n    const daysFromPrevMonth = (firstDayOfMonth.getDay() + 6) % 7\r\n    // Add days from previous month\r\n    for (let i = firstDayOfMonth.getDate() - daysFromPrevMonth; i < firstDayOfMonth.getDate(); i++) {\r\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: i,\r\n        isCurrentMonth: false,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date),\r\n        abonnements: getAbonnementsForDate(date),\r\n        inspections: getInspectionsForDate(date)\r\n      })\r\n    }\r\n    // Add days for current month\r\n    for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\r\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: i,\r\n        isCurrentMonth: true,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date),\r\n        abonnements: getAbonnementsForDate(date),\r\n        inspections: getInspectionsForDate(date)\r\n      })\r\n    }\r\n    // Add days from next month to complete the grid (6 rows x 7 days = 42 cells)\r\n    const daysToAdd = 42 - days.length\r\n    for (let i = 1; i <= daysToAdd; i++) {\r\n      const date = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, i)\r\n      days.push({\r\n        date,\r\n        dayOfMonth: i,\r\n        isCurrentMonth: false,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        projects: getProjectsForDate(date),\r\n        abonnements: getAbonnementsForDate(date),\r\n        inspections: getInspectionsForDate(date)\r\n      })\r\n    }\r\n    setCalendarDays(days)\r\n  }, [currentDate, scheduledProjects, scheduledAbonnements, inspections])\r\n\r\n  // Get projects scheduled for a specific date\r\n  function getProjectsForDate(date: Date): ScheduledProject[] {\r\n    const dateString = date.toISOString().split('T')[0]\r\n    return scheduledProjects.filter(project => project.scheduledDate === dateString)\r\n  }\r\n  \r\n  // Get abonnements scheduled for a specific date\r\n  function getAbonnementsForDate(date: Date): ScheduledAbonnement[] {\r\n    const dateString = date.toISOString().split('T')[0]\r\n    return scheduledAbonnements.filter(abonnement => abonnement.scheduledDate === dateString)\r\n  }\r\n\r\n  // Get inspections scheduled for a specific date\r\n  function getInspectionsForDate(date: Date): Inspection[] {\r\n    const dateString = date.toISOString().split('T')[0]\r\n    return inspections.filter(inspection => inspection.inspection_date === dateString)\r\n  }\r\n\r\n  // Navigation functions\r\n  const goToPrev = () => {\r\n    if (view === 'month') {\r\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1))\r\n    } else if (view === 'week') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() - 7)\r\n      setCurrentDate(newDate)\r\n    } else if (view === 'day') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() - 1)\r\n      setCurrentDate(newDate)\r\n    }\r\n  }\r\n\r\n  const goToNext = () => {\r\n    if (view === 'month') {\r\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1))\r\n    } else if (view === 'week') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() + 7)\r\n      setCurrentDate(newDate)\r\n    } else if (view === 'day') {\r\n      const newDate = new Date(currentDate)\r\n      newDate.setDate(newDate.getDate() + 1)\r\n      setCurrentDate(newDate)\r\n    }\r\n  }\r\n\r\n  const goToToday = () => {\r\n    setCurrentDate(new Date())\r\n  }\r\n\r\n  // Format date for display based on view\r\n  const getHeaderText = () => {\r\n    if (view === 'month') {\r\n      return currentDate.toLocaleDateString('nb-NO', { month: 'long', year: 'numeric' })\r\n    } else if (view === 'week') {\r\n      const startOfWeek = new Date(currentDate)\r\n      const dayOfWeek = startOfWeek.getDay()\r\n      const diff = dayOfWeek === 0 ? -6 : 1 - dayOfWeek // Adjust to get Monday\r\n      startOfWeek.setDate(startOfWeek.getDate() + diff)\r\n      \r\n      const endOfWeek = new Date(startOfWeek)\r\n      endOfWeek.setDate(endOfWeek.getDate() + 6)\r\n      \r\n      const startMonth = startOfWeek.getMonth() === endOfWeek.getMonth() \r\n        ? '' \r\n        : startOfWeek.toLocaleDateString('nb-NO', { month: 'long' }) + ' '\r\n      \r\n      return `${startMonth}${startOfWeek.getDate()}. - ${endOfWeek.toLocaleDateString('nb-NO', { day: 'numeric', month: 'long', year: 'numeric' })}`\r\n    } else {\r\n      return currentDate.toLocaleDateString('nb-NO', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' })\r\n    }\r\n  }\r\n\r\n  // Get day name\r\n  const getDayName = (dayIndex: number) => {\r\n    const days = ['Man', 'Tirs', 'Ons', 'Tors', 'Fre', 'Lør', 'Søn']\r\n    return days[dayIndex]\r\n  }\r\n\r\n  // Handle drag start\r\n  const handleDragStart = (project: Project) => {\r\n    setDraggedProject(project)\r\n  }\r\n\r\n  // Handle drag over\r\n  const handleDragOver = (e: React.DragEvent, date: Date) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  // Handle drag enter\r\n  const handleDragEnter = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    dragCounter.current++\r\n  }\r\n\r\n  // Handle drag leave\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    dragCounter.current--\r\n  }\r\n\r\n  // Handle drop\r\n  const handleDrop = async (e: React.DragEvent, date: Date) => {\r\n    e.preventDefault()\r\n    dragCounter.current = 0\r\n    \r\n    const dateString = date.toISOString().split('T')[0]\r\n    \r\n    // Handle project drop\r\n    if (draggedProject) {\r\n      // Check if project is already scheduled for this date\r\n      const alreadyScheduled = scheduledProjects.some(\r\n        p => p.id === draggedProject.id && p.scheduledDate === dateString\r\n      )\r\n      \r\n      if (alreadyScheduled) {\r\n        setDraggedProject(null)\r\n        return\r\n      }\r\n      \r\n      try {\r\n        // Schedule project in Supabase\r\n        const result = await scheduleProject(draggedProject.id, dateString)\r\n        \r\n        if (result) {\r\n          // Add new scheduled project to state\r\n          const newScheduledProject: ScheduledProject = {\r\n            ...draggedProject,\r\n            scheduledDate: dateString,\r\n            scheduledId: result.id\r\n          }\r\n          \r\n          setScheduledProjects([...scheduledProjects, newScheduledProject])\r\n          toast.success('Prosjekt planlagt')\r\n        }\r\n      } catch (error) {\r\n        console.error('Error scheduling project:', error)\r\n        toast.error('Kunne ikke planlegge prosjekt')\r\n      } finally {\r\n        setDraggedProject(null)\r\n      }\r\n    }\r\n    \r\n    // Handle abonnement drop\r\n    if (draggedAbonnement) {\r\n      // Validate abonnement data\r\n      if (!draggedAbonnement.id) {\r\n        toast.error('Ugyldig vedlikeholdsavtale - mangler ID')\r\n        setDraggedAbonnement(null)\r\n        return\r\n      }\r\n\r\n      // Check if abonnement is already scheduled for this date\r\n      const alreadyScheduled = scheduledAbonnements.some(\r\n        a => a.id === draggedAbonnement.id && a.scheduledDate === dateString\r\n      )\r\n      \r\n      if (alreadyScheduled) {\r\n        setDraggedAbonnement(null)\r\n        return\r\n      }\r\n      \r\n      try {\r\n        console.log('Attempting to schedule abonnement:', {\r\n          id: draggedAbonnement.id,\r\n          date: dateString\r\n        })\r\n        \r\n        // Schedule abonnement in Supabase\r\n        const result = await scheduleAbonnement(draggedAbonnement.id, dateString)\r\n        \r\n        if (result) {\r\n          console.log('Successfully scheduled abonnement:', result)\r\n          // Add new scheduled abonnement to state\r\n          const newScheduledAbonnement: ScheduledAbonnement = {\r\n            ...draggedAbonnement,\r\n            scheduledDate: dateString,\r\n            scheduledId: result.id\r\n          }\r\n          \r\n          setScheduledAbonnements([...scheduledAbonnements, newScheduledAbonnement])\r\n          toast.success('Vedlikeholdsavtale planlagt')\r\n        } else {\r\n          console.error('No result returned from scheduleAbonnement')\r\n          toast.error('Ingen data returnert fra server')\r\n        }\r\n      } catch (error) {\r\n        console.error('Detailed error scheduling abonnement:', {\r\n          error: error instanceof Error ? error.message : error,\r\n          stack: error instanceof Error ? error.stack : undefined,\r\n          abonnementId: draggedAbonnement.id,\r\n          date: dateString\r\n        })\r\n        if (error instanceof Error) {\r\n          if (error.message.includes('JWT expired') || error.message.includes('Invalid API key')) {\r\n            toast.error('Autentiseringsfeil - sjekk API-nøkkel')\r\n          } else if (error.message.includes('foreign key constraint')) {\r\n            toast.error('Ugyldig vedlikeholdsavtale-ID')\r\n          } else {\r\n            toast.error(`Feil ved planlegging: ${error.message}`)\r\n          }\r\n        } else {\r\n          toast.error('Ukjent feil ved planlegging')\r\n        }\r\n      } finally {\r\n        setDraggedAbonnement(null)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove project from calendar\r\n  const removeFromCalendar = async (projectId: string, date: string) => {\r\n    try {\r\n      await unscheduleProjectByProjectIdAndDate(projectId, date)\r\n      \r\n      setScheduledProjects(scheduledProjects.filter(\r\n        p => !(p.id === projectId && p.scheduledDate === date)\r\n      ))\r\n      \r\n      toast.success('Prosjekt fjernet fra kalender')\r\n    } catch (error) {\r\n      console.error('Error removing project from calendar:', error)\r\n      toast.error('Kunne ikke fjerne prosjekt fra kalender')\r\n    }\r\n  }\r\n  \r\n  // Remove abonnement from calendar\r\n  const removeAbonnementFromCalendar = async (abonnementId: string, date: string) => {\r\n    try {\r\n      await unscheduleAbonnementByIdAndDate(abonnementId, date)\r\n      \r\n      setScheduledAbonnements(scheduledAbonnements.filter(\r\n        a => !(a.id === abonnementId && a.scheduledDate === date)\r\n      ))\r\n      \r\n      toast.success('Vedlikeholdsavtale fjernet fra kalender')\r\n    } catch (error) {\r\n      console.error('Error removing abonnement from calendar:', error)\r\n      toast.error('Kunne ikke fjerne vedlikeholdsavtale fra kalender')\r\n    }\r\n  }\r\n\r\n  // Filter projects based on status\r\n  const filteredProjects = filter === 'all' \r\n    ? projects \r\n    : projects.filter(project => project.status === filter)\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 rounded-xl border border-gray-800\">\r\n      <div className=\"flex flex-col h-full\">\r\n        {/* Tabs */}\r\n        <div className=\"flex border-b border-gray-800\">\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'month' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('month')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Måned\r\n          </button>\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'week' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('week')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Uke\r\n          </button>\r\n          <button\r\n            className={`px-4 py-3 text-sm font-medium flex items-center ${\r\n              view === 'day' \r\n                ? 'text-white border-b-2 border-blue-500' \r\n                : 'text-gray-400 hover:text-white'\r\n            }`}\r\n            onClick={() => setView('day')}\r\n          >\r\n            <CalendarIcon className=\"w-4 h-4 mr-2\" />\r\n            Dag\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex flex-1\">\r\n          {/* Sidebar with tabs for Projects and Abonnements */}\r\n          <div className=\"w-1/4 border-r border-gray-800 flex flex-col\">\r\n            {/* Sidebar tabs */}\r\n            <div className=\"flex border-b border-gray-700\">\r\n              <button\r\n                className={`flex-1 px-4 py-2 text-sm font-medium ${\r\n                  activeTab === 'projects'\r\n                    ? 'text-white border-b-2 border-blue-500'\r\n                    : 'text-gray-400 hover:text-white'\r\n                }`}\r\n                onClick={() => setActiveTab('projects')}\r\n              >\r\n                Prosjekter\r\n              </button>\r\n              <button\r\n                className={`flex-1 px-4 py-2 text-sm font-medium ${\r\n                  activeTab === 'abonnements'\r\n                    ? 'text-white border-b-2 border-blue-500'\r\n                    : 'text-gray-400 hover:text-white'\r\n                }`}\r\n                onClick={() => setActiveTab('abonnements')}\r\n              >\r\n                Vedlikeholdsavtaler\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Projects list */}\r\n            {activeTab === 'projects' && (\r\n              <div className=\"p-4 flex-1 flex flex-col\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-white\">Prosjekter</h3>\r\n                  <div className=\"relative\">\r\n                    <button\r\n                      onClick={() => setShowFilterMenu(!showFilterMenu)}\r\n                      className=\"flex items-center text-sm text-gray-400 hover:text-white\"\r\n                    >\r\n                      <FunnelIcon className=\"w-4 h-4 mr-1\" />\r\n                      Filter: {filter === 'all' ? 'Alle' : \r\n                              filter === 'active' ? 'Aktive' : \r\n                              filter === 'completed' ? 'Fullførte' : 'Arkiverte'}\r\n                    </button>\r\n                    <div \r\n                      ref={filterMenuRef}\r\n                      className={`absolute right-0 mt-2 w-48 bg-gray-800 rounded-lg shadow-lg z-10 ${showFilterMenu ? 'block' : 'hidden'}`}\r\n                    >\r\n                      <div className=\"py-1\">\r\n                        <button\r\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                          onClick={() => {\r\n                            setFilter('all')\r\n                            setShowFilterMenu(false)\r\n                          }}\r\n                        >\r\n                          Alle\r\n                        </button>\r\n                        <button\r\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                          onClick={() => {\r\n                            setFilter('active')\r\n                            setShowFilterMenu(false)\r\n                          }}\r\n                        >\r\n                          Aktive\r\n                        </button>\r\n                        <button\r\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                          onClick={() => {\r\n                            setFilter('completed')\r\n                            setShowFilterMenu(false)\r\n                          }}\r\n                        >\r\n                          Fullførte\r\n                        </button>\r\n                        <button\r\n                          className=\"block w-full text-left px-4 py-2 text-sm text-gray-400 hover:bg-gray-700 hover:text-white\"\r\n                          onClick={() => {\r\n                            setFilter('archived')\r\n                            setShowFilterMenu(false)\r\n                          }}\r\n                        >\r\n                          Arkiverte\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2 overflow-y-auto flex-1\">\r\n                  {filteredProjects.map(project => (\r\n                    <div\r\n                      key={project.id}\r\n                      className=\"bg-gray-800 rounded-lg p-3 cursor-move hover:bg-gray-750 border border-gray-700\"\r\n                      draggable\r\n                      onDragStart={() => handleDragStart(project)}\r\n                    >\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <h4 className=\"text-sm font-medium text-white\">{project.name}</h4>\r\n                        <span className={`px-1.5 py-0.5 rounded-full text-xs font-medium ${\r\n                          project.priority === 'high'\r\n                            ? 'bg-red-900/50 text-red-400'\r\n                            : project.priority === 'medium'\r\n                            ? 'bg-yellow-900/50 text-yellow-400'\r\n                            : 'bg-green-900/50 text-green-400'\r\n                        }`}>\r\n                          {project.priority}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-400 mt-1 truncate\">{project.client}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Abonnements list */}\r\n            {activeTab === 'abonnements' && (\r\n              <div className=\"p-4 flex-1 flex flex-col\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-white\">Vedlikeholdsavtaler</h3>\r\n                </div>\r\n                <div className=\"space-y-2 overflow-y-auto flex-1\">\r\n                  {abonnements.map(abonnement => (\r\n                    <div\r\n                      key={abonnement.id}\r\n                      className=\"bg-gray-800 rounded-lg p-3 cursor-move hover:bg-gray-750 border border-gray-700\"\r\n                      draggable\r\n                      onDragStart={() => {\r\n                        setDraggedAbonnement(abonnement)\r\n                        setDraggedProject(null)\r\n                      }}\r\n                    >\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <h4 className=\"text-sm font-medium text-white\">{abonnement.etternavn}</h4>\r\n                        <span className=\"px-1.5 py-0.5 rounded-full text-xs font-medium bg-blue-900/50 text-blue-400\">\r\n                          Vedlikehold\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-400 mt-1 truncate\">{abonnement.adresse}</p>\r\n                      <p className=\"text-xs text-gray-400 truncate\">{abonnement.kommune}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Calendar */}\r\n          <div className=\"flex-1 flex flex-col\">\r\n            {/* Calendar header */}\r\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-800\">\r\n              <h2 className=\"text-xl font-semibold text-white\">\r\n                {getHeaderText()}\r\n              </h2>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={goToPrev}\r\n                  className=\"p-1.5 rounded-full text-gray-400 hover:text-white hover:bg-gray-800\"\r\n                >\r\n                  <ChevronLeftIcon className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={goToToday}\r\n                  className=\"px-3 py-1.5 text-sm text-gray-400 hover:text-white\"\r\n                >\r\n                  I dag\r\n                </button>\r\n                <button\r\n                  onClick={goToNext}\r\n                  className=\"p-1.5 rounded-full text-gray-400 hover:text-white hover:bg-gray-800\"\r\n                >\r\n                  <ChevronRightIcon className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Calendar content based on view */}\r\n            <div className=\"flex-1 p-2\">\r\n              {view === 'month' && (\r\n                <>\r\n                  {/* Day headers */}\r\n                  <div className=\"grid grid-cols-7 gap-1 mb-1\">\r\n                    {[0, 1, 2, 3, 4, 5, 6].map(day => (\r\n                      <div key={day} className=\"text-center text-xs font-medium text-gray-400 py-1\">\r\n                        {getDayName(day)}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Calendar days */}\r\n                  <div className=\"grid grid-cols-7 gap-1 flex-1\">\r\n                    {calendarDays.map((day, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className={`min-h-[100px] rounded-lg border ${\r\n                          day.isCurrentMonth\r\n                            ? day.isToday\r\n                              ? 'bg-blue-900/20 border-blue-800'\r\n                              : 'bg-gray-800 border-gray-700'\r\n                            : 'bg-gray-850 border-gray-800'\r\n                        } p-1 relative`}\r\n                        onDragOver={(e) => handleDragOver(e, day.date)}\r\n                        onDragEnter={handleDragEnter}\r\n                        onDragLeave={handleDragLeave}\r\n                        onDrop={(e) => handleDrop(e, day.date)}\r\n                      >\r\n                        <div className=\"flex justify-between items-center mb-1\">\r\n                          <span className={`text-xs font-medium ${\r\n                            day.isCurrentMonth\r\n                              ? day.isToday\r\n                                ? 'text-blue-400'\r\n                                : 'text-white'\r\n                              : 'text-gray-500'\r\n                          }`}>\r\n                            {day.dayOfMonth}\r\n                          </span>\r\n                        </div>\r\n                      <div \r\n                        className=\"space-y-1 overflow-y-auto max-h-[80px] min-h-[60px]\"\r\n                        onDragOver={(e) => {\r\n                          e.preventDefault()\r\n                          e.currentTarget.classList.add('bg-gray-700/50')\r\n                        }}\r\n                        onDragLeave={(e) => {\r\n                          e.currentTarget.classList.remove('bg-gray-700/50')\r\n                        }}\r\n                        onDrop={(e) => {\r\n                          e.preventDefault()\r\n                          e.currentTarget.classList.remove('bg-gray-700/50')\r\n                          handleDrop(e, day.date)\r\n                        }}\r\n                      >\r\n                          {/* Projects */}\r\n                          {day.projects.map(project => (\r\n                            <div\r\n                              key={`project-${project.id}-${day.date.toISOString()}`}\r\n                              className={`text-xs p-1 rounded relative cursor-move transition-all duration-200 hover:shadow-lg ${\r\n                                project.priority === 'high'\r\n                                  ? 'bg-red-900/30 text-red-400 border border-red-800/50 hover:bg-red-900/40'\r\n                                  : project.priority === 'medium'\r\n                                  ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50 hover:bg-yellow-900/40'\r\n                                  : 'bg-green-900/30 text-green-400 border border-green-800/50 hover:bg-green-900/40'\r\n                              }`}\r\n                              onMouseEnter={() => setShowProjectInfo(`${project.id}-${day.date.toISOString()}`)}\r\n                              onMouseLeave={() => setShowProjectInfo(null)}\r\n                            >\r\n                              <div className=\"truncate\">{project.name}</div>\r\n                              \r\n                              {showProjectInfo === `${project.id}-${day.date.toISOString()}` && (\r\n                                <div className=\"absolute z-10 left-0 top-full mt-1 w-48 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-2 text-xs\">\r\n                                  <h5 className=\"font-medium text-white mb-1\">{project.name}</h5>\r\n                                  <p className=\"text-gray-400 mb-1\">{project.client}</p>\r\n                                  <p className=\"text-gray-400 mb-1 line-clamp-2\">{project.description}</p>\r\n                                  <button\r\n                                    onClick={() => removeFromCalendar(project.id, day.date.toISOString().split('T')[0])}\r\n                                    className=\"text-red-400 hover:text-red-300 text-xs mt-1\"\r\n                                  >\r\n                                    Fjern fra kalender\r\n                                  </button>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                          \r\n                          {/* Abonnements */}\r\n                          {day.abonnements.map(abonnement => (\r\n                            <div\r\n                              key={`abonnement-${abonnement.id}-${day.date.toISOString()}`}\r\n                              className=\"text-xs p-1 rounded relative cursor-move transition-all duration-200 hover:shadow-lg bg-blue-900/30 text-blue-400 border border-blue-800/50 hover:bg-blue-900/40\"\r\n                              onMouseEnter={() => setShowAbonnementInfo(`${abonnement.id}-${day.date.toISOString()}`)}\r\n                              onMouseLeave={() => setShowAbonnementInfo(null)}\r\n                            >\r\n                              <div className=\"truncate\">{abonnement.etternavn}</div>\r\n                              \r\n                              {showAbonnementInfo === `${abonnement.id}-${day.date.toISOString()}` && (\r\n                                <div className=\"absolute z-10 left-0 top-full mt-1 w-48 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-2 text-xs\">\r\n                                  <h5 className=\"font-medium text-white mb-1\">{abonnement.etternavn}</h5>\r\n                                  <p className=\"text-gray-400 mb-1\">{abonnement.adresse}</p>\r\n                                  <p className=\"text-gray-400 mb-1\">{abonnement.kommune}</p>\r\n                                  <button\r\n                                    onClick={() => removeAbonnementFromCalendar(abonnement.id, day.date.toISOString().split('T')[0])}\r\n                                    className=\"text-red-400 hover:text-red-300 text-xs mt-1\"\r\n                                  >\r\n                                    Fjern fra kalender\r\n                                  </button>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                          \r\n                          {/* Inspeksjoner */}\r\n                          {day.inspections.map(inspection => (\r\n                            <div\r\n                              key={`inspection-${inspection.id}-${day.date.toISOString()}`}\r\n                              className=\"text-xs p-1 rounded relative bg-yellow-900/30 text-yellow-300 border border-yellow-800/50 mt-1 flex items-center gap-1\"\r\n                              title={inspection.inspection_type}\r\n                            >\r\n                              <span className=\"font-bold\">Inspeksjon:</span> {inspection.customer_name}\r\n                              <span className=\"ml-auto px-1 py-0.5 rounded bg-yellow-800/50 text-yellow-200 text-[10px]\">\r\n                                {inspection.inspection_type}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {view === 'week' && (\r\n                <div className=\"flex flex-col h-full\">\r\n                  {/* Week header */}\r\n                  <div className=\"grid grid-cols-7 gap-1 mb-1\">\r\n                    {Array.from({ length: 7 }).map((_, index) => {\r\n                      const date = new Date(currentDate);\r\n                      const dayOfWeek = date.getDay();\r\n                      const diff = index - (dayOfWeek === 0 ? 6 : dayOfWeek - 1);\r\n                      date.setDate(date.getDate() + diff);\r\n                      \r\n                      return (\r\n                        <div key={index} className=\"text-center py-2\">\r\n                          <div className=\"text-xs font-medium text-gray-400\">{getDayName(index)}</div>\r\n                          <div className={`text-sm font-medium ${\r\n                            date.toDateString() === new Date().toDateString() \r\n                              ? 'text-blue-400' \r\n                              : 'text-white'\r\n                          }`}>\r\n                            {date.getDate()}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  {/* Week view */}\r\n                  <div className=\"grid grid-cols-7 gap-1 flex-1\">\r\n                    {Array.from({ length: 7 }).map((_, index) => {\r\n                      const date = new Date(currentDate);\r\n                      const dayOfWeek = date.getDay();\r\n                      const diff = index - (dayOfWeek === 0 ? 6 : dayOfWeek - 1);\r\n                      date.setDate(date.getDate() + diff);\r\n                      \r\n                      const dateString = date.toISOString().split('T')[0];\r\n                      const dayProjects = scheduledProjects.filter(p => p.scheduledDate === dateString);\r\n                      const dayAbonnements = scheduledAbonnements.filter(a => a.scheduledDate === dateString);\r\n                      \r\n                      return (\r\n                        <div \r\n                          key={index}\r\n                          className={`min-h-[400px] rounded-lg border ${\r\n                            date.toDateString() === new Date().toDateString()\r\n                              ? 'bg-blue-900/20 border-blue-800'\r\n                              : 'bg-gray-800 border-gray-700'\r\n                          } p-2 relative`}\r\n                          onDragOver={(e) => handleDragOver(e, date)}\r\n                          onDragEnter={handleDragEnter}\r\n                          onDragLeave={handleDragLeave}\r\n                          onDrop={(e) => handleDrop(e, date)}\r\n                        >\r\n                          <div className=\"space-y-2 overflow-y-auto max-h-full\">\r\n                            {/* Projects */}\r\n                            {dayProjects.map(project => (\r\n                              <div\r\n                                key={`project-${project.id}-${date.toISOString()}`}\r\n                                className={`p-2 rounded relative ${\r\n                                  project.priority === 'high'\r\n                                    ? 'bg-red-900/30 text-red-400 border border-red-800/50'\r\n                                    : project.priority === 'medium'\r\n                                    ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50'\r\n                                    : 'bg-green-900/30 text-green-400 border border-green-800/50'\r\n                                }`}\r\n                                onMouseEnter={() => setShowProjectInfo(`${project.id}-${date.toISOString()}`)}\r\n                                onMouseLeave={() => setShowProjectInfo(null)}\r\n                              >\r\n                                <div className=\"font-medium\">{project.name}</div>\r\n                                <div className=\"text-xs mt-1\">{project.client}</div>\r\n                                \r\n                                {showProjectInfo === `${project.id}-${date.toISOString()}` && (\r\n                                  <div className=\"absolute z-10 left-0 top-full mt-1 w-64 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-3 text-sm\">\r\n                                    <h5 className=\"font-medium text-white mb-1\">{project.name}</h5>\r\n                                    <p className=\"text-gray-400 mb-1\">{project.client}</p>\r\n                                    <p className=\"text-gray-400 mb-2\">{project.description}</p>\r\n                                    <button\r\n                                      onClick={() => removeFromCalendar(project.id, dateString)}\r\n                                      className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                                    >\r\n                                      Fjern fra kalender\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                            \r\n                            {/* Abonnements */}\r\n                            {dayAbonnements.map(abonnement => (\r\n                              <div\r\n                                key={`abonnement-${abonnement.id}-${date.toISOString()}`}\r\n                                className=\"p-2 rounded relative bg-blue-900/30 text-blue-400 border border-blue-800/50\"\r\n                                onMouseEnter={() => setShowAbonnementInfo(`${abonnement.id}-${date.toISOString()}`)}\r\n                                onMouseLeave={() => setShowAbonnementInfo(null)}\r\n                              >\r\n                                <div className=\"font-medium\">{abonnement.etternavn}</div>\r\n                                <div className=\"text-xs mt-1\">{abonnement.adresse}</div>\r\n                                \r\n                                {showAbonnementInfo === `${abonnement.id}-${date.toISOString()}` && (\r\n                                  <div className=\"absolute z-10 left-0 top-full mt-1 w-64 bg-gray-900 rounded-lg shadow-lg border border-gray-700 p-3 text-sm\">\r\n                                    <h5 className=\"font-medium text-white mb-1\">{abonnement.etternavn}</h5>\r\n                                    <p className=\"text-gray-400 mb-1\">{abonnement.adresse}</p>\r\n                                    <p className=\"text-gray-400 mb-2\">{abonnement.kommune}</p>\r\n                                    <button\r\n                                      onClick={() => removeAbonnementFromCalendar(abonnement.id, dateString)}\r\n                                      className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                                    >\r\n                                      Fjern fra kalender\r\n                                    </button>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {view === 'day' && (\r\n                <div className=\"flex flex-col h-full\">\r\n                  {/* Day view */}\r\n                  <div \r\n                    className=\"flex-1 p-4 bg-gray-800 rounded-lg border border-gray-700 mt-2 overflow-y-auto\"\r\n                    onDragOver={(e) => handleDragOver(e, currentDate)}\r\n                    onDragEnter={handleDragEnter}\r\n                    onDragLeave={handleDragLeave}\r\n                    onDrop={(e) => handleDrop(e, currentDate)}\r\n                  >\r\n                    <div className=\"space-y-3\">\r\n                      {/* Prosjekter */}\r\n                      {scheduledProjects\r\n                        .filter(p => p.scheduledDate === currentDate.toISOString().split('T')[0])\r\n                        .map(project => (\r\n                          <div\r\n                            key={`project-${project.id}`}\r\n                            className={`p-4 rounded-lg relative ${\r\n                              project.priority === 'high'\r\n                                ? 'bg-red-900/30 text-red-400 border border-red-800/50'\r\n                                : project.priority === 'medium'\r\n                                ? 'bg-yellow-900/30 text-yellow-400 border border-yellow-800/50'\r\n                                : 'bg-green-900/30 text-green-400 border border-green-800/50'\r\n                            }`}\r\n                          >\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <h4 className=\"font-medium text-white\">{project.name}</h4>\r\n                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                                project.status === 'active'\r\n                                  ? 'bg-blue-900/50 text-blue-400'\r\n                                  : project.status === 'completed'\r\n                                  ? 'bg-green-900/50 text-green-400'\r\n                                  : 'bg-gray-900/50 text-gray-400'\r\n                              }`}>\r\n                                {project.status}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-400 mt-2\">{project.description}</p>\r\n                            <div className=\"mt-3 flex justify-between items-center\">\r\n                              <div className=\"text-sm text-gray-400\">Klient: <span className=\"text-white\">{project.client}</span></div>\r\n                              <button\r\n                                onClick={() => removeFromCalendar(project.id, currentDate.toISOString().split('T')[0])}\r\n                                className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                              >\r\n                                Fjern fra kalender\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      {/* Abonnements */}\r\n                      {scheduledAbonnements\r\n                        .filter(a => a.scheduledDate === currentDate.toISOString().split('T')[0])\r\n                        .map(abonnement => (\r\n                          <div\r\n                            key={`abonnement-${abonnement.id}`}\r\n                            className=\"p-4 rounded-lg relative bg-blue-900/30 text-blue-400 border border-blue-800/50\"\r\n                          >\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <h4 className=\"font-medium text-white\">{abonnement.etternavn}</h4>\r\n                              <span className=\"px-2 py-1 rounded-full text-xs font-medium bg-blue-900/50 text-blue-400\">\r\n                                Vedlikehold\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-400 mt-2\">{abonnement.adresse}</p>\r\n                            <p className=\"text-sm text-gray-400\">{abonnement.kommune}</p>\r\n                            <div className=\"mt-3 flex justify-between items-center\">\r\n                              <div className=\"text-sm text-gray-400\">Fornyelse: <span className=\"text-white\">{abonnement.fornyelsesdato}</span></div>\r\n                              <button\r\n                                onClick={() => removeAbonnementFromCalendar(abonnement.id, currentDate.toISOString().split('T')[0])}\r\n                                className=\"text-red-400 hover:text-red-300 text-xs\"\r\n                              >\r\n                                Fjern fra kalender\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      {/* Inspeksjoner */}\r\n                      {inspections\r\n                        .filter(i => i.inspection_date === currentDate.toISOString().split('T')[0])\r\n                        .map(inspection => (\r\n                          <div\r\n                            key={`inspection-${inspection.id}`}\r\n                            className=\"p-4 rounded-lg relative bg-yellow-900/30 text-yellow-300 border border-yellow-800/50\"\r\n                          >\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <h4 className=\"font-medium text-white\">Inspeksjon: {inspection.customer_name}</h4>\r\n                              <span className=\"px-2 py-1 rounded-full text-xs font-medium bg-yellow-800/50 text-yellow-200\">\r\n                                {inspection.inspection_type}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-400 mt-2\">Adresse: {inspection.customer_address}</p>\r\n                            <p className=\"text-sm text-gray-400\">Inspektør: {inspection.inspector || '-'}</p>\r\n                            <div className=\"mt-3 flex justify-between items-center\">\r\n                              <div className=\"text-sm text-gray-400\">Status: <span className=\"text-white\">{inspection.status}</span></div>\r\n                              {/* Her kan det legges til knapp for detaljer/redigering */}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      {scheduledProjects.filter(p => p.scheduledDate === currentDate.toISOString().split('T')[0]).length === 0 && \r\n                       scheduledAbonnements.filter(a => a.scheduledDate === currentDate.toISOString().split('T')[0]).length === 0 &&\r\n                       inspections.filter(i => i.inspection_date === currentDate.toISOString().split('T')[0]).length === 0 && (\r\n                        <div className=\"text-center py-8 text-gray-500\">\r\n                          <p>Ingen aktiviteter planlagt for denne dagen</p>\r\n                          <p className=\"text-sm mt-2\">Dra et prosjekt eller en vedlikeholdsavtale hit for å planlegge det</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/inspectionService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport async function getPlannedInspections() {\r\n  const { data, error } = await supabase\r\n    .from('inspections')\r\n    .select('*')\r\n    .eq('status', 'planlagt')\r\n    .order('inspection_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching planned inspections:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAU,YACb,KAAK,CAAC,mBAAmB;QAAE,WAAW;IAAK;IAE9C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM;IACR;IAEA,OAAO,QAAQ,EAAE;AACnB","debugId":null}},
    {"offset": {"line": 2150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/planlegging/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport ProjectPlanner from '@/components/ProjectPlanner'\r\nimport { getProjects } from '@/services/projectService'\r\nimport { getAbonnements } from '@/services/abonnementService'\r\nimport { getPlannedInspections } from '@/services/inspectionService'\r\nimport { Project as SupabaseProject } from '@/types/supabase'\r\nimport { toast, Toaster } from 'react-hot-toast'\r\n\r\ninterface Project {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  client: string\r\n  status: 'active' | 'completed' | 'archived'\r\n  startDate: string\r\n  endDate?: string\r\n  budget?: number\r\n  priority: 'low' | 'medium' | 'high'\r\n}\r\n\r\ninterface Abonnement {\r\n  id: string\r\n  etternavn: string\r\n  adresse: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fornyelsesdato: string\r\n  tak_storrelse?: string\r\n}\r\n\r\n// Convert Supabase project format to our internal format\r\nconst fromSupabaseProject = (project: SupabaseProject): Project => ({\r\n  id: project.id,\r\n  name: project.name,\r\n  description: project.description,\r\n  client: project.client,\r\n  status: project.status as 'active' | 'completed' | 'archived',\r\n  startDate: project.start_date,\r\n  endDate: project.end_date,\r\n  budget: project.budget ? Number(project.budget) : undefined,\r\n  priority: project.priority as 'low' | 'medium' | 'high'\r\n})\r\n\r\nexport default function PlanleggingPage() {\r\n  const [projects, setProjects] = useState<Project[]>([])\r\n  const [abonnements, setAbonnements] = useState<Abonnement[]>([])\r\n  const [inspections, setInspections] = useState<any[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // Load projects, abonnements, and inspections from Supabase\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n        // Fetch projects\r\n        const projectsData = await getProjects()\r\n        setProjects(projectsData.map(fromSupabaseProject))\r\n        // Fetch abonnements\r\n        const abonnementsData = await getAbonnements()\r\n        setAbonnements(abonnementsData)\r\n        // Fetch planned inspections\r\n        const inspectionsData = await getPlannedInspections()\r\n        setInspections(inspectionsData)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        toast.error('Kunne ikke hente data')\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div>\r\n            <h1 className=\"text-4xl font-bold text-white\">Planlegging</h1>\r\n            <p className=\"text-gray-400 mt-2\">Planlegg og organiser prosjekter og vedlikeholdsavtaler i kalenderen</p>\r\n          </div>\r\n          <button\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full flex items-center gap-2 shadow-sm transition-all duration-200\"\r\n            onClick={() => window.location.href = '/inspeksjoner/ny'}\r\n          >\r\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n            </svg>\r\n            <span>Planlegg ny inspeksjon</span>\r\n          </button>\r\n        </div>\r\n        {/* Toast notifications */}\r\n        <Toaster\r\n          position=\"top-right\"\r\n          toastOptions={{\r\n            duration: 3000,\r\n            style: {\r\n              background: '#333',\r\n              color: '#fff',\r\n            },\r\n          }}\r\n        />\r\n        {/* Project Planner Component */}\r\n        <div className=\"h-[calc(100vh-200px)]\">\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n            </div>\r\n          ) : (\r\n            <ProjectPlanner projects={projects} abonnements={abonnements} inspections={inspections} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;;;;;;;;AAkCA,yDAAyD;AACzD,MAAM,sBAAsB,CAAC,UAAsC,CAAC;QAClE,IAAI,QAAQ,EAAE;QACd,MAAM,QAAQ,IAAI;QAClB,aAAa,QAAQ,WAAW;QAChC,QAAQ,QAAQ,MAAM;QACtB,QAAQ,QAAQ,MAAM;QACtB,WAAW,QAAQ,UAAU;QAC7B,SAAS,QAAQ,QAAQ;QACzB,QAAQ,QAAQ,MAAM,GAAG,OAAO,QAAQ,MAAM,IAAI;QAClD,UAAU,QAAQ,QAAQ;IAC5B,CAAC;AAEc,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IACxD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,4DAA4D;IAC5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,aAAa;gBACb,iBAAiB;gBACjB,MAAM,eAAe,MAAM,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD;gBACrC,YAAY,aAAa,GAAG,CAAC;gBAC7B,oBAAoB;gBACpB,MAAM,kBAAkB,MAAM,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD;gBAC3C,eAAe;gBACf,4BAA4B;gBAC5B,MAAM,kBAAkB,MAAM,CAAA,GAAA,oIAAA,CAAA,wBAAqB,AAAD;gBAClD,eAAe;YACjB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;gBACtC,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACd,SAAU;gBACR,aAAa;YACf;QACF;QACA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAG,WAAU;8CAAgC;;;;;;8CAC9C,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;sCAEpC,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;;8CAEtC,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;8CAEvE,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;8BAIV,8OAAC,uJAAA,CAAA,UAAO;oBACN,UAAS;oBACT,cAAc;wBACZ,UAAU;wBACV,OAAO;4BACL,YAAY;4BACZ,OAAO;wBACT;oBACF;;;;;;8BAGF,8OAAC;oBAAI,WAAU;8BACZ,0BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;6CAGjB,8OAAC,oIAAA,CAAA,UAAc;wBAAC,UAAU;wBAAU,aAAa;wBAAa,aAAa;;;;;;;;;;;;;;;;;;;;;;AAMvF","debugId":null}}]
}