{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/kunder/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport * as XLSX from 'xlsx'\r\n\r\ninterface Customer {\r\n  m: string\r\n  etternavn: string\r\n  adresse: string\r\n  sted: string\r\n  kommune: string\r\n  vår: string\r\n  høst: string\r\n  epost: string\r\n  fakturert: string\r\n  mailVår: string\r\n  mailHøst: string\r\n  tidsbrukSlått: string\r\n  fornyelsesdato: string\r\n  sum: string\r\n  notat: string\r\n}\r\n\r\nexport default function KunderPage() {\r\n  const [customers, setCustomers] = useState<Customer[]>([])\r\n  const [showImportModal, setShowImportModal] = useState(false)\r\n\r\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (!file) return\r\n\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      const data = e.target?.result\r\n      const workbook = XLSX.read(data, { type: 'binary' })\r\n      const sheetName = workbook.SheetNames[0]\r\n      const worksheet = workbook.Sheets[sheetName]\r\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: [\r\n        'm', 'etternavn', 'adresse', 'sted', 'kommune', 'vår', 'høst', \r\n        'epost', 'fakturert', 'mailVår', 'mailHøst', 'tidsbrukSlått', \r\n        'fornyelsesdato', 'sum', 'notat'\r\n      ]})\r\n      \r\n      setCustomers(jsonData as Customer[])\r\n      setShowImportModal(false)\r\n    }\r\n    reader.readAsBinaryString(file)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">Kundehåndtering</h1>\r\n        <button \r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md transition-colors\"\r\n          onClick={() => setShowImportModal(true)}\r\n        >\r\n          Importer kunder\r\n        </button>\r\n      </div>\r\n      \r\n      {showImportModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-md w-full\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Importer kunder fra Excel</h2>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx,.xls\"\r\n              onChange={handleFileUpload}\r\n              className=\"block w-full text-sm text-gray-500\r\n                file:mr-4 file:py-2 file:px-4\r\n                file:rounded-full file:border-0\r\n                file:text-sm file:font-semibold\r\n                file:bg-blue-50 file:text-blue-700\r\n                hover:file:bg-blue-100\"\r\n            />\r\n            <button \r\n              className=\"mt-4 bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-lg shadow-md transition-colors\"\r\n              onClick={() => setShowImportModal(false)}\r\n            >\r\n              Lukk\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Etternavn</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Adresse</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Sted</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Kommune</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Vår</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Høst</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">E-post</th>\r\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Fornyelsesdato</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {customers.map((customer, index) => (\r\n                <tr key={index} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.etternavn}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.adresse}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.sted}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.kommune}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.vår}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.høst}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.epost}</td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap\">{customer.fornyelsesdato}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}