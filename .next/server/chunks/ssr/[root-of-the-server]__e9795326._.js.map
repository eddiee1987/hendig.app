{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || ''\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || ''\r\n\r\nconsole.log('Supabase URL:', supabaseUrl)\r\nconsole.log('Supabase Anon Key:', supabaseAnonKey ? 'Set' : 'Not set')\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  console.error('Supabase credentials are not set correctly in environment variables')\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\nexport async function fetchTimeEntriesByEmployeeId(employeeId: string) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .select('*')\r\n      .eq('employee_id', employeeId)\r\n      .order('date', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching time entries:', error);\r\n      return [];\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching time entries:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\ninterface TimeEntryUpdateFields {\r\n  date?: string;\r\n  hours?: number;\r\n  project_id?: string;\r\n  description?: string;\r\n  approved?: boolean;\r\n}\r\n\r\nexport async function updateTimeEntry(entryId: string, updatedFields: TimeEntryUpdateFields) {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('time_entries')\r\n      .update(updatedFields)\r\n      .eq('id', entryId);\r\n\r\n    if (error) {\r\n      console.error('Error updating time entry:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Unexpected error updating time entry:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Lager-funksjoner\r\n\r\n// Hent lagerdata og returner som et objekt { impregnert_staur: antall, ... }\r\nexport async function fetchLager(): Promise<Record<string, number>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager')\r\n      .select('navn, antall')\r\n\r\n    if (error) {\r\n      console.error('Error fetching lager:', error)\r\n      return {}\r\n    }\r\n    // Map til { key: antall }\r\n    const lagerObj: Record<string, number> = {}\r\n    data?.forEach((row: { navn: string; antall: number }) => {\r\n      const key = row.navn.toLowerCase().replaceAll(' ', '_').replaceAll('å', 'a').replaceAll('æ', 'ae').replaceAll('ø', 'o')\r\n      lagerObj[key] = row.antall\r\n    })\r\n    return lagerObj\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager:', error)\r\n    return {}\r\n  }\r\n}\r\n\r\n// Oppdater lagerdata basert på form-objektet { impregnert_staur: antall, ... }\r\nexport async function updateLager(form: Record<string, number>) {\r\n  try {\r\n    // Hent eksisterende rader\r\n    const { data: existing, error: fetchError } = await supabase\r\n      .from('lager')\r\n      .select('id, navn')\r\n    if (fetchError) {\r\n      console.error('Error fetching lager for update:', fetchError)\r\n      return\r\n    }\r\n    // Oppdater eller opprett for hver vare\r\n    for (const [key, antall] of Object.entries(form)) {\r\n      // Finn navn fra key\r\n      const navn = key\r\n        .replaceAll('_', ' ')\r\n        .replaceAll('ae', 'æ')\r\n        .replaceAll('o', 'ø')\r\n        .replaceAll('a', 'å')\r\n      // Søk etter eksisterende rad\r\n      const existingRow = existing?.find((row: { navn: string }) => row.navn.toLowerCase().replaceAll(' ', '_') === key)\r\n      if (existingRow) {\r\n        // Oppdater\r\n        await supabase.from('lager').update({ antall: Number(antall) }).eq('id', existingRow.id)\r\n      } else {\r\n        // Sett inn ny\r\n        await supabase.from('lager').insert([{ navn, antall: Number(antall) }])\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Unexpected error updating lager:', error)\r\n  }\r\n}\r\n\r\n// Hent lagerhistorikk (transaksjoner) med varenavn\r\nexport async function fetchLagerHistorikk(): Promise<Array<{\r\n  created_at: string;\r\n  navn: string;\r\n  type: string;\r\n  antall: number;\r\n  kommentar: string;\r\n}>> {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lager_transactions')\r\n      .select('created_at, type, antall, kommentar, lager_id, lager:lager_id(navn)')\r\n      .order('created_at', { ascending: false })\r\n      .limit(100)\r\n    if (error) {\r\n      console.error('Error fetching lager historikk:', error)\r\n      // Log the full error object for debugging\r\n      if (typeof window !== 'undefined') {\r\n        interface WindowWithError extends Window {\r\n          __supabaseLagerHistorikkError?: unknown;\r\n        }\r\n        (window as WindowWithError).__supabaseLagerHistorikkError = error;\r\n      }\r\n      return []\r\n    }\r\n    // Map til flat struktur med varenavn\r\n    interface LagerTransaction {\r\n      created_at: string\r\n      lager?: Array<{ navn: string }>\r\n      type: string\r\n      antall: number\r\n      kommentar: string | null\r\n    }\r\n\r\n    return (data || []).map((row: LagerTransaction) => ({\r\n      created_at: row.created_at,\r\n      navn: row.lager?.[0]?.navn || '',\r\n      type: row.type,\r\n      antall: row.antall,\r\n      kommentar: row.kommentar || ''\r\n    }))\r\n  } catch (error) {\r\n    console.error('Unexpected error fetching lager historikk:', error)\r\n    return []\r\n  }\r\n}\r\n\r\n// Registrer en lagertransaksjon (inntak/uttak/manuell) og oppdater lagerbeholdning\r\nexport async function registerLagerTransaksjon({ key, type, antall, kommentar }: { key: string, type: 'inntak' | 'uttak' | 'manuell', antall: number, kommentar: string }) {\r\n  try {\r\n    // Finn varenavn fra key\r\n    const navn = key.replaceAll('_', ' ').replaceAll('ae', 'æ').replaceAll('o', 'ø').replaceAll('a', 'å')\r\n    // Hent rad for varen\r\n    let lagerId: number | null = null;\r\n    let nyttAntall: number = 0;\r\n    const { data: lagerRows } = await supabase\r\n      .from('lager')\r\n      .select('id, antall')\r\n      .eq('navn', navn)\r\n      .limit(1)\r\n    if (!lagerRows || lagerRows.length === 0) {\r\n      if (type === 'manuell') {\r\n        // Opprett ny vare hvis manuell\r\n        const { data: insertData, error: insertError } = await supabase\r\n          .from('lager')\r\n          .insert([{ navn, antall: Number(antall) }])\r\n          .select('id')\r\n          .single();\r\n        if (insertError || !insertData) {\r\n          return { error: 'Kunne ikke opprette ny vare' }\r\n        }\r\n        lagerId = insertData.id;\r\n        nyttAntall = Number(antall);\r\n      } else {\r\n        return { error: 'Fant ikke varen i lageret' }\r\n      }\r\n    } else {\r\n      lagerId = lagerRows[0].id;\r\n      nyttAntall = lagerRows[0].antall;\r\n      if (type === 'inntak') {\r\n        nyttAntall += antall;\r\n      } else if (type === 'uttak') {\r\n        if (lagerRows[0].antall < antall) {\r\n          return { error: 'Ikke nok på lager for uttak' }\r\n        }\r\n        nyttAntall -= antall;\r\n      } else if (type === 'manuell') {\r\n        nyttAntall = antall;\r\n      }\r\n      // Oppdater lagerbeholdning for alle typer\r\n      const { error: updateError } = await supabase\r\n        .from('lager')\r\n        .update({ antall: nyttAntall })\r\n        .eq('id', lagerId)\r\n      if (updateError) {\r\n        return { error: 'Kunne ikke oppdatere lagerbeholdning' }\r\n      }\r\n    }\r\n    // Registrer transaksjon ALLTID\r\n    const { error: transError } = await supabase\r\n      .from('lager_transactions')\r\n      .insert({ lager_id: lagerId, type, antall, kommentar })\r\n    if (transError) {\r\n      return { error: 'Kunne ikke registrere transaksjon' }\r\n    }\r\n    return { success: true }\r\n  } catch {\r\n    return { error: 'Uventet feil ved registrering' }\r\n  }\r\n}\r\n\r\n// Oppdater vedlikeholdsoppgave\r\nexport async function updateMaintenanceTask(taskId: string, startDate: Date, endDate: Date) {\r\n  const { error } = await supabase\r\n    .from('maintenance_tasks')\r\n    .update({ start_date: startDate.toISOString(), end_date: endDate.toISOString() })\r\n    .eq('id', taskId);\r\n\r\n  if (error) {\r\n    throw new Error(`Failed to update maintenance task: ${error.message}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/weatherService.ts"],"sourcesContent":["interface WeatherData {\r\n  date: string\r\n  temp: number\r\n  description: string\r\n  icon: string\r\n}\r\n\r\ninterface OpenWeatherForecast {\r\n  dt_txt: string\r\n  main: {\r\n    temp: number\r\n  }\r\n  weather: Array<{\r\n    description: string\r\n    icon: string\r\n  }>\r\n}\r\n\r\nexport async function getWeatherForecast(location: string): Promise<WeatherData[]> {\r\n  const apiKey = process.env.NEXT_PUBLIC_OPENWEATHER_API_KEY\r\n  if (!apiKey) {\r\n    throw new Error('OpenWeather API key not configured')\r\n  }\r\n\r\n  const response = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=metric&appid=${apiKey}`\r\n  )\r\n  const data = await response.json() as { list: OpenWeatherForecast[]; message?: string }\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Failed to fetch weather data')\r\n  }\r\n\r\n  // Group by day and take first forecast of each day\r\n  const dailyForecasts = data.list.reduce((acc: OpenWeatherForecast[], forecast: OpenWeatherForecast) => {\r\n    const date = forecast.dt_txt.split(' ')[0]\r\n    if (!acc.find(f => f.dt_txt.includes(date))) {\r\n      acc.push(forecast)\r\n    }\r\n    return acc\r\n  }, [] as OpenWeatherForecast[])\r\n\r\n  return dailyForecasts.map((forecast: OpenWeatherForecast) => ({\r\n    date: forecast.dt_txt,\r\n    temp: forecast.main.temp,\r\n    description: forecast.weather[0].description,\r\n    icon: forecast.weather[0].icon\r\n  }))\r\n}\r\n"],"names":[],"mappings":";;;AAkBO,eAAe,mBAAmB,QAAgB;IACvD,MAAM;IACN,uCAAa;;IAEb;IAEA,MAAM,WAAW,MAAM,MACrB,CAAC,mDAAmD,EAAE,SAAS,oBAAoB,EAAE,QAAQ;IAE/F,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;IAClC;IAEA,mDAAmD;IACnD,MAAM,iBAAiB,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,KAA4B;QACnE,MAAM,OAAO,SAAS,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC1C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAA,IAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ;YAC3C,IAAI,IAAI,CAAC;QACX;QACA,OAAO;IACT,GAAG,EAAE;IAEL,OAAO,eAAe,GAAG,CAAC,CAAC,WAAkC,CAAC;YAC5D,MAAM,SAAS,MAAM;YACrB,MAAM,SAAS,IAAI,CAAC,IAAI;YACxB,aAAa,SAAS,OAAO,CAAC,EAAE,CAAC,WAAW;YAC5C,MAAM,SAAS,OAAO,CAAC,EAAE,CAAC,IAAI;QAChC,CAAC;AACH","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/WeatherWidget.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { getWeatherForecast } from '@/services/weatherService'\r\n\r\nexport default function WeatherWidget() {\r\n  const [forecast, setForecast] = useState<any[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        const data = await getWeatherForecast('Nesbyen,NO')\r\n        setForecast(data.slice(0, 7)) // Next 7 days\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : 'Failed to load weather')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchWeather()\r\n  }, [])\r\n\r\n  if (loading) return <div>Loading weather...</div>\r\n  if (error) return <div className=\"text-red-500\">{error}</div>\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg shadow p-4 border border-gray-700\">\r\n      <h2 className=\"text-lg font-semibold mb-2 text-white\">Værvarsel for Nesbyen</h2>\r\n      <div className=\"grid grid-cols-7 gap-4 xl:gap-6\">\r\n        {forecast.map((day) => (\r\n          <div key={day.date} className=\"text-center\">\r\n            <div className=\"text-sm text-gray-300\">\r\n              {new Date(day.date).toLocaleDateString('no-NO', { weekday: 'short' })}\r\n            </div>\r\n            <img \r\n              src={`https://openweathermap.org/img/wn/${day.icon}.png`} \r\n              alt={day.description}\r\n              className=\"mx-auto\"\r\n            />\r\n            <div className=\"font-medium text-white\">{Math.round(day.temp)}°C</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,qBAAkB,AAAD,EAAE;gBACtC,YAAY,KAAK,KAAK,CAAC,GAAG,IAAI,cAAc;;YAC9C,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,8OAAC;kBAAI;;;;;;IACzB,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;IAEjD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;0BACtD,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,oBACb,8OAAC;wBAAmB,WAAU;;0CAC5B,8OAAC;gCAAI,WAAU;0CACZ,IAAI,KAAK,IAAI,IAAI,EAAE,kBAAkB,CAAC,SAAS;oCAAE,SAAS;gCAAQ;;;;;;0CAErE,8OAAC;gCACC,KAAK,CAAC,kCAAkC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC;gCACxD,KAAK,IAAI,WAAW;gCACpB,WAAU;;;;;;0CAEZ,8OAAC;gCAAI,WAAU;;oCAA0B,KAAK,KAAK,CAAC,IAAI,IAAI;oCAAE;;;;;;;;uBATtD,IAAI,IAAI;;;;;;;;;;;;;;;;AAe5B","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/services/projectService.ts"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { Project } from '@/types/supabase'\r\n\r\n// Project functions\r\nexport async function getProjects() {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .order('created_at', { ascending: false })\r\n\r\n  if (error) {\r\n    console.error('Error fetching projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getProject(id: string) {\r\n  const { data, error } = await supabase\r\n    .from('projects')\r\n    .select('*')\r\n    .eq('id', id)\r\n    .single()\r\n\r\n  if (error) {\r\n    console.error(`Error fetching project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nexport async function createProject(project: Project) {\r\n  console.log('Creating project with data:', project)\r\n  \r\n  try {\r\n    // Check if the Supabase client is properly initialized\r\n    console.log('Supabase client:', supabase)\r\n    \r\n    // Check if the table exists by trying to select a single row\r\n    const { data: tableCheck, error: tableError } = await supabase\r\n      .from('projects')\r\n      .select('id')\r\n      .limit(1)\r\n    \r\n    if (tableError) {\r\n      console.error('Error checking projects table:', tableError)\r\n      throw new Error(`Table check failed: ${tableError.message}`)\r\n    }\r\n    \r\n    console.log('Table check result:', tableCheck)\r\n    \r\n    // Proceed with insert\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .insert([project])\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error('Error creating project:', error)\r\n      throw new Error(`Insert failed: ${error.message}`)\r\n    }\r\n\r\n    console.log('Project created successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error('Exception in createProject:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function updateProject(id: string, project: Partial<Project>) {\r\n  console.log('Updating project with id:', id, 'and data:', project)\r\n  \r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('projects')\r\n      .update(project)\r\n      .eq('id', id)\r\n      .select()\r\n\r\n    if (error) {\r\n      console.error(`Error updating project with id ${id}:`, error)\r\n      throw error\r\n    }\r\n\r\n    console.log('Project updated successfully:', data)\r\n    return data?.[0]\r\n  } catch (error) {\r\n    console.error(`Exception in updateProject for id ${id}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport async function deleteProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error deleting project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// Scheduled Project functions\r\nexport async function getScheduledProjects() {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .order('scheduled_date', { ascending: true })\r\n\r\n  if (error) {\r\n    console.error('Error fetching scheduled projects:', error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function getScheduledProjectsForDate(date: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .select(`\r\n      *,\r\n      projects:project_id (*)\r\n    `)\r\n    .eq('scheduled_date', date)\r\n\r\n  if (error) {\r\n    console.error(`Error fetching scheduled projects for date ${date}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data || []\r\n}\r\n\r\nexport async function scheduleProject(projectId: string, scheduledDate: string) {\r\n  const { data, error } = await supabase\r\n    .from('scheduled_projects')\r\n    .insert([\r\n      {\r\n        project_id: projectId,\r\n        scheduled_date: scheduledDate\r\n      }\r\n    ])\r\n    .select()\r\n\r\n  if (error) {\r\n    console.error(`Error scheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return data?.[0]\r\n}\r\n\r\nexport async function unscheduleProject(id: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('id', id)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project with id ${id}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport async function unscheduleProjectByProjectIdAndDate(projectId: string, scheduledDate: string) {\r\n  const { error } = await supabase\r\n    .from('scheduled_projects')\r\n    .delete()\r\n    .eq('project_id', projectId)\r\n    .eq('scheduled_date', scheduledDate)\r\n\r\n  if (error) {\r\n    console.error(`Error unscheduling project ${projectId} for date ${scheduledDate}:`, error)\r\n    throw error\r\n  }\r\n\r\n  return true\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/components/MaintenanceWidget.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { getScheduledProjects } from '@/services/projectService'\r\nimport { format, isSameWeek, parseISO } from 'date-fns'\r\n\r\nexport default function MaintenanceWidget() {\r\n  const [scheduledProjects, setScheduledProjects] = useState<Awaited<ReturnType<typeof getScheduledProjects>>>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchMaintenance = async () => {\r\n      try {\r\n        const data = await getScheduledProjects()\r\n        // Filter for current week\r\n        const currentWeekProjects = data.filter(project => \r\n          isSameWeek(parseISO(project.scheduled_date), new Date())\r\n        )\r\n        setScheduledProjects(currentWeekProjects)\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : 'Failed to load maintenance schedule')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchMaintenance()\r\n  }, [])\r\n\r\n  if (loading) return <div>Loading maintenance schedule...</div>\r\n  if (error) return <div className=\"text-red-500\">{error}</div>\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg shadow p-4 border border-gray-700 mt-4\">\r\n      <h2 className=\"text-lg font-semibold mb-2 text-white\">Planlagt vedlikehold denne uken</h2>\r\n      {scheduledProjects.length === 0 ? (\r\n        <div className=\"text-gray-300\">Du har ingen planlagte jobber denne uken</div>\r\n      ) : (\r\n        <div className=\"space-y-2\">\r\n          {scheduledProjects.map((project) => (\r\n            <div key={project.id} className=\"flex justify-between items-center\">\r\n              <div className=\"text-white\">\r\n                {project.projects?.name || 'Ukjent prosjekt'}\r\n              </div>\r\n              <div className=\"text-gray-300 text-sm\">\r\n                {format(parseISO(project.scheduled_date), 'EEEE dd.MM')}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoD,EAAE;IAC/G,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,mBAAmB;YACvB,IAAI;gBACF,MAAM,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,uBAAoB,AAAD;gBACtC,0BAA0B;gBAC1B,MAAM,sBAAsB,KAAK,MAAM,CAAC,CAAA,UACtC,CAAA,GAAA,yIAAA,CAAA,aAAU,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,cAAc,GAAG,IAAI;gBAEnD,qBAAqB;YACvB,EAAE,OAAO,KAAK;gBACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,8OAAC;kBAAI;;;;;;IACzB,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;kBAAgB;;;;;;IAEjD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAwC;;;;;;YACrD,kBAAkB,MAAM,KAAK,kBAC5B,8OAAC;gBAAI,WAAU;0BAAgB;;;;;qCAE/B,8OAAC;gBAAI,WAAU;0BACZ,kBAAkB,GAAG,CAAC,CAAC,wBACtB,8OAAC;wBAAqB,WAAU;;0CAC9B,8OAAC;gCAAI,WAAU;0CACZ,QAAQ,QAAQ,EAAE,QAAQ;;;;;;0CAE7B,8OAAC;gCAAI,WAAU;0CACZ,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,cAAc,GAAG;;;;;;;uBALpC,QAAQ,EAAE;;;;;;;;;;;;;;;;AAahC","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/Kopi%20av%20driftig%2010.04.25/.ssh/driftig/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport Link from 'next/link'\r\nimport { supabase } from '@/lib/supabase'\r\nimport WeatherWidget from '@/components/WeatherWidget'\r\nimport MaintenanceWidget from '@/components/MaintenanceWidget'\r\n\r\ninterface Customer {\r\n  id?: string\r\n  etternavn: string\r\n  adresse: string\r\n  sted: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: string\r\n  mail_var: string\r\n  mail_host: string\r\n  tidsbruk_slatt: string\r\n  fornyelsesdato: string\r\n  sum: string\r\n  notat: string\r\n  tak_storrelse?: string\r\n}\r\n\r\ninterface Todo {\r\n  id: string\r\n  task: string\r\n  completed: boolean\r\n  createdAt: string\r\n}\r\n\r\ninterface DashboardStats {\r\n  totalCustomers: number\r\n  pendingSpringMaintenance: number\r\n  pendingFallMaintenance: number\r\n  activeProjects: number\r\n}\r\n\r\ninterface TimeEntry {\r\n  id: string\r\n  date: string\r\n  start_time: string\r\n  end_time: string\r\n  project: string\r\n  comments?: string\r\n  total_hours?: number\r\n}\r\n\r\nexport default function DashboardPage() {\r\n  const [recentCustomers, setRecentCustomers] = useState<Customer[]>([])\r\n  const [upcomingInspections, setUpcomingInspections] = useState<Customer[]>([])\r\n  const [stats, setStats] = useState<DashboardStats>({\r\n    totalCustomers: 0,\r\n    pendingSpringMaintenance: 0,\r\n    pendingFallMaintenance: 0,\r\n    activeProjects: 0\r\n  })\r\n  const [loading, setLoading] = useState(true)\r\n  const [greeting, setGreeting] = useState('')\r\n  const [todos, setTodos] = useState<Todo[]>([\r\n    {\r\n      id: '1',\r\n      task: 'Bestille jord til Torvullvegen',\r\n      completed: false,\r\n      createdAt: new Date().toISOString()\r\n    },\r\n    {\r\n      id: '2',\r\n      task: 'Legge membran Nattenvegen 332',\r\n      completed: false,\r\n      createdAt: new Date().toISOString()\r\n    },\r\n    {\r\n      id: '3',\r\n      task: 'Ringe Kaugerud transport',\r\n      completed: false,\r\n      createdAt: new Date().toISOString()\r\n    }\r\n  ])\r\n  const [newTodo, setNewTodo] = useState('')\r\n  const [showAddForm, setShowAddForm] = useState(false)\r\n  const [recentTimeEntries, setRecentTimeEntries] = useState<TimeEntry[]>([])\r\n\r\n  const handleAddTodo = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!newTodo.trim()) return\r\n    \r\n    setTodos([...todos, {\r\n      id: Date.now().toString(),\r\n      task: newTodo,\r\n      completed: false,\r\n      createdAt: new Date().toISOString()\r\n    }])\r\n    setNewTodo('')\r\n    setShowAddForm(false)\r\n  }\r\n  const userName = 'Edgar' // Dette kan senere hentes fra en brukerkontekst eller API\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData()\r\n    fetchRecentTimeEntries()\r\n\r\n    const getGreeting = () => {\r\n      const hour = new Date().getHours()\r\n      \r\n      if (hour >= 5 && hour < 12) {\r\n        return 'God morgen'\r\n      } else if (hour >= 12 && hour < 17) {\r\n        return 'God ettermiddag'\r\n      } else if (hour >= 17 && hour < 22) {\r\n        return 'God kveld'\r\n      } else {\r\n        return 'God natt'\r\n      }\r\n    }\r\n\r\n    setGreeting(getGreeting())\r\n  }, [])\r\n\r\n  async function fetchRecentTimeEntries() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('time_entries')\r\n        .select('*')\r\n        .order('date', { ascending: false })\r\n        .limit(3)\r\n      if (error) {\r\n        console.error('Error fetching recent time entries:', error)\r\n        return\r\n      }\r\n      setRecentTimeEntries(data || [])\r\n    } catch (error) {\r\n      console.error('Unexpected error fetching recent time entries:', error)\r\n    }\r\n  }\r\n\r\n  async function fetchDashboardData() {\r\n    try {\r\n      setLoading(true)\r\n      \r\n      // Fetch all customers\r\n      const { data: customers, error } = await supabase\r\n        .from('abonnementer')\r\n        .select('*')\r\n      \r\n      if (error) {\r\n        console.error('Error fetching customers:', error)\r\n        return\r\n      }\r\n      \r\n      if (!customers) {\r\n        return\r\n      }\r\n      \r\n      // Calculate statistics\r\n      const totalCustomers = customers.length\r\n      \r\n      // Count customers with pending spring maintenance\r\n      const pendingSpringMaintenance = customers.filter(\r\n        customer => customer.var !== 'Ja'\r\n      ).length\r\n      \r\n      // Count customers with pending fall maintenance\r\n      const pendingFallMaintenance = customers.filter(\r\n        customer => customer.host !== 'Ja'\r\n      ).length\r\n      \r\n      // Fetch active projects\r\n      const { data: projects, error: projectsError } = await supabase\r\n        .from('projects')\r\n        .select('*')\r\n        .eq('status', 'active')\r\n      \r\n      if (projectsError) {\r\n        console.error('Error fetching projects:', projectsError)\r\n      }\r\n      \r\n      setStats({\r\n        totalCustomers,\r\n        pendingSpringMaintenance,\r\n        pendingFallMaintenance,\r\n        activeProjects: projects?.length || 0\r\n      })\r\n      \r\n      // Set upcoming inspections\r\n      const sortedByRenewal = [...customers]\r\n        .sort((a, b) => {\r\n          const dateA = a.fornyelsesdato ? new Date(a.fornyelsesdato).getTime() : 0\r\n          const dateB = b.fornyelsesdato ? new Date(b.fornyelsesdato).getTime() : 0\r\n          return dateA - dateB\r\n        })\r\n        .slice(0, 5)\r\n      \r\n      setUpcomingInspections(sortedByRenewal)\r\n      \r\n      // Set recent customers\r\n      const sortedByUpdate = [...customers]\r\n        .sort((a, b) => {\r\n          const dateA = a.fornyelsesdato ? new Date(a.fornyelsesdato).getTime() : 0\r\n          const dateB = b.fornyelsesdato ? new Date(b.fornyelsesdato).getTime() : 0\r\n          return dateB - dateA\r\n        })\r\n        .slice(0, 5)\r\n      \r\n      setRecentCustomers(sortedByUpdate)\r\n    } catch (error) {\r\n      console.error('Error in fetchDashboardData:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 p-4 md:p-8 ml-0 md:ml-64\">\r\n      <div className=\"max-w-full md:max-w-7xl xl:w-[140%] xl:-ml-[20%] mx-auto\">\r\n        <p className=\"text-2xl text-gray-400\">\r\n          {new Date().toLocaleDateString('no-NO', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' })}\r\n        </p>\r\n        <h1 className=\"text-4xl font-bold text-white\">{greeting}, {userName}</h1>\r\n        \r\n        {/* Header */}\r\n        <div className=\"mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-white\">Dashboard</h1>\r\n          <p className=\"text-gray-400 mt-2\">Oversikt over aktiviteter og status</p>\r\n        </div>\r\n\r\n        {/* Statistikk-kort */}\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Aktive prosjekter</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-blue-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.activeProjects\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Registrerte abonnementer</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-purple-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.totalCustomers\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Gjenstår vårvedlikehold</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-green-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.pendingSpringMaintenance\r\n              )}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-gray-400\">Gjenstår høstvedlikehold</h3>\r\n              <div className=\"w-10 h-10 rounded-full bg-yellow-900/50 flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-white mt-2\">\r\n              {loading ? (\r\n                <span className=\"inline-block w-8 h-6 bg-gray-700 animate-pulse rounded\"></span>\r\n              ) : (\r\n                stats.pendingFallMaintenance\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Todo List and Weather Side by Side */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h2 className=\"text-xl font-semibold text-white\">Todo-liste</h2>\r\n            <button \r\n              className=\"text-sm text-blue-400 hover:text-blue-300\"\r\n              onClick={() => setShowAddForm(!showAddForm)}\r\n            >\r\n              Legg til\r\n            </button>\r\n          </div>\r\n          \r\n          {showAddForm && (\r\n            <form onSubmit={handleAddTodo} className=\"mb-4\">\r\n              <div className=\"flex gap-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={newTodo}\r\n                  onChange={(e) => setNewTodo(e.target.value)}\r\n                  className=\"flex-1 bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Ny oppgave\"\r\n                  autoFocus\r\n                />\r\n                <button \r\n                  type=\"submit\"\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\r\n                >\r\n                  Lagre\r\n                </button>\r\n              </div>\r\n            </form>\r\n          )}\r\n          <div className=\"space-y-3\">\r\n            {todos.map(todo => (\r\n              <div key={todo.id} className=\"flex items-center justify-between py-3 px-4 bg-gray-700/50 rounded-lg\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <button \r\n                    className={`w-5 h-5 rounded border ${todo.completed ? 'bg-blue-500 border-blue-500' : 'border-gray-500'}`}\r\n                    onClick={() => setTodos(todos.map(t => \r\n                      t.id === todo.id ? {...t, completed: !t.completed} : t\r\n                    ))}\r\n                  >\r\n                    {todo.completed && (\r\n                      <svg className=\"w-3 h-3 mx-auto text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                  <p className={`text-white ${todo.completed ? 'line-through text-gray-500' : ''}`}>\r\n                    {todo.task}\r\n                  </p>\r\n                </div>\r\n                <button \r\n                  className=\"text-gray-400 hover:text-red-400\"\r\n                  onClick={() => setTodos(todos.filter(t => t.id !== todo.id))}\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n          {/* Weather Widget */}\r\n          <div>\r\n            <WeatherWidget />\r\n            <MaintenanceWidget />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Activities Grid */}\r\n        <div className=\"mb-6\">\r\n          {/* Aktivitetsliste */}\r\n          <div className=\"bg-gray-800 rounded-2xl p-4 md:p-6 border border-gray-700\">\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">Nylige aktiviteter</h2>\r\n            <div className=\"space-y-4\">\r\n              {recentTimeEntries.length === 0 ? (\r\n                <p className=\"text-gray-400\">Ingen nylige timeføringer</p>\r\n              ) : (\r\n                recentTimeEntries.map((entry) => (\r\n                  <div key={entry.id} className=\"flex items-center justify-between py-3 border-b border-gray-700 last:border-b-0\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"w-10 h-10 rounded-full bg-gray-700 flex items-center justify-center\">\r\n                        <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-white\">Ny timeføring registrert</p>\r\n                        <p className=\"text-sm text-gray-400\">Prosjekt: {entry.project}</p>\r\n                        <p className=\"text-sm text-gray-500\">{entry.date} {entry.start_time} - {entry.end_time}</p>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-400\">{entry.total_hours ? `${entry.total_hours} t` : ''}</span>\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Abonnement oversikt */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-white\">Kommende fornyelser</h2>\r\n              <Link href=\"/abonnement\" className=\"text-sm text-blue-400 hover:text-blue-300\">\r\n                Se alle\r\n              </Link>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"space-y-4\">\r\n                {[1, 2, 3].map((item) => (\r\n                  <div key={item} className=\"h-12 bg-gray-700 animate-pulse rounded\"></div>\r\n                ))}\r\n              </div>\r\n            ) : upcomingInspections.length > 0 ? (\r\n              <div className=\"space-y-4\">\r\n                {upcomingInspections.map((customer) => (\r\n                  <div key={customer.id} className=\"flex items-center justify-between py-2 border-b border-gray-700 last:border-b-0\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\r\n                      <div>\r\n                        <p className=\"text-white\">{customer.etternavn}</p>\r\n                        <p className=\"text-sm text-gray-400\">{customer.adresse}</p>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-400\">\r\n                      {customer.fornyelsesdato ? new Date(customer.fornyelsesdato).toLocaleDateString('no-NO') : 'Ikke satt'}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-400\">Ingen kommende fornyelser</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-white\">Vedlikehold status</h2>\r\n              <Link href=\"/abonnement\" className=\"text-sm text-blue-400 hover:text-blue-300\">\r\n                Se detaljer\r\n              </Link>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"space-y-4\">\r\n                {[1, 2].map((item) => (\r\n                  <div key={item} className=\"h-16 bg-gray-700 animate-pulse rounded mb-4\"></div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <div className=\"flex justify-between mb-2\">\r\n                    <span className=\"text-gray-400\">Vårvedlikehold</span>\r\n                    <span className=\"text-white\">{stats.pendingSpringMaintenance} gjenstår</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-700 rounded-full h-2.5\">\r\n                    <div \r\n                      className=\"bg-green-600 h-2.5 rounded-full\" \r\n                      style={{ \r\n                        width: `${stats.totalCustomers > 0 ? \r\n                          ((stats.totalCustomers - stats.pendingSpringMaintenance) / stats.totalCustomers) * 100 : 0}%` \r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div>\r\n                  <div className=\"flex justify-between mb-2\">\r\n                    <span className=\"text-gray-400\">Høstvedlikehold</span>\r\n                    <span className=\"text-white\">{stats.pendingFallMaintenance} gjenstår</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-700 rounded-full h-2.5\">\r\n                    <div \r\n                      className=\"bg-yellow-600 h-2.5 rounded-full\" \r\n                      style={{ \r\n                        width: `${stats.totalCustomers > 0 ? \r\n                          ((stats.totalCustomers - stats.pendingFallMaintenance) / stats.totalCustomers) * 100 : 0}%` \r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"pt-2 border-t border-gray-700\">\r\n                  <Link href=\"/abonnement/historikk\" className=\"text-sm text-blue-400 hover:text-blue-300\">\r\n                    Se tidligere vedlikehold\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Nylig oppdaterte kunder */}\r\n          <div className=\"bg-gray-800 rounded-2xl p-6 border border-gray-700\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h2 className=\"text-xl font-semibold text-white\">Nylig oppdaterte kunder</h2>\r\n              <Link href=\"/abonnement\" className=\"text-sm text-blue-400 hover:text-blue-300\">\r\n                Se alle\r\n              </Link>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"space-y-4\">\r\n                {[1, 2, 3].map((item) => (\r\n                  <div key={item} className=\"h-12 bg-gray-700 animate-pulse rounded\"></div>\r\n                ))}\r\n              </div>\r\n            ) : recentCustomers.length > 0 ? (\r\n              <div className=\"space-y-4\">\r\n                {recentCustomers.map((customer) => (\r\n                  <div key={customer.id} className=\"flex items-center justify-between py-2 border-b border-gray-700 last:border-b-0\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"w-2 h-2 rounded-full bg-purple-500\"></div>\r\n                      <div>\r\n                        <p className=\"text-white\">{customer.etternavn}</p>\r\n                        <p className=\"text-sm text-gray-400\">{customer.adresse}</p>\r\n                      </div>\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-400\">\r\n                      {customer.fornyelsesdato ? new Date(customer.fornyelsesdato).toLocaleDateString('no-NO') : 'Ikke satt'}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-400\">Ingen nylig oppdaterte kunder</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}