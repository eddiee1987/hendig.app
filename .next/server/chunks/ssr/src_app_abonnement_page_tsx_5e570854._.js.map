{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/abonnement/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { \r\n  CheckCircleIcon, \r\n  XCircleIcon,\r\n  CreditCardIcon,\r\n  ShieldCheckIcon,\r\n  ArrowPathIcon,\r\n  ArrowUpTrayIcon\r\n} from '@heroicons/react/24/outline'\r\nimport * as XLSX from 'xlsx'\r\n\r\ninterface AbonnementData {\r\n  etternavn: string\r\n  adresse: string\r\n  sted: string\r\n  kommune: string\r\n  var: string\r\n  host: string\r\n  epost: string\r\n  fakturert: string\r\n  mailVar: string\r\n  mailHost: string\r\n  tidsbrukSlatt: string\r\n  fornyelsesdato: string\r\n  sum: string\r\n  notat: string\r\n}\r\n\r\nexport default function Abonnement() {\r\n  const [abonnementer, setAbonnementer] = useState<AbonnementData[]>([])\r\n  const [importError, setImportError] = useState<string>('')\r\n\r\n  const handleFileImport = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (!file) return\r\n\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      try {\r\n        const data = e.target?.result\r\n        const workbook = XLSX.read(data, { type: 'binary' })\r\n        const sheetName = workbook.SheetNames[0]\r\n        const worksheet = workbook.Sheets[sheetName]\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet)\r\n\r\n        // Transform data to match our interface\r\n        const transformedData = jsonData.map((row: any) => ({\r\n          etternavn: row['Etternavn'] || '',\r\n          adresse: row['Adresse'] || '',\r\n          sted: row['Sted'] || '',\r\n          kommune: row['Kommune'] || '',\r\n          var: row['Vår'] || '',\r\n          host: row['Høst'] || '',\r\n          epost: row['Epost'] || '',\r\n          fakturert: row['Fakturert'] || '',\r\n          mailVar: row['Mail vår'] || '',\r\n          mailHost: row['Mail Høst'] || '',\r\n          tidsbrukSlatt: row['Tidsbruk slått'] || '',\r\n          fornyelsesdato: row['Fornyelsesdato'] || '',\r\n          sum: row['Sum'] || '',\r\n          notat: row['Notat'] || ''\r\n        }))\r\n\r\n        setAbonnementer(transformedData)\r\n        setImportError('')\r\n      } catch (error) {\r\n        setImportError('Kunne ikke importere filen. Sjekk at formatet er korrekt.')\r\n        console.error('Import error:', error)\r\n      }\r\n    }\r\n    reader.readAsBinaryString(file)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className=\"text-4xl font-bold text-white mb-4\">Vedlikeholdsabonementer</h1>\r\n        <p className=\"text-gray-400\">Administrer torvtak vedlikeholdsabonementer</p>\r\n      </div>\r\n\r\n      {/* Import seksjon */}\r\n      <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 mb-8\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold text-white mb-2\">Importer abonnementer</h2>\r\n            <p className=\"text-gray-400\">Last opp Excel-fil med abonnementsdata</p>\r\n          </div>\r\n          <label className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\">\r\n            <ArrowUpTrayIcon className=\"w-5 h-5 mr-2\" />\r\n            Velg fil\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx,.xls\"\r\n              onChange={handleFileImport}\r\n              className=\"hidden\"\r\n            />\r\n          </label>\r\n        </div>\r\n        {importError && (\r\n          <p className=\"text-red-500 mt-4\">{importError}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Abonnementsliste */}\r\n      {abonnementer.length > 0 && (\r\n        <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700\">\r\n          <h2 className=\"text-xl font-semibold text-white mb-4\">Importerte abonnementer</h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"text-left text-gray-400 border-b border-gray-700\">\r\n                  <th className=\"pb-3\">Navn</th>\r\n                  <th className=\"pb-3\">Adresse</th>\r\n                  <th className=\"pb-3\">Vår</th>\r\n                  <th className=\"pb-3\">Høst</th>\r\n                  <th className=\"pb-3\">Fornyelsesdato</th>\r\n                  <th className=\"pb-3\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {abonnementer.map((abonnement, index) => (\r\n                  <tr key={index} className=\"border-b border-gray-700 text-gray-300\">\r\n                    <td className=\"py-3\">{abonnement.etternavn}</td>\r\n                    <td className=\"py-3\">{abonnement.adresse}</td>\r\n                    <td className=\"py-3\">{abonnement.var}</td>\r\n                    <td className=\"py-3\">{abonnement.host}</td>\r\n                    <td className=\"py-3\">{abonnement.fornyelsesdato}</td>\r\n                    <td className=\"py-3\">\r\n                      <span className=\"px-2 py-1 text-xs rounded-full bg-green-900/20 text-green-400\">\r\n                        Aktiv\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}