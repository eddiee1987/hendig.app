{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Eidsheim/.ssh/driftig/src/app/api/customers/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport type { Customer } from '@/types'\r\n\r\n// GET /api/customers\r\nexport async function GET() {\r\n  // TODO: Implementer database-tilkobling\r\n  const customers: Customer[] = [\r\n    {\r\n      id: '1',\r\n      name: 'Olsen Familie',\r\n      address: 'Bergveien 12',\r\n      postalCode: '5003',\r\n      city: 'Bergen',\r\n      phone: '99887766',\r\n      email: 'olsen@example.com',\r\n      hasActiveSubscription: true,\r\n      nextInspection: new Date('2024-05-15')\r\n    }\r\n  ]\r\n  \r\n  return NextResponse.json(customers)\r\n}\r\n\r\n// POST /api/customers\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n    // TODO: Valider data og lagre i database\r\n    return NextResponse.json({ message: 'Kunde opprettet' }, { status: 201 })\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: 'Kunne ikke opprette kunde' },\r\n      { status: 400 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;;AAIO,eAAe;IACpB,wCAAwC;IACxC,MAAM,YAAwB;QAC5B;YACE,IAAI;YACJ,MAAM;YACN,SAAS;YACT,YAAY;YACZ,MAAM;YACN,OAAO;YACP,OAAO;YACP,uBAAuB;YACvB,gBAAgB,IAAI,KAAK;QAC3B;KACD;IAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,yCAAyC;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACzE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}